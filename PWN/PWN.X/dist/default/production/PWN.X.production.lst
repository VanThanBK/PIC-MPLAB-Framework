

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jun 07 14:40:23 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.42
    32                           ; Generated 13/04/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125                           
   126                           	psect	strings
   127  0003                     __pstrings:	
   128  0003                     stringtab:	
   129  0003                     __stringtab:	
   130                           
   131                           ;	String table - string pointers are 1 byte each
   132  0003  1BFF               	btfsc	btemp+1,7
   133  0004  280D               	ljmp	stringcode
   134  0005  1383               	bcf	3,7
   135  0006  187F               	btfsc	btemp+1,0
   136  0007  1783               	bsf	3,7
   137  0008  0800               	movf	0,w
   138  0009  0A84               	incf	4,f
   139  000A  1903               	skipnz
   140  000B  0AFF               	incf	btemp+1,f
   141  000C  0008               	return
   142  000D                     stringcode:	
   143  000D                     stringdir:	
   144  000D  3000               	movlw	high stringdir
   145  000E  008A               	movwf	10
   146  000F  0804               	movf	4,w
   147  0010  0A84               	incf	4,f
   148  0011  0782               	addwf	2,f
   149  0012                     __stringbase:	
   150  0012  3400               	retlw	0
   151  0013                     __end_of__stringtab:	
   152  0013                     _dpowers:	
   153  0013  3401               	retlw	1
   154  0014  3400               	retlw	0
   155  0015  3400               	retlw	0
   156  0016  3400               	retlw	0
   157  0017  340A               	retlw	10
   158  0018  3400               	retlw	0
   159  0019  3400               	retlw	0
   160  001A  3400               	retlw	0
   161  001B  3464               	retlw	100
   162  001C  3400               	retlw	0
   163  001D  3400               	retlw	0
   164  001E  3400               	retlw	0
   165  001F  34E8               	retlw	232
   166  0020  3403               	retlw	3
   167  0021  3400               	retlw	0
   168  0022  3400               	retlw	0
   169  0023  3410               	retlw	16
   170  0024  3427               	retlw	39
   171  0025  3400               	retlw	0
   172  0026  3400               	retlw	0
   173  0027  34A0               	retlw	160
   174  0028  3486               	retlw	134
   175  0029  3401               	retlw	1
   176  002A  3400               	retlw	0
   177  002B  3440               	retlw	64
   178  002C  3442               	retlw	66
   179  002D  340F               	retlw	15
   180  002E  3400               	retlw	0
   181  002F  3480               	retlw	128
   182  0030  3496               	retlw	150
   183  0031  3498               	retlw	152
   184  0032  3400               	retlw	0
   185  0033  3400               	retlw	0
   186  0034  34E1               	retlw	225
   187  0035  34F5               	retlw	245
   188  0036  3405               	retlw	5
   189  0037  3400               	retlw	0
   190  0038  34CA               	retlw	202
   191  0039  349A               	retlw	154
   192  003A  343B               	retlw	59
   193  003B                     __end_of_dpowers:	
   194  0015                     _CCPR1L	set	21
   195  00BC                     _CCP1Y	set	188
   196  00BD                     _CCP1X	set	189
   197  0090                     _T2CKPS0	set	144
   198  0091                     _T2CKPS1	set	145
   199  0092                     _TMR2ON	set	146
   200  00B8                     _CCP1M0	set	184
   201  00B9                     _CCP1M1	set	185
   202  00BA                     _CCP1M2	set	186
   203  00BB                     _CCP1M3	set	187
   204  003A                     _RC2	set	58
   205  0043                     _RD3	set	67
   206  0047                     _RD7	set	71
   207  0046                     _RD6	set	70
   208  0045                     _RD5	set	69
   209  0044                     _RD4	set	68
   210  0042                     _RD2	set	66
   211  0092                     _PR2	set	146
   212  043A                     _TRISC2	set	1082
   213  0447                     _TRISD7	set	1095
   214  0446                     _TRISD6	set	1094
   215  0445                     _TRISD5	set	1093
   216  0444                     _TRISD4	set	1092
   217  0443                     _TRISD3	set	1091
   218  0442                     _TRISD2	set	1090
   219  003B                     STR_2:	
   220  003B  3450               	retlw	80	;'P'
   221  003C  3457               	retlw	87	;'W'
   222  003D  344D               	retlw	77	;'M'
   223  003E  3420               	retlw	32	;' '
   224  003F  3450               	retlw	80	;'P'
   225  0040  3465               	retlw	101	;'e'
   226  0041  3472               	retlw	114	;'r'
   227  0042  3469               	retlw	105	;'i'
   228  0043  346F               	retlw	111	;'o'
   229  0044  3464               	retlw	100	;'d'
   230  0045  343A               	retlw	58	;':'
   231  0046  3400               	retlw	0
   232  0047                     STR_3:	
   233  0047  3425               	retlw	37	;'%'
   234  0048  346C               	retlw	108	;'l'
   235  0049  3475               	retlw	117	;'u'
   236  004A  342E               	retlw	46	;'.'
   237  004B  3425               	retlw	37	;'%'
   238  004C  3436               	retlw	54	;'6'
   239  004D  342E               	retlw	46	;'.'
   240  004E  3436               	retlw	54	;'6'
   241  004F  346C               	retlw	108	;'l'
   242  0050  3475               	retlw	117	;'u'
   243  0051  3400               	retlw	0
   244  0052                     STR_1:	
   245  0052  3425               	retlw	37	;'%'
   246  0053  3464               	retlw	100	;'d'
   247  0054  3400               	retlw	0
   248                           
   249                           ; #config settings
   250  0000                     
   251                           	psect	cinit
   252  07F5                     start_initialization:	
   253  07F5                     __initialization:	
   254                           
   255                           ; Clear objects allocated to BANK0
   256  07F5  1383               	bcf	3,7	;select IRP bank0
   257  07F6  304B               	movlw	low __pbssBANK0
   258  07F7  0084               	movwf	4
   259  07F8  305C               	movlw	low (__pbssBANK0+17)
   260  07F9  120A  118A  23FA   	fcall	clear_ram0
   261  07FC                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  07FC                     __end_of__initialization:	
   265  07FC  0183               	clrf	3
   266  07FD  120A  118A  2CF4   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  004B                     __pbssBANK0:	
   270  004B                     ftoa@buf:	
   271  004B                     	ds	17
   272                           
   273                           	psect	clrtext
   274  03FA                     clear_ram0:	
   275                           ;	Called with FSR containing the base address, and
   276                           ;	W with the last address+1
   277                           
   278  03FA  0064               	clrwdt	;clear the watchdog before getting into this loop
   279  03FB                     clrloop0:	
   280  03FB  0180               	clrf	0	;clear RAM location pointed to by FSR
   281  03FC  0A84               	incf	4,f	;increment pointer
   282  03FD  0604               	xorwf	4,w	;XOR with final address
   283  03FE  1903               	btfsc	3,2	;have we reached the end yet?
   284  03FF  3400               	retlw	0	;all done for this memory range, return
   285  0400  0604               	xorwf	4,w	;XOR again to restore value
   286  0401  2BFB               	goto	clrloop0	;do the next byte
   287                           
   288                           	psect	cstackCOMMON
   289  0070                     __pcstackCOMMON:	
   290  0070                     ?_LCDMode4Bit:	
   291  0070                     ?_LCDWriteCommand:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_LCDLatchData:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ??_LCDLatchData:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_PWMInit:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ??_PWMInit:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_Timer2Init:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ??_Timer2Init:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_LCDInit:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_LCDWriteByte:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_LCDWriteData:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_LCDClear:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_LCDPutChar:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?___ftpack:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ___ftpack@arg:	
   334                           ; 3 bytes @ 0x0
   335                           
   336                           
   337                           ; 3 bytes @ 0x0
   338  0070                     	ds	2
   339  0072                     ??_LCDMode4Bit:	
   340  0072                     ??_LCDWriteByte:	
   341                           ; 1 bytes @ 0x2
   342                           
   343                           
   344                           ; 1 bytes @ 0x2
   345  0072                     	ds	1
   346  0073                     LCDWriteByte@ch:	
   347  0073                     ___ftpack@exp:	
   348                           ; 1 bytes @ 0x3
   349                           
   350                           
   351                           ; 1 bytes @ 0x3
   352  0073                     	ds	1
   353  0074                     ??_LCDWriteCommand:	
   354  0074                     ??_LCDWriteData:	
   355                           ; 1 bytes @ 0x4
   356                           
   357  0074                     LCDWriteData@dt:	
   358                           ; 1 bytes @ 0x4
   359                           
   360  0074                     LCDWriteCommand@dt:	
   361                           ; 1 bytes @ 0x4
   362                           
   363  0074                     ___ftpack@sign:	
   364                           ; 1 bytes @ 0x4
   365                           
   366                           
   367                           ; 1 bytes @ 0x4
   368  0074                     	ds	1
   369  0075                     ??___ftpack:	
   370  0075                     ??_LCDInit:	
   371                           ; 1 bytes @ 0x5
   372                           
   373  0075                     ??_LCDClear:	
   374                           ; 1 bytes @ 0x5
   375                           
   376  0075                     ?_LCDMove:	
   377                           ; 1 bytes @ 0x5
   378                           
   379  0075                     ??_LCDPutChar:	
   380                           ; 1 bytes @ 0x5
   381                           
   382  0075                     LCDMove@x:	
   383                           ; 1 bytes @ 0x5
   384                           
   385  0075                     LCDPutChar@ch:	
   386                           ; 1 bytes @ 0x5
   387                           
   388                           
   389                           ; 1 bytes @ 0x5
   390  0075                     	ds	1
   391  0076                     ??_LCDMove:	
   392                           
   393                           ; 1 bytes @ 0x6
   394  0076                     	ds	2
   395  0078                     ?___awtoft:	
   396  0078                     ?___lbtoft:	
   397                           ; 3 bytes @ 0x8
   398                           
   399  0078                     ___awtoft@c:	
   400                           ; 3 bytes @ 0x8
   401                           
   402                           
   403                           ; 2 bytes @ 0x8
   404  0078                     	ds	2
   405  007A                     LCDMove@Ad:	
   406                           
   407                           ; 2 bytes @ 0xA
   408  007A                     	ds	1
   409  007B                     ??___awtoft:	
   410  007B                     ___lbtoft@c:	
   411                           ; 1 bytes @ 0xB
   412                           
   413                           
   414                           ; 1 bytes @ 0xB
   415  007B                     	ds	1
   416  007C                     LCDMove@y:	
   417                           
   418                           ; 1 bytes @ 0xC
   419  007C                     	ds	1
   420  007D                     ??_LCDPrint:	
   421  007D                     ___awtoft@sign:	
   422                           ; 1 bytes @ 0xD
   423                           
   424                           
   425                           ; 1 bytes @ 0xD
   426  007D                     	ds	1
   427                           
   428                           	psect	cstackBANK0
   429  0020                     __pcstackBANK0:	
   430  0020                     ?_LCDPrint:	
   431  0020                     ??___lbtoft:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0020                     LCDPrint@x:	
   435                           ; 1 bytes @ 0x0
   436                           
   437                           
   438                           ; 1 bytes @ 0x0
   439  0020                     	ds	1
   440  0021                     LCDPrint@str:	
   441                           
   442                           ; 2 bytes @ 0x1
   443  0021                     	ds	2
   444  0023                     LCDPrint@y:	
   445                           
   446                           ; 1 bytes @ 0x3
   447  0023                     	ds	1
   448  0024                     ?___ftmul:	
   449  0024                     ___ftmul@f1:	
   450                           ; 3 bytes @ 0x4
   451                           
   452                           
   453                           ; 3 bytes @ 0x4
   454  0024                     	ds	3
   455  0027                     ___ftmul@f2:	
   456                           
   457                           ; 3 bytes @ 0x7
   458  0027                     	ds	3
   459  002A                     ??___ftmul:	
   460                           
   461                           ; 1 bytes @ 0xA
   462  002A                     	ds	4
   463  002E                     ___ftmul@exp:	
   464                           
   465                           ; 1 bytes @ 0xE
   466  002E                     	ds	1
   467  002F                     ___ftmul@f3_as_product:	
   468                           
   469                           ; 3 bytes @ 0xF
   470  002F                     	ds	3
   471  0032                     ___ftmul@cntr:	
   472                           
   473                           ; 1 bytes @ 0x12
   474  0032                     	ds	1
   475  0033                     ___ftmul@sign:	
   476                           
   477                           ; 1 bytes @ 0x13
   478  0033                     	ds	1
   479  0034                     ?___fttol:	
   480  0034                     ___fttol@f1:	
   481                           ; 4 bytes @ 0x14
   482                           
   483                           
   484                           ; 3 bytes @ 0x14
   485  0034                     	ds	4
   486  0038                     ??___fttol:	
   487                           
   488                           ; 1 bytes @ 0x18
   489  0038                     	ds	4
   490  003C                     ___fttol@sign1:	
   491                           
   492                           ; 1 bytes @ 0x1C
   493  003C                     	ds	1
   494  003D                     ___fttol@lval:	
   495                           
   496                           ; 4 bytes @ 0x1D
   497  003D                     	ds	4
   498  0041                     ___fttol@exp1:	
   499                           
   500                           ; 1 bytes @ 0x21
   501  0041                     	ds	1
   502  0042                     ?_PWMControl:	
   503  0042                     PWMControl@sig:	
   504                           ; 1 bytes @ 0x22
   505                           
   506                           
   507                           ; 1 bytes @ 0x22
   508  0042                     	ds	1
   509  0043                     ??_PWMControl:	
   510                           
   511                           ; 1 bytes @ 0x23
   512  0043                     	ds	2
   513  0045                     PWMControl@percent:	
   514                           
   515                           ; 1 bytes @ 0x25
   516  0045                     	ds	1
   517  0046                     PWMControl@PWM_Reg:	
   518                           
   519                           ; 2 bytes @ 0x26
   520  0046                     	ds	2
   521  0048                     ??_main:	
   522                           
   523                           ; 1 bytes @ 0x28
   524  0048                     	ds	3
   525                           
   526                           	psect	maintext
   527  04F4                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 38 in file "PWN.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : B00/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       3       0       0       0
   550 ;;      Totals:         0       3       0       0       0
   551 ;;Total ram usage:        3 bytes
   552 ;; Hardware stack levels required when called:    5
   553 ;; This function calls:
   554 ;;		_LCDClear
   555 ;;		_LCDInit
   556 ;;		_LCDPrint
   557 ;;		_PWMControl
   558 ;;		_PWMInit
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _main
   566  04F4                     _main:	
   567                           
   568                           ;PWN.c: 39: _delay((unsigned long)((200)*(20000000/4000.0)));
   569                           
   570                           ;incstack = 0
   571                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   572  04F4  3006               	movlw	6
   573  04F5  1283               	bcf	3,5	;RP0=0, select bank0
   574  04F6  1303               	bcf	3,6	;RP1=0, select bank0
   575  04F7  00CA               	movwf	??_main+2
   576  04F8  3013               	movlw	19
   577  04F9  00C9               	movwf	??_main+1
   578  04FA  30AD               	movlw	173
   579  04FB  00C8               	movwf	??_main
   580  04FC                     u1437:	
   581  04FC  0BC8               	decfsz	??_main,f
   582  04FD  2CFC               	goto	u1437
   583  04FE  0BC9               	decfsz	??_main+1,f
   584  04FF  2CFC               	goto	u1437
   585  0500  0BCA               	decfsz	??_main+2,f
   586  0501  2CFC               	goto	u1437
   587                           
   588                           ;PWN.c: 40: LCDInit();
   589  0502  120A  118A  2463  120A  118A  	fcall	_LCDInit
   590                           
   591                           ;PWN.c: 41: LCDClear();
   592  0507  120A  118A  23EF  120A  118A  	fcall	_LCDClear
   593                           
   594                           ;PWN.c: 42: LCDPrint(1,1,"PWM Period:");
   595  050C  1283               	bcf	3,5	;RP0=0, select bank0
   596  050D  1303               	bcf	3,6	;RP1=0, select bank0
   597  050E  01A0               	clrf	LCDPrint@x
   598  050F  0AA0               	incf	LCDPrint@x,f
   599  0510  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   600  0511  00A1               	movwf	LCDPrint@str
   601  0512  3080               	movlw	128
   602  0513  00A2               	movwf	LCDPrint@str+1
   603  0514  3001               	movlw	1
   604  0515  120A  118A  24C2  120A  118A  	fcall	_LCDPrint
   605                           
   606                           ;PWN.c: 43: PWMInit();
   607  051A  120A  118A  2436  120A  118A  	fcall	_PWMInit
   608  051F                     l1171:	
   609                           ;PWN.c: 44: while(1){
   610                           
   611                           
   612                           ;PWN.c: 45: PWMControl(60,0);
   613  051F  1283               	bcf	3,5	;RP0=0, select bank0
   614  0520  1303               	bcf	3,6	;RP1=0, select bank0
   615  0521  01C2               	clrf	PWMControl@sig
   616  0522  303C               	movlw	60
   617  0523  120A  118A  2595  120A  118A  	fcall	_PWMControl
   618  0528  2D1F               	goto	l1171
   619  0529                     __end_of_main:	
   620                           ;PWN.c: 46: }
   621                           ;PWN.c: 47: return;
   622                           
   623                           
   624                           	psect	text1
   625  0436                     __ptext1:	
   626 ;; *************** function _PWMInit *****************
   627 ;; Defined at:
   628 ;;		line 50 in file "PWN.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    1
   649 ;; This function calls:
   650 ;;		_Timer2Init
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _PWMInit
   658  0436                     _PWMInit:	
   659                           
   660                           ;PWN.c: 52: TRISC2 = 0;
   661                           
   662                           ;incstack = 0
   663                           ; Regs used in _PWMInit: [wreg+status,2+status,0+pclath+cstack]
   664  0436  1683               	bsf	3,5	;RP0=1, select bank1
   665  0437  1303               	bcf	3,6	;RP1=0, select bank1
   666  0438  1107               	bcf	7,2	;volatile
   667                           
   668                           ;PWN.c: 53: RC2 = 1;
   669  0439  1283               	bcf	3,5	;RP0=0, select bank0
   670  043A  1303               	bcf	3,6	;RP1=0, select bank0
   671  043B  1507               	bsf	7,2	;volatile
   672                           
   673                           ;PWN.c: 55: CCP1M3 = 1;
   674  043C  1597               	bsf	23,3	;volatile
   675                           
   676                           ;PWN.c: 56: CCP1M2 = 1;
   677  043D  1517               	bsf	23,2	;volatile
   678                           
   679                           ;PWN.c: 57: CCP1M1 = 1;
   680  043E  1497               	bsf	23,1	;volatile
   681                           
   682                           ;PWN.c: 58: CCP1M0 = 1;
   683  043F  1417               	bsf	23,0	;volatile
   684                           
   685                           ;PWN.c: 60: Timer2Init();
   686  0440  120A  118A  2414   	fcall	_Timer2Init
   687                           
   688                           ;PWN.c: 64: TMR2ON = 1;
   689  0443  1283               	bcf	3,5	;RP0=0, select bank0
   690  0444  1303               	bcf	3,6	;RP1=0, select bank0
   691  0445  1512               	bsf	18,2	;volatile
   692  0446  0008               	return
   693  0447                     __end_of_PWMInit:	
   694                           
   695                           	psect	text2
   696  0414                     __ptext2:	
   697 ;; *************** function _Timer2Init *****************
   698 ;; Defined at:
   699 ;;		line 67 in file "PWN.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_PWMInit
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           
   727                           ;psect for function _Timer2Init
   728  0414                     _Timer2Init:	
   729                           
   730                           ;PWN.c: 69: PR2 = 0xff;
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _Timer2Init: [wreg]
   734  0414  30FF               	movlw	255
   735  0415  1683               	bsf	3,5	;RP0=1, select bank1
   736  0416  1303               	bcf	3,6	;RP1=0, select bank1
   737  0417  0092               	movwf	18	;volatile
   738                           
   739                           ;PWN.c: 76: T2CKPS1 = 1;
   740  0418  1283               	bcf	3,5	;RP0=0, select bank0
   741  0419  1303               	bcf	3,6	;RP1=0, select bank0
   742  041A  1492               	bsf	18,1	;volatile
   743                           
   744                           ;PWN.c: 77: T2CKPS0 = 1;
   745  041B  1412               	bsf	18,0	;volatile
   746  041C  0008               	return
   747  041D                     __end_of_Timer2Init:	
   748                           
   749                           	psect	text3
   750  0595                     __ptext3:	
   751 ;; *************** function _PWMControl *****************
   752 ;; Defined at:
   753 ;;		line 81 in file "PWN.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  percent         1    wreg     unsigned char 
   756 ;;  sig             1   34[BANK0 ] unsigned char 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  percent         1   37[BANK0 ] unsigned char 
   759 ;;  PWM_Reg         2   38[BANK0 ] unsigned int 
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       1       0       0       0
   770 ;;      Locals:         0       3       0       0       0
   771 ;;      Temps:          0       2       0       0       0
   772 ;;      Totals:         0       6       0       0       0
   773 ;;Total ram usage:        6 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    2
   776 ;; This function calls:
   777 ;;		___awtoft
   778 ;;		___ftmul
   779 ;;		___fttol
   780 ;;		___lbtoft
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _PWMControl
   788  0595                     _PWMControl:	
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _PWMControl: [wreg+status,2+status,0+pclath+cstack]
   792                           ;PWMControl@percent stored from wreg
   793  0595  1283               	bcf	3,5	;RP0=0, select bank0
   794  0596  1303               	bcf	3,6	;RP1=0, select bank0
   795  0597  00C5               	movwf	PWMControl@percent
   796                           
   797                           ;PWN.c: 82: unsigned int PWM_Reg;
   798                           ;PWN.c: 83: if(sig==0) PWM_Reg = (100-percent)*10.23;
   799  0598  0842               	movf	PWMControl@sig,w
   800  0599  1D03               	btfss	3,2
   801  059A  2DB8               	goto	l1117
   802  059B  0845               	movf	PWMControl@percent,w
   803  059C  00C3               	movwf	??_PWMControl
   804  059D  01C4               	clrf	??_PWMControl+1
   805  059E  09C3               	comf	??_PWMControl,f
   806  059F  09C4               	comf	??_PWMControl+1,f
   807  05A0  0AC3               	incf	??_PWMControl,f
   808  05A1  1903               	skipnz
   809  05A2  0AC4               	incf	??_PWMControl+1,f
   810  05A3  0843               	movf	??_PWMControl,w
   811  05A4  3E64               	addlw	100
   812  05A5  00F8               	movwf	___awtoft@c
   813  05A6  0844               	movf	??_PWMControl+1,w
   814  05A7  1803               	skipnc
   815  05A8  3E01               	addlw	1
   816  05A9  3E00               	addlw	0
   817  05AA  00F9               	movwf	___awtoft@c+1
   818  05AB  120A  118A  24A1  120A  118A  	fcall	___awtoft
   819  05B0  0878               	movf	?___awtoft,w
   820  05B1  1283               	bcf	3,5	;RP0=0, select bank0
   821  05B2  1303               	bcf	3,6	;RP1=0, select bank0
   822  05B3  00A7               	movwf	___ftmul@f2
   823  05B4  0879               	movf	?___awtoft+1,w
   824  05B5  00A8               	movwf	___ftmul@f2+1
   825  05B6  087A               	movf	?___awtoft+2,w
   826  05B7  2DC5               	goto	L2
   827  05B8                     l1117:	
   828                           
   829                           ;PWN.c: 84: else PWM_Reg = percent*10.23;
   830  05B8  0845               	movf	PWMControl@percent,w
   831  05B9  120A  118A  2447  120A  118A  	fcall	___lbtoft
   832  05BE  0878               	movf	?___lbtoft,w
   833  05BF  1283               	bcf	3,5	;RP0=0, select bank0
   834  05C0  1303               	bcf	3,6	;RP1=0, select bank0
   835  05C1  00A7               	movwf	___ftmul@f2
   836  05C2  0879               	movf	?___lbtoft+1,w
   837  05C3  00A8               	movwf	___ftmul@f2+1
   838  05C4  087A               	movf	?___lbtoft+2,w
   839  05C5                     L2:	
   840  05C5  00A9               	movwf	___ftmul@f2+2
   841  05C6  30AE               	movlw	174
   842  05C7  00A4               	movwf	___ftmul@f1
   843  05C8  3023               	movlw	35
   844  05C9  00A5               	movwf	___ftmul@f1+1
   845  05CA  3041               	movlw	65
   846  05CB  00A6               	movwf	___ftmul@f1+2
   847  05CC  120A  118A  2722  120A  118A  	fcall	___ftmul
   848  05D1  1283               	bcf	3,5	;RP0=0, select bank0
   849  05D2  1303               	bcf	3,6	;RP1=0, select bank0
   850  05D3  0824               	movf	?___ftmul,w
   851  05D4  00B4               	movwf	___fttol@f1
   852  05D5  0825               	movf	?___ftmul+1,w
   853  05D6  00B5               	movwf	___fttol@f1+1
   854  05D7  0826               	movf	?___ftmul+2,w
   855  05D8  00B6               	movwf	___fttol@f1+2
   856  05D9  120A  118A  2694  120A  118A  	fcall	___fttol
   857  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   858  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   859  05E0  0835               	movf	?___fttol+1,w
   860  05E1  00C7               	movwf	PWMControl@PWM_Reg+1
   861  05E2  0834               	movf	?___fttol,w
   862  05E3  00C6               	movwf	PWMControl@PWM_Reg
   863                           
   864                           ;PWN.c: 85: CCPR1L = (PWM_Reg>>2);
   865  05E4  0847               	movf	PWMControl@PWM_Reg+1,w
   866  05E5  00C4               	movwf	??_PWMControl+1
   867  05E6  0846               	movf	PWMControl@PWM_Reg,w
   868  05E7  00C3               	movwf	??_PWMControl
   869  05E8  1003               	clrc
   870  05E9  0CC4               	rrf	??_PWMControl+1,f
   871  05EA  0CC3               	rrf	??_PWMControl,f
   872  05EB  1003               	clrc
   873  05EC  0CC4               	rrf	??_PWMControl+1,f
   874  05ED  0CC3               	rrf	??_PWMControl,f
   875  05EE  0843               	movf	??_PWMControl,w
   876  05EF  0095               	movwf	21	;volatile
   877                           
   878                           ;PWN.c: 86: CCP1X = (PWM_Reg>>1)&0x01;
   879  05F0  0847               	movf	PWMControl@PWM_Reg+1,w
   880  05F1  00C4               	movwf	??_PWMControl+1
   881  05F2  0846               	movf	PWMControl@PWM_Reg,w
   882  05F3  00C3               	movwf	??_PWMControl
   883  05F4  1003               	clrc
   884  05F5  0CC4               	rrf	??_PWMControl+1,f
   885  05F6  0CC3               	rrf	??_PWMControl,f
   886  05F7  1C43               	btfss	??_PWMControl,0
   887  05F8  2DFD               	goto	u1350
   888  05F9  1283               	bcf	3,5	;RP0=0, select bank0
   889  05FA  1303               	bcf	3,6	;RP1=0, select bank0
   890  05FB  1697               	bsf	23,5	;volatile
   891  05FC  2E00               	goto	l1123
   892  05FD                     u1350:	
   893  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   894  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   895  05FF  1297               	bcf	23,5	;volatile
   896  0600                     l1123:	
   897                           
   898                           ;PWN.c: 87: CCP1Y = PWM_Reg&0x01;
   899  0600  1C46               	btfss	PWMControl@PWM_Reg,0
   900  0601  2E06               	goto	u1370
   901  0602  1283               	bcf	3,5	;RP0=0, select bank0
   902  0603  1303               	bcf	3,6	;RP1=0, select bank0
   903  0604  1617               	bsf	23,4	;volatile
   904  0605  0008               	return
   905  0606                     u1370:	
   906  0606  1283               	bcf	3,5	;RP0=0, select bank0
   907  0607  1303               	bcf	3,6	;RP1=0, select bank0
   908  0608  1217               	bcf	23,4	;volatile
   909  0609  0008               	return
   910  060A                     __end_of_PWMControl:	
   911                           
   912                           	psect	text4
   913  0447                     __ptext4:	
   914 ;; *************** function ___lbtoft *****************
   915 ;; Defined at:
   916 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  c               1    wreg     unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  c               1   11[COMMON] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  3    8[COMMON] float 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         3       0       0       0       0
   931 ;;      Locals:         1       0       0       0       0
   932 ;;      Temps:          0       4       0       0       0
   933 ;;      Totals:         4       4       0       0       0
   934 ;;Total ram usage:        8 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		___ftpack
   939 ;; This function is called by:
   940 ;;		_PWMControl
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function ___lbtoft
   946  0447                     ___lbtoft:	
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
   950                           ;___lbtoft@c stored from wreg
   951  0447  00FB               	movwf	___lbtoft@c
   952  0448  087B               	movf	___lbtoft@c,w
   953  0449  1283               	bcf	3,5	;RP0=0, select bank0
   954  044A  1303               	bcf	3,6	;RP1=0, select bank0
   955  044B  00A0               	movwf	??___lbtoft
   956  044C  01A1               	clrf	??___lbtoft+1
   957  044D  01A2               	clrf	??___lbtoft+2
   958  044E  0820               	movf	??___lbtoft,w
   959  044F  00F0               	movwf	___ftpack@arg
   960  0450  0821               	movf	??___lbtoft+1,w
   961  0451  00F1               	movwf	___ftpack@arg+1
   962  0452  0822               	movf	??___lbtoft+2,w
   963  0453  00F2               	movwf	___ftpack@arg+2
   964  0454  308E               	movlw	142
   965  0455  00A3               	movwf	??___lbtoft+3
   966  0456  0823               	movf	??___lbtoft+3,w
   967  0457  00F3               	movwf	___ftpack@exp
   968  0458  01F4               	clrf	___ftpack@sign
   969  0459  120A  118A  2529   	fcall	___ftpack
   970  045C  0870               	movf	?___ftpack,w
   971  045D  00F8               	movwf	?___lbtoft
   972  045E  0871               	movf	?___ftpack+1,w
   973  045F  00F9               	movwf	?___lbtoft+1
   974  0460  0872               	movf	?___ftpack+2,w
   975  0461  00FA               	movwf	?___lbtoft+2
   976  0462  0008               	return
   977  0463                     __end_of___lbtoft:	
   978                           
   979                           	psect	text5
   980  0694                     __ptext5:	
   981 ;; *************** function ___fttol *****************
   982 ;; Defined at:
   983 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  f1              3   20[BANK0 ] float 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  lval            4   29[BANK0 ] unsigned long 
   988 ;;  exp1            1   33[BANK0 ] unsigned char 
   989 ;;  sign1           1   28[BANK0 ] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  4   20[BANK0 ] long 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       4       0       0       0
  1000 ;;      Locals:         0       6       0       0       0
  1001 ;;      Temps:          0       4       0       0       0
  1002 ;;      Totals:         0      14       0       0       0
  1003 ;;Total ram usage:       14 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_PWMControl
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function ___fttol
  1014  0694                     ___fttol:	
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1018  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0696  0834               	movf	___fttol@f1,w
  1021  0697  00B8               	movwf	??___fttol
  1022  0698  0835               	movf	___fttol@f1+1,w
  1023  0699  00B9               	movwf	??___fttol+1
  1024  069A  0836               	movf	___fttol@f1+2,w
  1025  069B  00BA               	movwf	??___fttol+2
  1026  069C  1003               	clrc
  1027  069D  0D39               	rlf	??___fttol+1,w
  1028  069E  0D3A               	rlf	??___fttol+2,w
  1029  069F  00BB               	movwf	??___fttol+3
  1030  06A0  083B               	movf	??___fttol+3,w
  1031  06A1  00C1               	movwf	___fttol@exp1
  1032  06A2  0841               	movf	___fttol@exp1,w
  1033  06A3  1D03               	btfss	3,2
  1034  06A4  2EAE               	goto	l1059
  1035  06A5  3000               	movlw	0
  1036  06A6  00B7               	movwf	?___fttol+3
  1037  06A7  3000               	movlw	0
  1038  06A8  00B6               	movwf	?___fttol+2
  1039  06A9  3000               	movlw	0
  1040  06AA  00B5               	movwf	?___fttol+1
  1041  06AB  3000               	movlw	0
  1042  06AC  00B4               	movwf	?___fttol
  1043  06AD  0008               	return
  1044  06AE                     l1059:	
  1045  06AE  0834               	movf	___fttol@f1,w
  1046  06AF  00B8               	movwf	??___fttol
  1047  06B0  0835               	movf	___fttol@f1+1,w
  1048  06B1  00B9               	movwf	??___fttol+1
  1049  06B2  0836               	movf	___fttol@f1+2,w
  1050  06B3  00BA               	movwf	??___fttol+2
  1051  06B4  3017               	movlw	23
  1052  06B5                     u1245:	
  1053  06B5  1003               	clrc
  1054  06B6  0CBA               	rrf	??___fttol+2,f
  1055  06B7  0CB9               	rrf	??___fttol+1,f
  1056  06B8  0CB8               	rrf	??___fttol,f
  1057  06B9  3EFF               	addlw	-1
  1058  06BA  1D03               	skipz
  1059  06BB  2EB5               	goto	u1245
  1060  06BC  0838               	movf	??___fttol,w
  1061  06BD  00BB               	movwf	??___fttol+3
  1062  06BE  083B               	movf	??___fttol+3,w
  1063  06BF  00BC               	movwf	___fttol@sign1
  1064  06C0  17B5               	bsf	___fttol@f1+1,7
  1065  06C1  30FF               	movlw	255
  1066  06C2  05B4               	andwf	___fttol@f1,f
  1067  06C3  30FF               	movlw	255
  1068  06C4  05B5               	andwf	___fttol@f1+1,f
  1069  06C5  3000               	movlw	0
  1070  06C6  05B6               	andwf	___fttol@f1+2,f
  1071  06C7  0834               	movf	___fttol@f1,w
  1072  06C8  00BD               	movwf	___fttol@lval
  1073  06C9  0835               	movf	___fttol@f1+1,w
  1074  06CA  00BE               	movwf	___fttol@lval+1
  1075  06CB  0836               	movf	___fttol@f1+2,w
  1076  06CC  00BF               	movwf	___fttol@lval+2
  1077  06CD  01C0               	clrf	___fttol@lval+3
  1078  06CE  308E               	movlw	142
  1079  06CF  02C1               	subwf	___fttol@exp1,f
  1080  06D0  1FC1               	btfss	___fttol@exp1,7
  1081  06D1  2EF0               	goto	l1079
  1082  06D2  0841               	movf	___fttol@exp1,w
  1083  06D3  3A80               	xorlw	128
  1084  06D4  3E8F               	addlw	143
  1085  06D5  1803               	skipnc
  1086  06D6  2EE0               	goto	l1077
  1087  06D7  3000               	movlw	0
  1088  06D8  00B7               	movwf	?___fttol+3
  1089  06D9  3000               	movlw	0
  1090  06DA  00B6               	movwf	?___fttol+2
  1091  06DB  3000               	movlw	0
  1092  06DC  00B5               	movwf	?___fttol+1
  1093  06DD  3000               	movlw	0
  1094  06DE  00B4               	movwf	?___fttol
  1095  06DF  0008               	return
  1096  06E0                     l1077:	
  1097  06E0  3001               	movlw	1
  1098  06E1                     u1275:	
  1099  06E1  1003               	clrc
  1100  06E2  0CC0               	rrf	___fttol@lval+3,f
  1101  06E3  0CBF               	rrf	___fttol@lval+2,f
  1102  06E4  0CBE               	rrf	___fttol@lval+1,f
  1103  06E5  0CBD               	rrf	___fttol@lval,f
  1104  06E6  3EFF               	addlw	-1
  1105  06E7  1D03               	skipz
  1106  06E8  2EE1               	goto	u1275
  1107  06E9  3001               	movlw	1
  1108  06EA  00B8               	movwf	??___fttol
  1109  06EB  0838               	movf	??___fttol,w
  1110  06EC  07C1               	addwf	___fttol@exp1,f
  1111  06ED  1903               	btfsc	3,2
  1112  06EE  2F0B               	goto	l1087
  1113  06EF  2EE0               	goto	l1077
  1114  06F0                     l1079:	
  1115  06F0  3018               	movlw	24
  1116  06F1  0241               	subwf	___fttol@exp1,w
  1117  06F2  1C03               	skipc
  1118  06F3  2F08               	goto	l536
  1119  06F4  3000               	movlw	0
  1120  06F5  00B7               	movwf	?___fttol+3
  1121  06F6  3000               	movlw	0
  1122  06F7  00B6               	movwf	?___fttol+2
  1123  06F8  3000               	movlw	0
  1124  06F9  00B5               	movwf	?___fttol+1
  1125  06FA  3000               	movlw	0
  1126  06FB  00B4               	movwf	?___fttol
  1127  06FC  0008               	return
  1128  06FD                     l1085:	
  1129  06FD  3001               	movlw	1
  1130  06FE  00B8               	movwf	??___fttol
  1131  06FF                     u1305:	
  1132  06FF  1003               	clrc
  1133  0700  0DBD               	rlf	___fttol@lval,f
  1134  0701  0DBE               	rlf	___fttol@lval+1,f
  1135  0702  0DBF               	rlf	___fttol@lval+2,f
  1136  0703  0DC0               	rlf	___fttol@lval+3,f
  1137  0704  0BB8               	decfsz	??___fttol,f
  1138  0705  2EFF               	goto	u1305
  1139  0706  3001               	movlw	1
  1140  0707  02C1               	subwf	___fttol@exp1,f
  1141  0708                     l536:	
  1142  0708  0841               	movf	___fttol@exp1,w
  1143  0709  1D03               	btfss	3,2
  1144  070A  2EFD               	goto	l1085
  1145  070B                     l1087:	
  1146  070B  083C               	movf	___fttol@sign1,w
  1147  070C  1903               	btfsc	3,2
  1148  070D  2F19               	goto	l1091
  1149  070E  09BD               	comf	___fttol@lval,f
  1150  070F  09BE               	comf	___fttol@lval+1,f
  1151  0710  09BF               	comf	___fttol@lval+2,f
  1152  0711  09C0               	comf	___fttol@lval+3,f
  1153  0712  0ABD               	incf	___fttol@lval,f
  1154  0713  1903               	skipnz
  1155  0714  0ABE               	incf	___fttol@lval+1,f
  1156  0715  1903               	skipnz
  1157  0716  0ABF               	incf	___fttol@lval+2,f
  1158  0717  1903               	skipnz
  1159  0718  0AC0               	incf	___fttol@lval+3,f
  1160  0719                     l1091:	
  1161  0719  0840               	movf	___fttol@lval+3,w
  1162  071A  00B7               	movwf	?___fttol+3
  1163  071B  083F               	movf	___fttol@lval+2,w
  1164  071C  00B6               	movwf	?___fttol+2
  1165  071D  083E               	movf	___fttol@lval+1,w
  1166  071E  00B5               	movwf	?___fttol+1
  1167  071F  083D               	movf	___fttol@lval,w
  1168  0720  00B4               	movwf	?___fttol
  1169  0721  0008               	return
  1170  0722                     __end_of___fttol:	
  1171                           
  1172                           	psect	text6
  1173  0722                     __ptext6:	
  1174 ;; *************** function ___ftmul *****************
  1175 ;; Defined at:
  1176 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  f1              3    4[BANK0 ] float 
  1179 ;;  f2              3    7[BANK0 ] float 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
  1182 ;;  sign            1   19[BANK0 ] unsigned char 
  1183 ;;  cntr            1   18[BANK0 ] unsigned char 
  1184 ;;  exp             1   14[BANK0 ] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  3    4[BANK0 ] float 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       6       0       0       0
  1195 ;;      Locals:         0       6       0       0       0
  1196 ;;      Temps:          0       4       0       0       0
  1197 ;;      Totals:         0      16       0       0       0
  1198 ;;Total ram usage:       16 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    1
  1201 ;; This function calls:
  1202 ;;		___ftpack
  1203 ;; This function is called by:
  1204 ;;		_PWMControl
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function ___ftmul
  1210  0722                     ___ftmul:	
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1214  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0724  0824               	movf	___ftmul@f1,w
  1217  0725  00AA               	movwf	??___ftmul
  1218  0726  0825               	movf	___ftmul@f1+1,w
  1219  0727  00AB               	movwf	??___ftmul+1
  1220  0728  0826               	movf	___ftmul@f1+2,w
  1221  0729  00AC               	movwf	??___ftmul+2
  1222  072A  1003               	clrc
  1223  072B  0D2B               	rlf	??___ftmul+1,w
  1224  072C  0D2C               	rlf	??___ftmul+2,w
  1225  072D  00AD               	movwf	??___ftmul+3
  1226  072E  082D               	movf	??___ftmul+3,w
  1227  072F  00AE               	movwf	___ftmul@exp
  1228  0730  082E               	movf	___ftmul@exp,w
  1229  0731  1D03               	btfss	3,2
  1230  0732  2F3A               	goto	l1009
  1231  0733  3000               	movlw	0
  1232  0734  00A4               	movwf	?___ftmul
  1233  0735  3000               	movlw	0
  1234  0736  00A5               	movwf	?___ftmul+1
  1235  0737  3000               	movlw	0
  1236  0738  00A6               	movwf	?___ftmul+2
  1237  0739  0008               	return
  1238  073A                     l1009:	
  1239  073A  0827               	movf	___ftmul@f2,w
  1240  073B  00AA               	movwf	??___ftmul
  1241  073C  0828               	movf	___ftmul@f2+1,w
  1242  073D  00AB               	movwf	??___ftmul+1
  1243  073E  0829               	movf	___ftmul@f2+2,w
  1244  073F  00AC               	movwf	??___ftmul+2
  1245  0740  1003               	clrc
  1246  0741  0D2B               	rlf	??___ftmul+1,w
  1247  0742  0D2C               	rlf	??___ftmul+2,w
  1248  0743  00AD               	movwf	??___ftmul+3
  1249  0744  082D               	movf	??___ftmul+3,w
  1250  0745  00B3               	movwf	___ftmul@sign
  1251  0746  0833               	movf	___ftmul@sign,w
  1252  0747  1D03               	btfss	3,2
  1253  0748  2F50               	goto	l1015
  1254  0749  3000               	movlw	0
  1255  074A  00A4               	movwf	?___ftmul
  1256  074B  3000               	movlw	0
  1257  074C  00A5               	movwf	?___ftmul+1
  1258  074D  3000               	movlw	0
  1259  074E  00A6               	movwf	?___ftmul+2
  1260  074F  0008               	return
  1261  0750                     l1015:	
  1262  0750  0833               	movf	___ftmul@sign,w
  1263  0751  3E7B               	addlw	123
  1264  0752  00AA               	movwf	??___ftmul
  1265  0753  082A               	movf	??___ftmul,w
  1266  0754  07AE               	addwf	___ftmul@exp,f
  1267  0755  0824               	movf	___ftmul@f1,w
  1268  0756  00AA               	movwf	??___ftmul
  1269  0757  0825               	movf	___ftmul@f1+1,w
  1270  0758  00AB               	movwf	??___ftmul+1
  1271  0759  0826               	movf	___ftmul@f1+2,w
  1272  075A  00AC               	movwf	??___ftmul+2
  1273  075B  3010               	movlw	16
  1274  075C                     u1115:	
  1275  075C  1003               	clrc
  1276  075D  0CAC               	rrf	??___ftmul+2,f
  1277  075E  0CAB               	rrf	??___ftmul+1,f
  1278  075F  0CAA               	rrf	??___ftmul,f
  1279  0760  3EFF               	addlw	-1
  1280  0761  1D03               	skipz
  1281  0762  2F5C               	goto	u1115
  1282  0763  082A               	movf	??___ftmul,w
  1283  0764  00AD               	movwf	??___ftmul+3
  1284  0765  082D               	movf	??___ftmul+3,w
  1285  0766  00B3               	movwf	___ftmul@sign
  1286  0767  0827               	movf	___ftmul@f2,w
  1287  0768  00AA               	movwf	??___ftmul
  1288  0769  0828               	movf	___ftmul@f2+1,w
  1289  076A  00AB               	movwf	??___ftmul+1
  1290  076B  0829               	movf	___ftmul@f2+2,w
  1291  076C  00AC               	movwf	??___ftmul+2
  1292  076D  3010               	movlw	16
  1293  076E                     u1125:	
  1294  076E  1003               	clrc
  1295  076F  0CAC               	rrf	??___ftmul+2,f
  1296  0770  0CAB               	rrf	??___ftmul+1,f
  1297  0771  0CAA               	rrf	??___ftmul,f
  1298  0772  3EFF               	addlw	-1
  1299  0773  1D03               	skipz
  1300  0774  2F6E               	goto	u1125
  1301  0775  082A               	movf	??___ftmul,w
  1302  0776  00AD               	movwf	??___ftmul+3
  1303  0777  082D               	movf	??___ftmul+3,w
  1304  0778  06B3               	xorwf	___ftmul@sign,f
  1305  0779  3080               	movlw	128
  1306  077A  00AA               	movwf	??___ftmul
  1307  077B  082A               	movf	??___ftmul,w
  1308  077C  05B3               	andwf	___ftmul@sign,f
  1309  077D  17A5               	bsf	___ftmul@f1+1,7
  1310  077E  17A8               	bsf	___ftmul@f2+1,7
  1311  077F  30FF               	movlw	255
  1312  0780  05A7               	andwf	___ftmul@f2,f
  1313  0781  30FF               	movlw	255
  1314  0782  05A8               	andwf	___ftmul@f2+1,f
  1315  0783  3000               	movlw	0
  1316  0784  05A9               	andwf	___ftmul@f2+2,f
  1317  0785  3000               	movlw	0
  1318  0786  00AF               	movwf	___ftmul@f3_as_product
  1319  0787  3000               	movlw	0
  1320  0788  00B0               	movwf	___ftmul@f3_as_product+1
  1321  0789  3000               	movlw	0
  1322  078A  00B1               	movwf	___ftmul@f3_as_product+2
  1323  078B  3007               	movlw	7
  1324  078C  00AA               	movwf	??___ftmul
  1325  078D  082A               	movf	??___ftmul,w
  1326  078E  00B2               	movwf	___ftmul@cntr
  1327  078F                     l1027:	
  1328  078F  1C24               	btfss	___ftmul@f1,0
  1329  0790  2F9F               	goto	l1031
  1330  0791  0827               	movf	___ftmul@f2,w
  1331  0792  07AF               	addwf	___ftmul@f3_as_product,f
  1332  0793  0828               	movf	___ftmul@f2+1,w
  1333  0794  1103               	clrz
  1334  0795  1803               	skipnc
  1335  0796  0A28               	incf	___ftmul@f2+1,w
  1336  0797  1D03               	btfss	3,2
  1337  0798  07B0               	addwf	___ftmul@f3_as_product+1,f
  1338  0799  0829               	movf	___ftmul@f2+2,w
  1339  079A  1103               	clrz
  1340  079B  1803               	skipnc
  1341  079C  0A29               	incf	___ftmul@f2+2,w
  1342  079D  1D03               	btfss	3,2
  1343  079E  07B1               	addwf	___ftmul@f3_as_product+2,f
  1344  079F                     l1031:	
  1345  079F  3001               	movlw	1
  1346  07A0                     u1155:	
  1347  07A0  1003               	clrc
  1348  07A1  0CA6               	rrf	___ftmul@f1+2,f
  1349  07A2  0CA5               	rrf	___ftmul@f1+1,f
  1350  07A3  0CA4               	rrf	___ftmul@f1,f
  1351  07A4  3EFF               	addlw	-1
  1352  07A5  1D03               	skipz
  1353  07A6  2FA0               	goto	u1155
  1354  07A7  3001               	movlw	1
  1355  07A8                     u1165:	
  1356  07A8  1003               	clrc
  1357  07A9  0DA7               	rlf	___ftmul@f2,f
  1358  07AA  0DA8               	rlf	___ftmul@f2+1,f
  1359  07AB  0DA9               	rlf	___ftmul@f2+2,f
  1360  07AC  3EFF               	addlw	-1
  1361  07AD  1D03               	skipz
  1362  07AE  2FA8               	goto	u1165
  1363  07AF  3001               	movlw	1
  1364  07B0  02B2               	subwf	___ftmul@cntr,f
  1365  07B1  1D03               	btfss	3,2
  1366  07B2  2F8F               	goto	l1027
  1367  07B3  3009               	movlw	9
  1368  07B4  00AA               	movwf	??___ftmul
  1369  07B5  082A               	movf	??___ftmul,w
  1370  07B6  00B2               	movwf	___ftmul@cntr
  1371  07B7                     l1039:	
  1372  07B7  1C24               	btfss	___ftmul@f1,0
  1373  07B8  2FC7               	goto	l1043
  1374  07B9  0827               	movf	___ftmul@f2,w
  1375  07BA  07AF               	addwf	___ftmul@f3_as_product,f
  1376  07BB  0828               	movf	___ftmul@f2+1,w
  1377  07BC  1103               	clrz
  1378  07BD  1803               	skipnc
  1379  07BE  0A28               	incf	___ftmul@f2+1,w
  1380  07BF  1D03               	btfss	3,2
  1381  07C0  07B0               	addwf	___ftmul@f3_as_product+1,f
  1382  07C1  0829               	movf	___ftmul@f2+2,w
  1383  07C2  1103               	clrz
  1384  07C3  1803               	skipnc
  1385  07C4  0A29               	incf	___ftmul@f2+2,w
  1386  07C5  1D03               	btfss	3,2
  1387  07C6  07B1               	addwf	___ftmul@f3_as_product+2,f
  1388  07C7                     l1043:	
  1389  07C7  3001               	movlw	1
  1390  07C8                     u1205:	
  1391  07C8  1003               	clrc
  1392  07C9  0CA6               	rrf	___ftmul@f1+2,f
  1393  07CA  0CA5               	rrf	___ftmul@f1+1,f
  1394  07CB  0CA4               	rrf	___ftmul@f1,f
  1395  07CC  3EFF               	addlw	-1
  1396  07CD  1D03               	skipz
  1397  07CE  2FC8               	goto	u1205
  1398  07CF  3001               	movlw	1
  1399  07D0                     u1215:	
  1400  07D0  1003               	clrc
  1401  07D1  0CB1               	rrf	___ftmul@f3_as_product+2,f
  1402  07D2  0CB0               	rrf	___ftmul@f3_as_product+1,f
  1403  07D3  0CAF               	rrf	___ftmul@f3_as_product,f
  1404  07D4  3EFF               	addlw	-1
  1405  07D5  1D03               	skipz
  1406  07D6  2FD0               	goto	u1215
  1407  07D7  3001               	movlw	1
  1408  07D8  02B2               	subwf	___ftmul@cntr,f
  1409  07D9  1D03               	btfss	3,2
  1410  07DA  2FB7               	goto	l1039
  1411  07DB  082F               	movf	___ftmul@f3_as_product,w
  1412  07DC  00F0               	movwf	___ftpack@arg
  1413  07DD  0830               	movf	___ftmul@f3_as_product+1,w
  1414  07DE  00F1               	movwf	___ftpack@arg+1
  1415  07DF  0831               	movf	___ftmul@f3_as_product+2,w
  1416  07E0  00F2               	movwf	___ftpack@arg+2
  1417  07E1  082E               	movf	___ftmul@exp,w
  1418  07E2  00AA               	movwf	??___ftmul
  1419  07E3  082A               	movf	??___ftmul,w
  1420  07E4  00F3               	movwf	___ftpack@exp
  1421  07E5  0833               	movf	___ftmul@sign,w
  1422  07E6  00AB               	movwf	??___ftmul+1
  1423  07E7  082B               	movf	??___ftmul+1,w
  1424  07E8  00F4               	movwf	___ftpack@sign
  1425  07E9  120A  118A  2529   	fcall	___ftpack
  1426  07EC  0870               	movf	?___ftpack,w
  1427  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1428  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1429  07EF  00A4               	movwf	?___ftmul
  1430  07F0  0871               	movf	?___ftpack+1,w
  1431  07F1  00A5               	movwf	?___ftmul+1
  1432  07F2  0872               	movf	?___ftpack+2,w
  1433  07F3  00A6               	movwf	?___ftmul+2
  1434  07F4  0008               	return
  1435  07F5                     __end_of___ftmul:	
  1436                           
  1437                           	psect	text7
  1438  04A1                     __ptext7:	
  1439 ;; *************** function ___awtoft *****************
  1440 ;; Defined at:
  1441 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  c               2    8[COMMON] int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  sign            1   13[COMMON] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  3    8[COMMON] float 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         3       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0
  1457 ;;      Temps:          2       0       0       0       0
  1458 ;;      Totals:         6       0       0       0       0
  1459 ;;Total ram usage:        6 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    1
  1462 ;; This function calls:
  1463 ;;		___ftpack
  1464 ;; This function is called by:
  1465 ;;		_PWMControl
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function ___awtoft
  1471  04A1                     ___awtoft:	
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1475  04A1  01FD               	clrf	___awtoft@sign
  1476  04A2  1FF9               	btfss	___awtoft@c+1,7
  1477  04A3  2CAB               	goto	l999
  1478  04A4  09F8               	comf	___awtoft@c,f
  1479  04A5  09F9               	comf	___awtoft@c+1,f
  1480  04A6  0AF8               	incf	___awtoft@c,f
  1481  04A7  1903               	skipnz
  1482  04A8  0AF9               	incf	___awtoft@c+1,f
  1483  04A9  01FD               	clrf	___awtoft@sign
  1484  04AA  0AFD               	incf	___awtoft@sign,f
  1485  04AB                     l999:	
  1486  04AB  0878               	movf	___awtoft@c,w
  1487  04AC  00F0               	movwf	___ftpack@arg
  1488  04AD  0879               	movf	___awtoft@c+1,w
  1489  04AE  00F1               	movwf	___ftpack@arg+1
  1490  04AF  01F2               	clrf	___ftpack@arg+2
  1491  04B0  308E               	movlw	142
  1492  04B1  00FB               	movwf	??___awtoft
  1493  04B2  087B               	movf	??___awtoft,w
  1494  04B3  00F3               	movwf	___ftpack@exp
  1495  04B4  087D               	movf	___awtoft@sign,w
  1496  04B5  00FC               	movwf	??___awtoft+1
  1497  04B6  087C               	movf	??___awtoft+1,w
  1498  04B7  00F4               	movwf	___ftpack@sign
  1499  04B8  120A  118A  2529   	fcall	___ftpack
  1500  04BB  0870               	movf	?___ftpack,w
  1501  04BC  00F8               	movwf	?___awtoft
  1502  04BD  0871               	movf	?___ftpack+1,w
  1503  04BE  00F9               	movwf	?___awtoft+1
  1504  04BF  0872               	movf	?___ftpack+2,w
  1505  04C0  00FA               	movwf	?___awtoft+2
  1506  04C1  0008               	return
  1507  04C2                     __end_of___awtoft:	
  1508                           
  1509                           	psect	text8
  1510  0529                     __ptext8:	
  1511 ;; *************** function ___ftpack *****************
  1512 ;; Defined at:
  1513 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  arg             3    0[COMMON] unsigned um
  1516 ;;  exp             1    3[COMMON] unsigned char 
  1517 ;;  sign            1    4[COMMON] unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  3    0[COMMON] float 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         5       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0
  1531 ;;      Temps:          3       0       0       0       0
  1532 ;;      Totals:         8       0       0       0       0
  1533 ;;Total ram usage:        8 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		___awtoft
  1539 ;;		___ftmul
  1540 ;;		___lbtoft
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function ___ftpack
  1546  0529                     ___ftpack:	
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1550  0529  0873               	movf	___ftpack@exp,w
  1551  052A  1903               	btfsc	3,2
  1552  052B  2D31               	goto	l953
  1553  052C  0872               	movf	___ftpack@arg+2,w
  1554  052D  0471               	iorwf	___ftpack@arg+1,w
  1555  052E  0470               	iorwf	___ftpack@arg,w
  1556  052F  1D03               	skipz
  1557  0530  2D44               	goto	l959
  1558  0531                     l953:	
  1559  0531  3000               	movlw	0
  1560  0532  00F0               	movwf	?___ftpack
  1561  0533  3000               	movlw	0
  1562  0534  00F1               	movwf	?___ftpack+1
  1563  0535  3000               	movlw	0
  1564  0536  00F2               	movwf	?___ftpack+2
  1565  0537  0008               	return
  1566  0538                     l957:	
  1567  0538  3001               	movlw	1
  1568  0539  00F5               	movwf	??___ftpack
  1569  053A  0875               	movf	??___ftpack,w
  1570  053B  07F3               	addwf	___ftpack@exp,f
  1571  053C  3001               	movlw	1
  1572  053D                     u975:	
  1573  053D  1003               	clrc
  1574  053E  0CF2               	rrf	___ftpack@arg+2,f
  1575  053F  0CF1               	rrf	___ftpack@arg+1,f
  1576  0540  0CF0               	rrf	___ftpack@arg,f
  1577  0541  3EFF               	addlw	-1
  1578  0542  1D03               	skipz
  1579  0543  2D3D               	goto	u975
  1580  0544                     l959:	
  1581  0544  30FE               	movlw	254
  1582  0545  0572               	andwf	___ftpack@arg+2,w
  1583  0546  1903               	btfsc	3,2
  1584  0547  2D5F               	goto	l437
  1585  0548  2D38               	goto	l957
  1586  0549                     l961:	
  1587  0549  3001               	movlw	1
  1588  054A  00F5               	movwf	??___ftpack
  1589  054B  0875               	movf	??___ftpack,w
  1590  054C  07F3               	addwf	___ftpack@exp,f
  1591  054D  3001               	movlw	1
  1592  054E  07F0               	addwf	___ftpack@arg,f
  1593  054F  3000               	movlw	0
  1594  0550  1803               	skipnc
  1595  0551  3001               	movlw	1
  1596  0552  07F1               	addwf	___ftpack@arg+1,f
  1597  0553  3000               	movlw	0
  1598  0554  1803               	skipnc
  1599  0555  3001               	movlw	1
  1600  0556  07F2               	addwf	___ftpack@arg+2,f
  1601  0557  3001               	movlw	1
  1602  0558                     u995:	
  1603  0558  1003               	clrc
  1604  0559  0CF2               	rrf	___ftpack@arg+2,f
  1605  055A  0CF1               	rrf	___ftpack@arg+1,f
  1606  055B  0CF0               	rrf	___ftpack@arg,f
  1607  055C  3EFF               	addlw	-1
  1608  055D  1D03               	skipz
  1609  055E  2D58               	goto	u995
  1610  055F                     l437:	
  1611  055F  30FF               	movlw	255
  1612  0560  0572               	andwf	___ftpack@arg+2,w
  1613  0561  1903               	btfsc	3,2
  1614  0562  2D6E               	goto	l969
  1615  0563  2D49               	goto	l961
  1616  0564                     l967:	
  1617  0564  3001               	movlw	1
  1618  0565  02F3               	subwf	___ftpack@exp,f
  1619  0566  3001               	movlw	1
  1620  0567                     u1015:	
  1621  0567  1003               	clrc
  1622  0568  0DF0               	rlf	___ftpack@arg,f
  1623  0569  0DF1               	rlf	___ftpack@arg+1,f
  1624  056A  0DF2               	rlf	___ftpack@arg+2,f
  1625  056B  3EFF               	addlw	-1
  1626  056C  1D03               	skipz
  1627  056D  2D67               	goto	u1015
  1628  056E                     l969:	
  1629  056E  1BF1               	btfsc	___ftpack@arg+1,7
  1630  056F  2D74               	goto	l444
  1631  0570  3002               	movlw	2
  1632  0571  0273               	subwf	___ftpack@exp,w
  1633  0572  1803               	skipnc
  1634  0573  2D64               	goto	l967
  1635  0574                     l444:	
  1636  0574  1873               	btfsc	___ftpack@exp,0
  1637  0575  2D7C               	goto	l445
  1638  0576  30FF               	movlw	255
  1639  0577  05F0               	andwf	___ftpack@arg,f
  1640  0578  307F               	movlw	127
  1641  0579  05F1               	andwf	___ftpack@arg+1,f
  1642  057A  30FF               	movlw	255
  1643  057B  05F2               	andwf	___ftpack@arg+2,f
  1644  057C                     l445:	
  1645  057C  1003               	clrc
  1646  057D  0CF3               	rrf	___ftpack@exp,f
  1647  057E  0873               	movf	___ftpack@exp,w
  1648  057F  00F5               	movwf	??___ftpack
  1649  0580  01F6               	clrf	??___ftpack+1
  1650  0581  01F7               	clrf	??___ftpack+2
  1651  0582  3010               	movlw	16
  1652  0583                     u1055:	
  1653  0583  1003               	clrc
  1654  0584  0DF5               	rlf	??___ftpack,f
  1655  0585  0DF6               	rlf	??___ftpack+1,f
  1656  0586  0DF7               	rlf	??___ftpack+2,f
  1657  0587  3EFF               	addlw	-1
  1658  0588  1D03               	skipz
  1659  0589  2D83               	goto	u1055
  1660  058A  0875               	movf	??___ftpack,w
  1661  058B  04F0               	iorwf	___ftpack@arg,f
  1662  058C  0876               	movf	??___ftpack+1,w
  1663  058D  04F1               	iorwf	___ftpack@arg+1,f
  1664  058E  0877               	movf	??___ftpack+2,w
  1665  058F  04F2               	iorwf	___ftpack@arg+2,f
  1666  0590  0874               	movf	___ftpack@sign,w
  1667  0591  1903               	btfsc	3,2
  1668  0592  0008               	return
  1669  0593  17F2               	bsf	___ftpack@arg+2,7
  1670  0594  0008               	return
  1671  0595                     __end_of___ftpack:	
  1672                           
  1673                           	psect	text9
  1674  04C2                     __ptext9:	
  1675 ;; *************** function _LCDPrint *****************
  1676 ;; Defined at:
  1677 ;;		line 76 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  y               1    wreg     unsigned char 
  1680 ;;  x               1    0[BANK0 ] unsigned char 
  1681 ;;  str             2    1[BANK0 ] PTR unsigned char 
  1682 ;;		 -> ftoa@buf(17), STR_2(12), LCDPrintNumber@str(7), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  y               1    3[BANK0 ] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         0       3       0       0       0
  1695 ;;      Locals:         0       1       0       0       0
  1696 ;;      Temps:          1       0       0       0       0
  1697 ;;      Totals:         1       4       0       0       0
  1698 ;;Total ram usage:        5 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    4
  1701 ;; This function calls:
  1702 ;;		_LCDMove
  1703 ;;		_LCDPutChar
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;;		_LCDPrintNumber
  1707 ;;		_LCDPrintFNumber
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _LCDPrint
  1713  04C2                     _LCDPrint:	
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _LCDPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1717                           ;LCDPrint@y stored from wreg
  1718  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1719  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1720  04C4  00A3               	movwf	LCDPrint@y
  1721                           
  1722                           ;MyLCD.c: 78: LCDMove(y,x);
  1723  04C5  0820               	movf	LCDPrint@x,w
  1724  04C6  00FD               	movwf	??_LCDPrint
  1725  04C7  087D               	movf	??_LCDPrint,w
  1726  04C8  00F5               	movwf	LCDMove@x
  1727  04C9  0823               	movf	LCDPrint@y,w
  1728  04CA  120A  118A  2481  120A  118A  	fcall	_LCDMove
  1729  04CF                     l1111:	
  1730                           ;MyLCD.c: 79: while(*str)
  1731                           
  1732  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1733  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1734  04D1  0822               	movf	LCDPrint@str+1,w
  1735  04D2  00FF               	movwf	127
  1736  04D3  0821               	movf	LCDPrint@str,w
  1737  04D4  0084               	movwf	4
  1738  04D5  120A  118A  2003  120A  118A  	fcall	stringtab
  1739  04DA  3A00               	xorlw	0
  1740  04DB  1903               	btfsc	3,2
  1741  04DC  0008               	return
  1742                           
  1743                           ;MyLCD.c: 80: {
  1744                           ;MyLCD.c: 81: LCDPutChar(*str);
  1745  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1746  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1747  04DF  0822               	movf	LCDPrint@str+1,w
  1748  04E0  00FF               	movwf	127
  1749  04E1  0821               	movf	LCDPrint@str,w
  1750  04E2  0084               	movwf	4
  1751  04E3  120A  118A  2003  120A  118A  	fcall	stringtab
  1752  04E8  120A  118A  23F4  120A  118A  	fcall	_LCDPutChar
  1753                           
  1754                           ;MyLCD.c: 82: str++;
  1755  04ED  3001               	movlw	1
  1756  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1757  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1758  04F0  07A1               	addwf	LCDPrint@str,f
  1759  04F1  1803               	skipnc
  1760  04F2  0AA2               	incf	LCDPrint@str+1,f
  1761  04F3  2CCF               	goto	l1111
  1762  04F4                     __end_of_LCDPrint:	
  1763                           
  1764                           	psect	text10
  1765  03F4                     __ptext10:	
  1766 ;; *************** function _LCDPutChar *****************
  1767 ;; Defined at:
  1768 ;;		line 72 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  ch              1    wreg     unsigned char 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  ch              1    5[COMMON] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         0       0       0       0       0
  1783 ;;      Locals:         1       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0
  1785 ;;      Totals:         1       0       0       0       0
  1786 ;;Total ram usage:        1 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    3
  1789 ;; This function calls:
  1790 ;;		_LCDWriteData
  1791 ;; This function is called by:
  1792 ;;		_LCDPrint
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _LCDPutChar
  1798  03F4                     _LCDPutChar:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  1802                           ;LCDPutChar@ch stored from wreg
  1803  03F4  00F5               	movwf	LCDPutChar@ch
  1804                           
  1805                           ;MyLCD.c: 74: LCDWriteData(ch);
  1806  03F5  0875               	movf	LCDPutChar@ch,w
  1807  03F6  120A  118A  240B   	fcall	_LCDWriteData
  1808  03F9  0008               	return
  1809  03FA                     __end_of_LCDPutChar:	
  1810                           
  1811                           	psect	text11
  1812  040B                     __ptext11:	
  1813 ;; *************** function _LCDWriteData *****************
  1814 ;; Defined at:
  1815 ;;		line 43 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  dt              1    wreg     unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  dt              1    4[COMMON] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         1       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0
  1832 ;;      Totals:         1       0       0       0       0
  1833 ;;Total ram usage:        1 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    2
  1836 ;; This function calls:
  1837 ;;		_LCDWriteByte
  1838 ;; This function is called by:
  1839 ;;		_LCDPutChar
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _LCDWriteData
  1845  040B                     _LCDWriteData:	
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in _LCDWriteData: [wreg+status,2+status,0+pclath+cstack]
  1849                           ;LCDWriteData@dt stored from wreg
  1850  040B  00F4               	movwf	LCDWriteData@dt
  1851                           
  1852                           ;MyLCD.c: 45: RD2=1;
  1853  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1854  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1855  040E  1508               	bsf	8,2	;volatile
  1856                           
  1857                           ;MyLCD.c: 47: LCDWriteByte(dt);
  1858  040F  0874               	movf	LCDWriteData@dt,w
  1859  0410  120A  118A  260A   	fcall	_LCDWriteByte
  1860  0413  0008               	return
  1861  0414                     __end_of_LCDWriteData:	
  1862                           
  1863                           	psect	text12
  1864  0481                     __ptext12:	
  1865 ;; *************** function _LCDMove *****************
  1866 ;; Defined at:
  1867 ;;		line 66 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  y               1    wreg     unsigned char 
  1870 ;;  x               1    5[COMMON] unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  y               1   12[COMMON] unsigned char 
  1873 ;;  Ad              2   10[COMMON] unsigned int 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         1       0       0       0       0
  1884 ;;      Locals:         3       0       0       0       0
  1885 ;;      Temps:          4       0       0       0       0
  1886 ;;      Totals:         8       0       0       0       0
  1887 ;;Total ram usage:        8 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    3
  1890 ;; This function calls:
  1891 ;;		_LCDWriteCommand
  1892 ;; This function is called by:
  1893 ;;		_LCDPrint
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _LCDMove
  1899  0481                     _LCDMove:	
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _LCDMove: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1903                           ;LCDMove@y stored from wreg
  1904  0481  00FC               	movwf	LCDMove@y
  1905                           
  1906                           ;MyLCD.c: 68: unsigned int Ad;
  1907                           ;MyLCD.c: 69: Ad = 64*(y-1)+(x-1)+0x80;
  1908  0482  087C               	movf	LCDMove@y,w
  1909  0483  00F6               	movwf	??_LCDMove
  1910  0484  01F7               	clrf	??_LCDMove+1
  1911  0485  3006               	movlw	6
  1912  0486  00FF               	movwf	127
  1913  0487                     u1075:	
  1914  0487  1003               	clrc
  1915  0488  0DF6               	rlf	??_LCDMove,f
  1916  0489  0DF7               	rlf	??_LCDMove+1,f
  1917  048A  0BFF               	decfsz	127,f
  1918  048B  2C87               	goto	u1075
  1919  048C  0875               	movf	LCDMove@x,w
  1920  048D  0776               	addwf	??_LCDMove,w
  1921  048E  00F8               	movwf	??_LCDMove+2
  1922  048F  3000               	movlw	0
  1923  0490  1803               	skipnc
  1924  0491  3001               	movlw	1
  1925  0492  0777               	addwf	??_LCDMove+1,w
  1926  0493  00F9               	movwf	??_LCDMove+3
  1927  0494  0878               	movf	??_LCDMove+2,w
  1928  0495  3E3F               	addlw	63
  1929  0496  00FA               	movwf	LCDMove@Ad
  1930  0497  0879               	movf	??_LCDMove+3,w
  1931  0498  1803               	skipnc
  1932  0499  3E01               	addlw	1
  1933  049A  3E00               	addlw	0
  1934  049B  00FB               	movwf	LCDMove@Ad+1
  1935                           
  1936                           ;MyLCD.c: 70: LCDWriteCommand(Ad);
  1937  049C  087A               	movf	LCDMove@Ad,w
  1938  049D  120A  118A  2402   	fcall	_LCDWriteCommand
  1939  04A0  0008               	return
  1940  04A1                     __end_of_LCDMove:	
  1941                           
  1942                           	psect	text13
  1943  0463                     __ptext13:	
  1944 ;; *************** function _LCDInit *****************
  1945 ;; Defined at:
  1946 ;;		line 5 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		_LCDMode4Bit
  1969 ;;		_LCDWriteCommand
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _LCDInit
  1977  0463                     _LCDInit:	
  1978                           
  1979                           ;MyLCD.c: 7: TRISD2 =0;
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  1983  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0465  1108               	bcf	8,2	;volatile
  1986                           
  1987                           ;MyLCD.c: 9: TRISD3 =0;
  1988  0466  1188               	bcf	8,3	;volatile
  1989                           
  1990                           ;MyLCD.c: 10: TRISD4 =0;
  1991  0467  1208               	bcf	8,4	;volatile
  1992                           
  1993                           ;MyLCD.c: 11: TRISD5 =0;
  1994  0468  1288               	bcf	8,5	;volatile
  1995                           
  1996                           ;MyLCD.c: 12: TRISD6 =0;
  1997  0469  1308               	bcf	8,6	;volatile
  1998                           
  1999                           ;MyLCD.c: 13: TRISD7 =0;
  2000  046A  1388               	bcf	8,7	;volatile
  2001                           
  2002                           ;MyLCD.c: 15: LCDMode4Bit();
  2003  046B  120A  118A  241D  120A  118A  	fcall	_LCDMode4Bit
  2004                           
  2005                           ;MyLCD.c: 16: LCDWriteCommand(0x28);
  2006  0470  3028               	movlw	40
  2007  0471  120A  118A  2402  120A  118A  	fcall	_LCDWriteCommand
  2008                           
  2009                           ;MyLCD.c: 17: LCDWriteCommand(0x0C);
  2010  0476  300C               	movlw	12
  2011  0477  120A  118A  2402  120A  118A  	fcall	_LCDWriteCommand
  2012                           
  2013                           ;MyLCD.c: 18: LCDWriteCommand(0x06);
  2014  047C  3006               	movlw	6
  2015  047D  120A  118A  2402   	fcall	_LCDWriteCommand
  2016  0480  0008               	return
  2017  0481                     __end_of_LCDInit:	
  2018                           
  2019                           	psect	text14
  2020  041D                     __ptext14:	
  2021 ;; *************** function _LCDMode4Bit *****************
  2022 ;; Defined at:
  2023 ;;		line 20 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    1
  2044 ;; This function calls:
  2045 ;;		_LCDLatchData
  2046 ;; This function is called by:
  2047 ;;		_LCDInit
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _LCDMode4Bit
  2053  041D                     _LCDMode4Bit:	
  2054                           
  2055                           ;MyLCD.c: 22: RD2=0;
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _LCDMode4Bit: [wreg+status,2+status,0+pclath+cstack]
  2059  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2060  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2061  041F  1108               	bcf	8,2	;volatile
  2062                           
  2063                           ;MyLCD.c: 24: RD4=0;
  2064  0420  1208               	bcf	8,4	;volatile
  2065                           
  2066                           ;MyLCD.c: 25: RD5=1;
  2067  0421  1688               	bsf	8,5	;volatile
  2068                           
  2069                           ;MyLCD.c: 26: RD6=0;
  2070  0422  1308               	bcf	8,6	;volatile
  2071                           
  2072                           ;MyLCD.c: 27: RD7=0;
  2073  0423  1388               	bcf	8,7	;volatile
  2074                           
  2075                           ;MyLCD.c: 28: LCDLatchData();
  2076  0424  120A  118A  2428   	fcall	_LCDLatchData
  2077  0427  0008               	return
  2078  0428                     __end_of_LCDMode4Bit:	
  2079                           
  2080                           	psect	text15
  2081  03EF                     __ptext15:	
  2082 ;; *************** function _LCDClear *****************
  2083 ;; Defined at:
  2084 ;;		line 62 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    3
  2105 ;; This function calls:
  2106 ;;		_LCDWriteCommand
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _LCDClear
  2114  03EF                     _LCDClear:	
  2115                           
  2116                           ;MyLCD.c: 64: LCDWriteCommand(0x01);
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  2120  03EF  3001               	movlw	1
  2121  03F0  120A  118A  2402   	fcall	_LCDWriteCommand
  2122  03F3  0008               	return
  2123  03F4                     __end_of_LCDClear:	
  2124                           
  2125                           	psect	text16
  2126  0402                     __ptext16:	
  2127 ;; *************** function _LCDWriteCommand *****************
  2128 ;; Defined at:
  2129 ;;		line 49 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  dt              1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  dt              1    4[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         1       0       0       0       0
  2147 ;;Total ram usage:        1 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    2
  2150 ;; This function calls:
  2151 ;;		_LCDWriteByte
  2152 ;; This function is called by:
  2153 ;;		_LCDInit
  2154 ;;		_LCDClear
  2155 ;;		_LCDMove
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _LCDWriteCommand
  2161  0402                     _LCDWriteCommand:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _LCDWriteCommand: [wreg+status,2+status,0+pclath+cstack]
  2165                           ;LCDWriteCommand@dt stored from wreg
  2166  0402  00F4               	movwf	LCDWriteCommand@dt
  2167                           
  2168                           ;MyLCD.c: 51: RD2=0;
  2169  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0405  1108               	bcf	8,2	;volatile
  2172                           
  2173                           ;MyLCD.c: 53: LCDWriteByte(dt);
  2174  0406  0874               	movf	LCDWriteCommand@dt,w
  2175  0407  120A  118A  260A   	fcall	_LCDWriteByte
  2176  040A  0008               	return
  2177  040B                     __end_of_LCDWriteCommand:	
  2178                           
  2179                           	psect	text17
  2180  060A                     __ptext17:	
  2181 ;; *************** function _LCDWriteByte *****************
  2182 ;; Defined at:
  2183 ;;		line 30 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  ch              1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  ch              1    3[COMMON] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         1       0       0       0       0
  2199 ;;      Temps:          1       0       0       0       0
  2200 ;;      Totals:         2       0       0       0       0
  2201 ;;Total ram usage:        2 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		_LCDLatchData
  2206 ;; This function is called by:
  2207 ;;		_LCDWriteData
  2208 ;;		_LCDWriteCommand
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _LCDWriteByte
  2214  060A                     _LCDWriteByte:	
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _LCDWriteByte: [wreg+status,2+status,0+pclath+cstack]
  2218                           ;LCDWriteByte@ch stored from wreg
  2219  060A  00F3               	movwf	LCDWriteByte@ch
  2220                           
  2221                           ;MyLCD.c: 32: RD7 = (ch>>7)&0x01;
  2222  060B  0873               	movf	LCDWriteByte@ch,w
  2223  060C  00F2               	movwf	??_LCDWriteByte
  2224  060D  3007               	movlw	7
  2225  060E                     u725:	
  2226  060E  1003               	clrc
  2227  060F  0CF2               	rrf	??_LCDWriteByte,f
  2228  0610  3EFF               	addlw	-1
  2229  0611  1D03               	skipz
  2230  0612  2E0E               	goto	u725
  2231  0613  1C72               	btfss	??_LCDWriteByte,0
  2232  0614  2E19               	goto	u730
  2233  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0617  1788               	bsf	8,7	;volatile
  2236  0618  2E1C               	goto	u744
  2237  0619                     u730:	
  2238  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2239  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2240  061B  1388               	bcf	8,7	;volatile
  2241  061C                     u744:	
  2242                           
  2243                           ;MyLCD.c: 33: RD6 = (ch>>6)&0x01;
  2244  061C  0873               	movf	LCDWriteByte@ch,w
  2245  061D  00F2               	movwf	??_LCDWriteByte
  2246  061E  3006               	movlw	6
  2247  061F                     u755:	
  2248  061F  1003               	clrc
  2249  0620  0CF2               	rrf	??_LCDWriteByte,f
  2250  0621  3EFF               	addlw	-1
  2251  0622  1D03               	skipz
  2252  0623  2E1F               	goto	u755
  2253  0624  1C72               	btfss	??_LCDWriteByte,0
  2254  0625  2E2A               	goto	u760
  2255  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0628  1708               	bsf	8,6	;volatile
  2258  0629  2E2D               	goto	u774
  2259  062A                     u760:	
  2260  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2261  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2262  062C  1308               	bcf	8,6	;volatile
  2263  062D                     u774:	
  2264                           
  2265                           ;MyLCD.c: 34: RD5 = (ch>>5)&0x01;
  2266  062D  0873               	movf	LCDWriteByte@ch,w
  2267  062E  00F2               	movwf	??_LCDWriteByte
  2268  062F  3005               	movlw	5
  2269  0630                     u785:	
  2270  0630  1003               	clrc
  2271  0631  0CF2               	rrf	??_LCDWriteByte,f
  2272  0632  3EFF               	addlw	-1
  2273  0633  1D03               	skipz
  2274  0634  2E30               	goto	u785
  2275  0635  1C72               	btfss	??_LCDWriteByte,0
  2276  0636  2E3B               	goto	u790
  2277  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0639  1688               	bsf	8,5	;volatile
  2280  063A  2E3E               	goto	u804
  2281  063B                     u790:	
  2282  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2283  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2284  063D  1288               	bcf	8,5	;volatile
  2285  063E                     u804:	
  2286                           
  2287                           ;MyLCD.c: 35: RD4 = (ch>>4)&0x01;
  2288  063E  0873               	movf	LCDWriteByte@ch,w
  2289  063F  00F2               	movwf	??_LCDWriteByte
  2290  0640  3004               	movlw	4
  2291  0641                     u815:	
  2292  0641  1003               	clrc
  2293  0642  0CF2               	rrf	??_LCDWriteByte,f
  2294  0643  3EFF               	addlw	-1
  2295  0644  1D03               	skipz
  2296  0645  2E41               	goto	u815
  2297  0646  1C72               	btfss	??_LCDWriteByte,0
  2298  0647  2E4C               	goto	u820
  2299  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2301  064A  1608               	bsf	8,4	;volatile
  2302  064B  2E4F               	goto	l931
  2303  064C                     u820:	
  2304  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2305  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2306  064E  1208               	bcf	8,4	;volatile
  2307  064F                     l931:	
  2308                           
  2309                           ;MyLCD.c: 36: LCDLatchData();
  2310  064F  120A  118A  2428  120A  118A  	fcall	_LCDLatchData
  2311                           
  2312                           ;MyLCD.c: 37: RD7 = (ch>>3)&0x01;
  2313  0654  0873               	movf	LCDWriteByte@ch,w
  2314  0655  00F2               	movwf	??_LCDWriteByte
  2315  0656  3003               	movlw	3
  2316  0657                     u845:	
  2317  0657  1003               	clrc
  2318  0658  0CF2               	rrf	??_LCDWriteByte,f
  2319  0659  3EFF               	addlw	-1
  2320  065A  1D03               	skipz
  2321  065B  2E57               	goto	u845
  2322  065C  1C72               	btfss	??_LCDWriteByte,0
  2323  065D  2E62               	goto	u850
  2324  065E  1283               	bcf	3,5	;RP0=0, select bank0
  2325  065F  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0660  1788               	bsf	8,7	;volatile
  2327  0661  2E65               	goto	l935
  2328  0662                     u850:	
  2329  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0664  1388               	bcf	8,7	;volatile
  2332  0665                     l935:	
  2333                           
  2334                           ;MyLCD.c: 38: RD6 = (ch>>2)&0x01;
  2335  0665  0873               	movf	LCDWriteByte@ch,w
  2336  0666  00F2               	movwf	??_LCDWriteByte
  2337  0667  3002               	movlw	2
  2338  0668                     u875:	
  2339  0668  1003               	clrc
  2340  0669  0CF2               	rrf	??_LCDWriteByte,f
  2341  066A  3EFF               	addlw	-1
  2342  066B  1D03               	skipz
  2343  066C  2E68               	goto	u875
  2344  066D  1C72               	btfss	??_LCDWriteByte,0
  2345  066E  2E73               	goto	u880
  2346  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0671  1708               	bsf	8,6	;volatile
  2349  0672  2E76               	goto	l937
  2350  0673                     u880:	
  2351  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0675  1308               	bcf	8,6	;volatile
  2354  0676                     l937:	
  2355                           
  2356                           ;MyLCD.c: 39: RD5 = (ch>>1)&0x01;
  2357  0676  0873               	movf	LCDWriteByte@ch,w
  2358  0677  00F2               	movwf	??_LCDWriteByte
  2359  0678  3001               	movlw	1
  2360  0679                     u905:	
  2361  0679  1003               	clrc
  2362  067A  0CF2               	rrf	??_LCDWriteByte,f
  2363  067B  3EFF               	addlw	-1
  2364  067C  1D03               	skipz
  2365  067D  2E79               	goto	u905
  2366  067E  1C72               	btfss	??_LCDWriteByte,0
  2367  067F  2E84               	goto	u910
  2368  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0682  1688               	bsf	8,5	;volatile
  2371  0683  2E87               	goto	l939
  2372  0684                     u910:	
  2373  0684  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0685  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0686  1288               	bcf	8,5	;volatile
  2376  0687                     l939:	
  2377                           
  2378                           ;MyLCD.c: 40: RD4 = ch&0x01;
  2379  0687  1C73               	btfss	LCDWriteByte@ch,0
  2380  0688  2E8D               	goto	u930
  2381  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2382  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2383  068B  1608               	bsf	8,4	;volatile
  2384  068C  2E90               	goto	u944
  2385  068D                     u930:	
  2386  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2387  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2388  068F  1208               	bcf	8,4	;volatile
  2389  0690                     u944:	
  2390                           
  2391                           ;MyLCD.c: 41: LCDLatchData();
  2392  0690  120A  118A  2428   	fcall	_LCDLatchData
  2393  0693  0008               	return
  2394  0694                     __end_of_LCDWriteByte:	
  2395                           
  2396                           	psect	text18
  2397  0428                     __ptext18:	
  2398 ;; *************** function _LCDLatchData *****************
  2399 ;; Defined at:
  2400 ;;		line 55 in file "D:\PIC_MPlap\LCD\MyLCD.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0
  2416 ;;      Temps:          2       0       0       0       0
  2417 ;;      Totals:         2       0       0       0       0
  2418 ;;Total ram usage:        2 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_LCDMode4Bit
  2424 ;;		_LCDWriteByte
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _LCDLatchData
  2430  0428                     _LCDLatchData:	
  2431                           
  2432                           ;MyLCD.c: 58: RD3=1;
  2433                           
  2434                           ;incstack = 0
  2435                           ; Regs used in _LCDLatchData: [wreg]
  2436  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2438  042A  1588               	bsf	8,3	;volatile
  2439                           
  2440                           ;MyLCD.c: 59: RD3=0;
  2441  042B  1188               	bcf	8,3	;volatile
  2442                           
  2443                           ;MyLCD.c: 60: _delay((unsigned long)((2)*(20000000/4000.0)));
  2444  042C  300D               	movlw	13
  2445  042D  00F1               	movwf	??_LCDLatchData+1
  2446  042E  30FB               	movlw	251
  2447  042F  00F0               	movwf	??_LCDLatchData
  2448  0430                     u1447:	
  2449  0430  0BF0               	decfsz	??_LCDLatchData,f
  2450  0431  2C30               	goto	u1447
  2451  0432  0BF1               	decfsz	??_LCDLatchData+1,f
  2452  0433  2C30               	goto	u1447
  2453  0434  2C35               	nop2
  2454  0435  0008               	return
  2455  0436                     __end_of_LCDLatchData:	
  2456  007E                     btemp	set	126	;btemp
  2457  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    LCDPrint@str	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_2(CODE[12]), LCDPrintNumber@str(COMMON[7]), 


Critical Paths under _main in COMMON

    _main->_LCDPrint
    _PWMControl->___awtoft
    ___lbtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _LCDPrint->_LCDMove
    _LCDPutChar->_LCDWriteData
    _LCDWriteData->_LCDWriteByte
    _LCDMove->_LCDWriteCommand
    _LCDInit->_LCDWriteCommand
    _LCDMode4Bit->_LCDLatchData
    _LCDClear->_LCDWriteCommand
    _LCDWriteCommand->_LCDWriteByte
    _LCDWriteByte->_LCDLatchData

Critical Paths under _main in BANK0

    _main->_PWMControl
    _PWMControl->___fttol
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7754
                                             40 BANK0      3     3      0
                           _LCDClear
                            _LCDInit
                           _LCDPrint
                         _PWMControl
                            _PWMInit
 ---------------------------------------------------------------------------------
 (1) _PWMInit                                              0     0      0       0
                         _Timer2Init
 ---------------------------------------------------------------------------------
 (2) _Timer2Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWMControl                                           6     5      1    6413
                                             34 BANK0      6     5      1
                           ___awtoft
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    1690
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     438
                                             20 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2286
                                              4 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCDPrint                                             5     2      3     945
                                             13 COMMON     1     1      0
                                              0 BANK0      4     1      3
                            _LCDMove
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           1     1      0     220
                                              5 COMMON     1     1      0
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (3) _LCDWriteData                                         1     1      0     198
                                              4 COMMON     1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (2) _LCDMove                                              8     7      1     318
                                              5 COMMON     8     7      1
                    _LCDWriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              0     0      0     198
                        _LCDMode4Bit
                    _LCDWriteCommand
 ---------------------------------------------------------------------------------
 (2) _LCDMode4Bit                                          0     0      0       0
                       _LCDLatchData
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0     198
                    _LCDWriteCommand
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCommand                                      1     1      0     198
                                              4 COMMON     1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (4) _LCDWriteByte                                         2     2      0     176
                                              2 COMMON     2     2      0
                       _LCDLatchData
 ---------------------------------------------------------------------------------
 (5) _LCDLatchData                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDWriteCommand
       _LCDWriteByte
         _LCDLatchData
   _LCDInit
     _LCDMode4Bit
       _LCDLatchData
     _LCDWriteCommand
       _LCDWriteByte
         _LCDLatchData
   _LCDPrint
     _LCDMove
       _LCDWriteCommand
         _LCDWriteByte
           _LCDLatchData
     _LCDPutChar
       _LCDWriteData
         _LCDWriteByte
           _LCDLatchData
   _PWMControl
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _PWMInit
     _Timer2Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      3C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4A      12        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jun 07 14:40:23 2017

              _PWMControl 0595                         pc 0002               __CFG_CP$OFF 0000  
             ?_LCDPutChar 0070                        fsr 0004                       l444 0574  
                     l445 057C                       l437 055F                       l536 0708  
                     l931 064F                       l935 0665                       l937 0676  
                     l961 0549                       l953 0531                       l939 0687  
                     l957 0538                       l967 0564                       l959 0544  
                     l969 056E                       l999 04AB                       _RC2 003A  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _PR2 0092              __CFG_CPD$OFF 0000                       u730 0619  
                     u820 064C                       u804 063E                       u725 060E  
                     u910 0684                       u815 0641                       u760 062A  
                     u744 061C                       u905 0679                       u930 068D  
                     u850 0662                       u755 061F                       u845 0657  
                     u790 063B                       u774 062D                       u944 0690  
                     u880 0673                       u785 0630                       u875 0668  
                     u975 053D                       u995 0558                       fsr0 0004  
                     indf 0000              __CFG_FOSC$HS 0000           __end_of_LCDInit 0481  
            __CFG_LVP$OFF 0000           __end_of_LCDMove 04A1                      l1111 04CF  
                    l1031 079F                      l1015 0750                      l1009 073A  
                    l1043 07C7                      l1027 078F                      l1123 0600  
                    l1117 05B8                      l1039 07B7                      l1091 0719  
                    l1059 06AE                      l1171 051F                      l1085 06FD  
                    l1077 06E0                      l1087 070B                      l1079 06F0  
                    STR_1 0052                      STR_2 003B                      STR_3 0047  
                    u1015 0567                      u1115 075C                      u1205 07C8  
                    u1125 076E                      u1055 0583                      u1215 07D0  
                    u1305 06FF                      u1075 0487                      u1155 07A0  
                    u1165 07A8                      u1245 06B5                      u1350 05FD  
                    u1370 0606                      u1275 06E1                      u1437 04FC  
                    u1447 0430              __CFG_WRT$OFF 0000                      _main 04F4  
            ___ftpack@arg 0070              ___ftpack@exp 0073                      btemp 007E  
         __end_of_PWMInit 0447             __CFG_BOREN$ON 0000                      start 0000  
          ??_LCDLatchData 0070              ___ftmul@cntr 0032              ___ftmul@sign 0033  
        __end_of_LCDClear 03F4              ___fttol@exp1 0041              ___fttol@lval 003D  
           ?_LCDWriteData 0070             ?_LCDWriteByte 0070          __end_of_LCDPrint 04F4  
             LCDPrint@str 0021                     ?_main 0070                     _CCP1X 00BD  
                   _CCP1Y 00BC             __CFG_WDTE$OFF 0000           __end_of___ftmul 07F5  
         __end_of___fttol 0722             ___awtoft@sign 007D           __end_of_dpowers 003B  
           ___ftpack@sign 0074                     pclath 000A       __size_of_LCDPutChar 0006  
                   status 0003                     wtemp0 007E         ??_LCDWriteCommand 0074  
         __initialization 07F5               ?_PWMControl 0042              __end_of_main 0529  
          ??_LCDWriteData 0074            ??_LCDWriteByte 0072                    ??_main 0048  
           ___fttol@sign1 003C                 ??_LCDInit 0075                 ??_LCDMove 0076  
            LCDPutChar@ch 0075                    _CCP1M0 00B8                    _CCP1M1 00B9  
                  _CCP1M2 00BA                    _CCP1M3 00BB                    _CCPR1L 0015  
               ??_PWMInit 0070          __end_of___awtoft 04C2          __end_of___ftpack 0595  
        __end_of___lbtoft 0463                    _TMR2ON 0092                    _TRISC2 043A  
                  _TRISD2 0442                    _TRISD3 0443                    _TRISD4 0444  
                  _TRISD5 0445                    _TRISD6 0446                    _TRISD7 0447  
          __CFG_PWRTE$OFF 0000                _Timer2Init 0414                 ??___ftmul 002A  
               ??___fttol 0038      __size_of_LCDMode4Bit 000B     ___ftmul@f3_as_product 002F  
    __end_of_LCDLatchData 0436       __size_of_PWMControl 0075                 ?_LCDClear 0070  
 __end_of__initialization 07FC                 ?_LCDPrint 0020                ___awtoft@c 0078  
              ___lbtoft@c 007B                 LCDMove@Ad 007A                ___ftmul@f1 0024  
              ___ftmul@f2 0027                ___fttol@f1 0034            __pcstackCOMMON 0070  
               LCDPrint@x 0020                 LCDPrint@y 0023              ??_LCDPutChar 0075  
    __end_of_LCDWriteData 0414                __pbssBANK0 004B      __end_of_LCDWriteByte 0694  
              ??_LCDClear 0075        __end_of_LCDPutChar 03FA                ??_LCDPrint 007D  
       LCDWriteCommand@dt 0074               ?_Timer2Init 0070                __pmaintext 04F4  
           PWMControl@sig 0042                 ?___awtoft 0078                 ?___ftpack 0070  
               ?___lbtoft 0078                   _T2CKPS0 0090                   _T2CKPS1 0091  
                 _LCDInit 0463                   _LCDMove 0481           _LCDWriteCommand 0402  
                 _PWMInit 0436                __stringtab 0003              ??_PWMControl 0043  
                 ___ftmul 0722                   ___fttol 0694                ??___awtoft 007B  
              ??___ftpack 0075                ??___lbtoft 0020     __size_of_LCDLatchData 000E  
                 __ptext1 0436                   __ptext2 0414                   __ptext3 0595  
                 __ptext4 0447                   __ptext5 0694                   __ptext6 0722  
                 __ptext7 04A1                   __ptext8 0529                   __ptext9 04C2  
                 _dpowers 0013       __size_of_Timer2Init 0009                   clrloop0 03FB  
    end_of_initialization 07FC                   ftoa@buf 004B        __end_of_PWMControl 060A  
            _LCDLatchData 0428         PWMControl@PWM_Reg 0046   __end_of_LCDWriteCommand 040B  
   __size_of_LCDWriteData 0009     __size_of_LCDWriteByte 008A         __size_of_LCDClear 0005  
       __size_of_LCDPrint 0032             ??_LCDMode4Bit 0072               ___ftmul@exp 002E  
       PWMControl@percent 0045              _LCDWriteData 040B              _LCDWriteByte 060A  
     start_initialization 07F5              ??_Timer2Init 0070       __end_of_LCDMode4Bit 0428  
       __size_of___awtoft 0021                  ?_LCDInit 0070         __size_of___ftpack 006C  
       __size_of___lbtoft 001C                  ?_LCDMove 0075          ?_LCDWriteCommand 0070  
               ___latbits 0002             __pcstackBANK0 0020                  LCDMove@x 0075  
                LCDMove@y 007C        __end_of_Timer2Init 041D                  ?_PWMInit 0070  
                ?___ftmul 0024                  ?___fttol 0034                 __pstrings 0003  
                _LCDClear 03EF                  _LCDPrint 04C2                 clear_ram0 03FA  
             _LCDMode4Bit 041D               __stringbase 0012          __size_of_LCDInit 001E  
        __size_of_LCDMove 0020          __size_of_PWMInit 0011          __size_of___ftmul 00D3  
        __size_of___fttol 008E                  ___awtoft 04A1                  ___ftpack 0529  
                ___lbtoft 0447        __end_of__stringtab 0013                  __ptext10 03F4  
                __ptext11 040B                  __ptext12 0481                  __ptext13 0463  
                __ptext14 041D                  __ptext15 03EF                  __ptext16 0402  
                __ptext17 060A                  __ptext18 0428             __size_of_main 0035  
              _LCDPutChar 03F4            LCDWriteData@dt 0074            LCDWriteByte@ch 0073  
               stringcode 000D                  stringdir 000D                  stringtab 0003  
__size_of_LCDWriteCommand 0009             ?_LCDLatchData 0070              ?_LCDMode4Bit 0070  
