

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Nov 01 07:56:23 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	12F629
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	dabs	1,0x5E,2
    15  0000                     
    16                           ; Version 1.42
    17                           ; Generated 13/04/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12F629 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0019                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  008C                     	;# 
    67  008E                     	;# 
    68  0090                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0096                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  0001                     _TMR0	set	1
    79  002A                     _GPIO2	set	42
    80  005A                     _T0IF	set	90
    81  005D                     _T0IE	set	93
    82  005F                     _GIE	set	95
    83  0029                     _GPIO1	set	41
    84  0028                     _GPIO0	set	40
    85  002C                     _GPIO4	set	44
    86  002D                     _GPIO5	set	45
    87  00C8                     _CM0	set	200
    88  00C9                     _CM1	set	201
    89  00CA                     _CM2	set	202
    90  0081                     _OPTION_REG	set	129
    91  040B                     _PSA	set	1035
    92  040D                     _T0CS	set	1037
    93  0408                     _PS0	set	1032
    94  0409                     _PS1	set	1033
    95  040A                     _PS2	set	1034
    96  042A                     _TRISIO2	set	1066
    97  0429                     _TRISIO1	set	1065
    98  0428                     _TRISIO0	set	1064
    99  042C                     _TRISIO4	set	1068
   100  042D                     _TRISIO5	set	1069
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  0010                     start_initialization:	
   106  0010                     __initialization:	
   107                           
   108                           ; Clear objects allocated to BANK0
   109  0010  01AC               	clrf	__pbssBANK0& (0+127)
   110  0011  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   111  0012  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   112  0013  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   113  0014  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   114  0015  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   115  0016  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   116  0017  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   117  0018                     end_of_initialization:	
   118                           ;End of C runtime variable initialization code
   119                           
   120  0018                     __end_of__initialization:	
   121  0018  0183               	clrf	3
   122  0019  2868               	ljmp	_main	;jump to C main() function
   123                           
   124                           	psect	bssBANK0
   125  002C                     __pbssBANK0:	
   126  002C                     _Start_Stop:	
   127  002C                     	ds	2
   128  002E                     _Buf1p:	
   129  002E                     	ds	2
   130  0030                     _Buf1s:	
   131  0030                     	ds	2
   132  0032                     _Time_Delay:	
   133  0032                     	ds	2
   134                           
   135                           	psect	cstackCOMMON
   136  0000                     __pcstackCOMMON:	
   137  0000                     ??_ReadSW:	
   138  0000                     ??_TimerInit:	
   139                           ; 1 bytes @ 0x0
   140                           
   141  0000                     ??___wmul:	
   142                           ; 1 bytes @ 0x0
   143                           
   144                           
   145                           	psect	cstackBANK0
   146  0020                     __pcstackBANK0:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0020                     ?_ReadSW:	
   150  0020                     ?_TimerInit:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0020                     ?_main:	
   154                           ; 1 bytes @ 0x0
   155                           
   156  0020                     ?_Timer0Int:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0020                     ?___wmul:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0020                     ___wmul@multiplier:	
   163                           ; 2 bytes @ 0x0
   164                           
   165                           
   166                           ; 2 bytes @ 0x0
   167  0020                     	ds	2
   168  0022                     ___wmul@multiplicand:	
   169                           
   170                           ; 2 bytes @ 0x2
   171  0022                     	ds	2
   172  0024                     ___wmul@product:	
   173                           
   174                           ; 2 bytes @ 0x4
   175  0024                     	ds	2
   176  0026                     ??_Timer0Int:	
   177                           
   178                           ; 1 bytes @ 0x6
   179  0026                     	ds	5
   180  002B                     ??_main:	
   181                           
   182                           ; 1 bytes @ 0xB
   183  002B                     	ds	1
   184                           
   185                           	psect	maintext
   186  0068                     __pmaintext:	
   187 ;;
   188 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   189 ;;
   190 ;; *************** function _main *****************
   191 ;; Defined at:
   192 ;;		line 44 in file "Delay.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, pclath, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : B00/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMMON   BANK0
   206 ;;      Params:         0       0
   207 ;;      Locals:         0       0
   208 ;;      Temps:          0       1
   209 ;;      Totals:         0       1
   210 ;;Total ram usage:        1 bytes
   211 ;; Hardware stack levels required when called:    3
   212 ;; This function calls:
   213 ;;		_ReadSW
   214 ;;		_TimerInit
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           
   221                           ;psect for function _main
   222  0068                     _main:	
   223                           
   224                           ;Delay.c: 45: ReadSW();
   225                           
   226                           ;incstack = 0
   227                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   228  0068  208C               	fcall	_ReadSW
   229                           
   230                           ;Delay.c: 46: OPTION_REG &= 0x7f;
   231  0069  307F               	movlw	127
   232  006A  1283               	bcf	3,5	;RP0=0, select bank0
   233  006B  00AB               	movwf	??_main
   234  006C  082B               	movf	??_main,w
   235  006D  1683               	bsf	3,5	;RP0=1, select bank1
   236  006E  0581               	andwf	1,f	;volatile
   237                           
   238                           ;Delay.c: 47: CM2 = 1;
   239  006F  1283               	bcf	3,5	;RP0=0, select bank0
   240  0070  1519               	bsf	25,2	;volatile
   241                           
   242                           ;Delay.c: 48: CM1 = 1;
   243  0071  1499               	bsf	25,1	;volatile
   244                           
   245                           ;Delay.c: 49: CM0 = 1;
   246  0072  1419               	bsf	25,0	;volatile
   247                           
   248                           ;Delay.c: 50: TRISIO5 = 1;
   249  0073  1683               	bsf	3,5	;RP0=1, select bank1
   250  0074  1685               	bsf	5,5	;volatile
   251                           
   252                           ;Delay.c: 51: TRISIO4 = 1;
   253  0075  1605               	bsf	5,4	;volatile
   254                           
   255                           ;Delay.c: 52: TRISIO0 = 1;
   256  0076  1405               	bsf	5,0	;volatile
   257                           
   258                           ;Delay.c: 53: TRISIO1 = 1;
   259  0077  1485               	bsf	5,1	;volatile
   260                           
   261                           ;Delay.c: 54: TRISIO2 = 0;
   262  0078  1105               	bcf	5,2	;volatile
   263                           
   264                           ;Delay.c: 56: TimerInit();
   265  0079  20D0               	fcall	_TimerInit
   266  007A  2883               	goto	l699
   267  007B                     l703:	
   268  007B  3001               	movlw	1
   269  007C  00AC               	movwf	_Start_Stop
   270  007D  3000               	movlw	0
   271  007E  00AD               	movwf	_Start_Stop+1
   272  007F  01AE               	clrf	_Buf1p	;volatile
   273  0080  01AF               	clrf	_Buf1p+1	;volatile
   274  0081  01B0               	clrf	_Buf1s	;volatile
   275  0082  01B1               	clrf	_Buf1s+1	;volatile
   276  0083                     l699:	
   277                           ;Delay.c: 58: while(1){
   278                           
   279                           
   280                           ;Delay.c: 59: ReadSW();
   281  0083  208C               	fcall	_ReadSW
   282                           
   283                           ;Delay.c: 60: if(GPIO5==0){Start_Stop = 1;Buf1p=0;Buf1s=0;}
   284  0084  1283               	bcf	3,5	;RP0=0, select bank0
   285  0085  1E85               	btfss	5,5	;volatile
   286  0086  287B               	goto	l703
   287                           
   288                           ;Delay.c: 61: else if(GPIO4==0){Start_Stop = 0;}
   289  0087  1A05               	btfsc	5,4	;volatile
   290  0088  2883               	goto	l699
   291  0089  01AC               	clrf	_Start_Stop
   292  008A  01AD               	clrf	_Start_Stop+1
   293  008B  2883               	goto	l699
   294  008C                     __end_of_main:	
   295                           ;Delay.c: 62: }
   296                           ;Delay.c: 63: return;
   297                           
   298                           
   299                           	psect	text1
   300  00D0                     __ptext1:	
   301 ;; *************** function _TimerInit *****************
   302 ;; Defined at:
   303 ;;		line 77 in file "Delay.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMMON   BANK0
   317 ;;      Params:         0       0
   318 ;;      Locals:         0       0
   319 ;;      Temps:          0       0
   320 ;;      Totals:         0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; Hardware stack levels required when called:    2
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           
   332                           ;psect for function _TimerInit
   333  00D0                     _TimerInit:	
   334                           
   335                           ;Delay.c: 78: GIE = 1;
   336                           
   337                           ;incstack = 0
   338                           ; Regs used in _TimerInit: [wreg]
   339  00D0  178B               	bsf	11,7	;volatile
   340                           
   341                           ;Delay.c: 79: T0IE = 1;
   342  00D1  168B               	bsf	11,5	;volatile
   343                           
   344                           ;Delay.c: 80: PS2 = 0;PS1 = 1;PS0 = 1;
   345  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   346  00D3  1101               	bcf	1,2	;volatile
   347  00D4  1481               	bsf	1,1	;volatile
   348  00D5  1401               	bsf	1,0	;volatile
   349                           
   350                           ;Delay.c: 81: T0CS = 0;
   351  00D6  1281               	bcf	1,5	;volatile
   352                           
   353                           ;Delay.c: 82: PSA = 0;
   354  00D7  1181               	bcf	1,3	;volatile
   355                           
   356                           ;Delay.c: 83: T0IF = 0;
   357  00D8  110B               	bcf	11,2	;volatile
   358                           
   359                           ;Delay.c: 84: TMR0 = 6;
   360  00D9  3006               	movlw	6
   361  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   362  00DB  0081               	movwf	1	;volatile
   363  00DC  0008               	return
   364  00DD                     __end_of_TimerInit:	
   365                           
   366                           	psect	text2
   367  008C                     __ptext2:	
   368 ;; *************** function _ReadSW *****************
   369 ;; Defined at:
   370 ;;		line 65 in file "Delay.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0
   384 ;;      Params:         0       0
   385 ;;      Locals:         0       0
   386 ;;      Temps:          0       0
   387 ;;      Totals:         0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    2
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _ReadSW
   400  008C                     _ReadSW:	
   401                           
   402                           ;Delay.c: 66: if(GPIO0==0&&GPIO1==0){
   403                           
   404                           ;incstack = 0
   405                           ; Regs used in _ReadSW: [wreg]
   406  008C  1283               	bcf	3,5	;RP0=0, select bank0
   407  008D  1C05               	btfss	5,0	;volatile
   408  008E  1885               	btfsc	5,1	;volatile
   409  008F  2895               	goto	l72
   410                           
   411                           ;Delay.c: 67: Time_Delay = 2;
   412  0090  3002               	movlw	2
   413  0091  00B2               	movwf	_Time_Delay	;volatile
   414  0092  3000               	movlw	0
   415  0093  00B3               	movwf	_Time_Delay+1	;volatile
   416                           
   417                           ;Delay.c: 68: } else if(GPIO0==1&&GPIO1==0){
   418  0094  0008               	return
   419  0095                     l72:	
   420  0095  1805               	btfsc	5,0	;volatile
   421  0096  1885               	btfsc	5,1	;volatile
   422  0097  289D               	goto	l74
   423                           
   424                           ;Delay.c: 69: Time_Delay = 3;
   425  0098  3003               	movlw	3
   426  0099  00B2               	movwf	_Time_Delay	;volatile
   427  009A  3000               	movlw	0
   428  009B  00B3               	movwf	_Time_Delay+1	;volatile
   429                           
   430                           ;Delay.c: 70: } else if(GPIO0==0&&GPIO1==1){
   431  009C  0008               	return
   432  009D                     l74:	
   433  009D  1C05               	btfss	5,0	;volatile
   434  009E  1C85               	btfss	5,1	;volatile
   435  009F  28A5               	goto	l76
   436                           
   437                           ;Delay.c: 71: Time_Delay = 4;
   438  00A0  3004               	movlw	4
   439  00A1  00B2               	movwf	_Time_Delay	;volatile
   440  00A2  3000               	movlw	0
   441  00A3  00B3               	movwf	_Time_Delay+1	;volatile
   442                           
   443                           ;Delay.c: 72: } else if(GPIO0==1&&GPIO1==1){
   444  00A4  0008               	return
   445  00A5                     l76:	
   446  00A5  1C05               	btfss	5,0	;volatile
   447  00A6  0008               	return
   448  00A7  1C85               	btfss	5,1	;volatile
   449  00A8  0008               	return
   450                           
   451                           ;Delay.c: 73: Time_Delay = 5;
   452  00A9  3005               	movlw	5
   453  00AA  00B2               	movwf	_Time_Delay	;volatile
   454  00AB  3000               	movlw	0
   455  00AC  00B3               	movwf	_Time_Delay+1	;volatile
   456  00AD  0008               	return
   457  00AE                     __end_of_ReadSW:	
   458                           
   459                           	psect	text3
   460  001A                     __ptext3:	
   461 ;; *************** function _Timer0Int *****************
   462 ;; Defined at:
   463 ;;		line 86 in file "Delay.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0
   477 ;;      Params:         0       0
   478 ;;      Locals:         0       0
   479 ;;      Temps:          0       5
   480 ;;      Totals:         0       5
   481 ;;Total ram usage:        5 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; Hardware stack levels required when called:    1
   484 ;; This function calls:
   485 ;;		___wmul
   486 ;; This function is called by:
   487 ;;		Interrupt level 1
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _Timer0Int
   493  001A                     _Timer0Int:	
   494                           
   495                           ;Delay.c: 87: if(T0IF){
   496  001A  1D0B               	btfss	11,2	;volatile
   497  001B  285D               	goto	i1l93
   498                           
   499                           ;Delay.c: 88: TMR0 = 6;
   500  001C  3006               	movlw	6
   501  001D  0081               	movwf	1	;volatile
   502                           
   503                           ;Delay.c: 89: Buf1s ++;
   504  001E  3001               	movlw	1
   505  001F  07B0               	addwf	_Buf1s,f	;volatile
   506  0020  1803               	skipnc
   507  0021  0AB1               	incf	_Buf1s+1,f	;volatile
   508  0022  3000               	movlw	0
   509  0023  07B1               	addwf	_Buf1s+1,f	;volatile
   510                           
   511                           ;Delay.c: 90: if(Buf1s > 249){
   512  0024  0831               	movf	_Buf1s+1,w	;volatile
   513  0025  3A80               	xorlw	128
   514  0026  00DF               	movwf	95
   515  0027  3080               	movlw	128
   516  0028  025F               	subwf	95,w
   517  0029  1D03               	skipz
   518  002A  282D               	goto	u34_25
   519  002B  30FA               	movlw	250
   520  002C  0230               	subwf	_Buf1s,w	;volatile
   521  002D                     u34_25:	
   522  002D  1C03               	skipc
   523  002E  2838               	goto	i1l721
   524                           
   525                           ;Delay.c: 91: Buf1p++;
   526  002F  3001               	movlw	1
   527  0030  1283               	bcf	3,5	;RP0=0, select bank0
   528  0031  07AE               	addwf	_Buf1p,f	;volatile
   529  0032  1803               	skipnc
   530  0033  0AAF               	incf	_Buf1p+1,f	;volatile
   531  0034  3000               	movlw	0
   532  0035  07AF               	addwf	_Buf1p+1,f	;volatile
   533                           
   534                           ;Delay.c: 92: Buf1s = 0;
   535  0036  01B0               	clrf	_Buf1s	;volatile
   536  0037  01B1               	clrf	_Buf1s+1	;volatile
   537  0038                     i1l721:	
   538                           
   539                           ;Delay.c: 93: }
   540                           ;Delay.c: 94: if(Start_Stop==1){
   541  0038  1283               	bcf	3,5	;RP0=0, select bank0
   542  0039  032C               	decf	_Start_Stop,w
   543  003A  042D               	iorwf	_Start_Stop+1,w
   544  003B  1D03               	btfss	3,2
   545  003C  285B               	goto	i1l89
   546                           
   547                           ;Delay.c: 95: if(Buf1p>(Time_Delay*60)){
   548  003D  0833               	movf	_Time_Delay+1,w	;volatile
   549  003E  00A1               	movwf	___wmul@multiplier+1
   550  003F  0832               	movf	_Time_Delay,w	;volatile
   551  0040  00A0               	movwf	___wmul@multiplier
   552  0041  303C               	movlw	60
   553  0042  00A2               	movwf	___wmul@multiplicand
   554  0043  3000               	movlw	0
   555  0044  00A3               	movwf	___wmul@multiplicand+1
   556  0045  20AE               	fcall	___wmul
   557  0046  1283               	bcf	3,5	;RP0=0, select bank0
   558  0047  0821               	movf	?___wmul+1,w
   559  0048  3A80               	xorlw	128
   560  0049  00A6               	movwf	??_Timer0Int
   561  004A  082F               	movf	_Buf1p+1,w	;volatile
   562  004B  3A80               	xorlw	128
   563  004C  0226               	subwf	??_Timer0Int,w
   564  004D  1D03               	skipz
   565  004E  2851               	goto	u36_25
   566  004F  082E               	movf	_Buf1p,w	;volatile
   567  0050  0220               	subwf	?___wmul,w
   568  0051                     u36_25:	
   569  0051  1803               	skipnc
   570  0052  2858               	goto	i1l90
   571                           
   572                           ;Delay.c: 96: GPIO2 = 1;Start_Stop=0;
   573  0053  1283               	bcf	3,5	;RP0=0, select bank0
   574  0054  1505               	bsf	5,2	;volatile
   575  0055  01AC               	clrf	_Start_Stop
   576  0056  01AD               	clrf	_Start_Stop+1
   577                           
   578                           ;Delay.c: 97: } else {
   579  0057  285C               	goto	i1l92
   580  0058                     i1l90:	
   581                           
   582                           ;Delay.c: 98: GPIO2 = 0;
   583  0058  1283               	bcf	3,5	;RP0=0, select bank0
   584  0059  1105               	bcf	5,2	;volatile
   585                           
   586                           ;Delay.c: 99: }
   587                           ;Delay.c: 100: } else {
   588  005A  285C               	goto	i1l92
   589  005B                     i1l89:	
   590                           
   591                           ;Delay.c: 101: GPIO2 = 1;
   592  005B  1505               	bsf	5,2	;volatile
   593  005C                     i1l92:	
   594                           
   595                           ;Delay.c: 102: }
   596                           ;Delay.c: 103: T0IF = 0;
   597  005C  110B               	bcf	11,2	;volatile
   598  005D                     i1l93:	
   599  005D  082A               	movf	??_Timer0Int+4,w
   600  005E  00DF               	movwf	95
   601  005F  0829               	movf	??_Timer0Int+3,w
   602  0060  008A               	movwf	10
   603  0061  0828               	movf	??_Timer0Int+2,w
   604  0062  0084               	movwf	4
   605  0063  0E27               	swapf	(??_Timer0Int+1)^0,w
   606  0064  0083               	movwf	3
   607  0065  0EDE               	swapf	94,f
   608  0066  0E5E               	swapf	94,w
   609  0067  0009               	retfie
   610  0068                     __end_of_Timer0Int:	
   611                           
   612                           	psect	intentry
   613  0004                     __pintentry:	
   614                           ;incstack = 0
   615                           ; Regs used in _Timer0Int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   616                           
   617  0004                     interrupt_function:	
   618  005E                     saved_w	set	btemp
   619  0004  00DE               	movwf	btemp
   620  0005  0E03               	swapf	3,w
   621  0006  1283               	bcf	3,5	;RP0=0, select bank0
   622  0007  00A7               	movwf	??_Timer0Int+1
   623  0008  0804               	movf	4,w
   624  0009  00A8               	movwf	??_Timer0Int+2
   625  000A  080A               	movf	10,w
   626  000B  00A9               	movwf	??_Timer0Int+3
   627  000C  085F               	movf	btemp+1,w
   628  000D  00AA               	movwf	??_Timer0Int+4
   629  000E  281A               	ljmp	_Timer0Int
   630                           
   631                           	psect	text4
   632  00AE                     __ptext4:	
   633 ;; *************** function ___wmul *****************
   634 ;; Defined at:
   635 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  multiplier      2    0[BANK0 ] unsigned int 
   638 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  product         2    4[BANK0 ] unsigned int 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2    0[BANK0 ] unsigned int 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0
   650 ;;      Params:         0       4
   651 ;;      Locals:         0       2
   652 ;;      Temps:          0       0
   653 ;;      Totals:         0       6
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_Timer0Int
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function ___wmul
   665  00AE                     ___wmul:	
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   669  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   670  00AF  01A4               	clrf	___wmul@product
   671  00B0  01A5               	clrf	___wmul@product+1
   672  00B1                     i1l665:	
   673  00B1  1C20               	btfss	___wmul@multiplier,0
   674  00B2  28B9               	goto	i1l177
   675  00B3  0822               	movf	___wmul@multiplicand,w
   676  00B4  07A4               	addwf	___wmul@product,f
   677  00B5  1803               	skipnc
   678  00B6  0AA5               	incf	___wmul@product+1,f
   679  00B7  0823               	movf	___wmul@multiplicand+1,w
   680  00B8  07A5               	addwf	___wmul@product+1,f
   681  00B9                     i1l177:	
   682  00B9  3001               	movlw	1
   683  00BA                     u28_25:	
   684  00BA  1003               	clrc
   685  00BB  0DA2               	rlf	___wmul@multiplicand,f
   686  00BC  0DA3               	rlf	___wmul@multiplicand+1,f
   687  00BD  3EFF               	addlw	-1
   688  00BE  1D03               	skipz
   689  00BF  28BA               	goto	u28_25
   690  00C0  3001               	movlw	1
   691  00C1                     u29_25:	
   692  00C1  1003               	clrc
   693  00C2  0CA1               	rrf	___wmul@multiplier+1,f
   694  00C3  0CA0               	rrf	___wmul@multiplier,f
   695  00C4  3EFF               	addlw	-1
   696  00C5  1D03               	skipz
   697  00C6  28C1               	goto	u29_25
   698  00C7  0820               	movf	___wmul@multiplier,w
   699  00C8  0421               	iorwf	___wmul@multiplier+1,w
   700  00C9  1D03               	btfss	3,2
   701  00CA  28B1               	goto	i1l665
   702  00CB  0825               	movf	___wmul@product+1,w
   703  00CC  00A1               	movwf	?___wmul+1
   704  00CD  0824               	movf	___wmul@product,w
   705  00CE  00A0               	movwf	?___wmul
   706  00CF  0008               	return
   707  00D0                     __end_of___wmul:	
   708  005E                     btemp	set	94	;btemp
   709  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     12      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer0Int in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0Int in BANK0

    _Timer0Int->___wmul

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                             11 BANK0      1     1      0
                             _ReadSW
                          _TimerInit
 ---------------------------------------------------------------------------------
 (1) _TimerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadSW                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0Int                                            5     5      0     198
                                              6 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadSW
   _TimerInit

 _Timer0Int (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      C      14       4       32.3%
ABS                  0      0      14       5        0.0%
DATA                 0      0      14       6        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Nov 01 07:56:23 2017

            __CFG_CP$OFF 0000                       l72 0095                       l74 009D  
                     l76 00A5      ___wmul@multiplicand 0022                      _CM0 00C8  
                    l703 007B                      _CM1 00C9                      _CM2 00CA  
                    l699 0083                      _GIE 005F                      _PS0 0408  
                    _PS1 0409                      _PS2 040A             __CFG_CPD$OFF 0000  
                    _PSA 040B                      fsr0 0004                     _T0IE 005D  
                   _T0IF 005A                     _T0CS 040D                     i1l90 0058  
                   i1l92 005C                     i1l93 005D                     i1l89 005B  
                   _TMR0 0001                     _main 0068                     btemp 005E  
          __CFG_BOREN$ON 0000                     start 000F            __CFG_MCLRE$ON 0000  
                  ?_main 0020            __CFG_WDTE$OFF 0000                    _GPIO0 0028  
                  _GPIO1 0029                    _GPIO2 002A                    _GPIO4 002C  
                  _GPIO5 002D                    i1l177 00B9                    i1l721 0038  
                  i1l665 00B1                    u34_25 002D                    u28_25 00BA  
                  u36_25 0051                    u29_25 00C1                    _Buf1p 002E  
                  _Buf1s 0030                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 0010             __end_of_main 008C  
                 ??_main 002B           __CFG_PWRTE$OFF 0000                   _ReadSW 008C  
             _Time_Delay 0032                   ___wmul 00AE       __size_of_Timer0Int 004E  
     __size_of_TimerInit 000D                   saved_w 005E               _Start_Stop 002C  
__end_of__initialization 0018           __pcstackCOMMON 0000               __pbssBANK0 002C  
      __end_of_Timer0Int 0068        __end_of_TimerInit 00DD                  ?_ReadSW 0020  
             __pmaintext 0068                  ?___wmul 0020               __pintentry 0004  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO4 042C                  _TRISIO5 042D          __size_of_ReadSW 0022  
        __size_of___wmul 0022                  __ptext1 00D0                  __ptext2 008C  
                __ptext3 001A                  __ptext4 00AE     end_of_initialization 0018  
         __end_of_ReadSW 00AE           __end_of___wmul 00D0      start_initialization 0010  
               ??_ReadSW 0000                _Timer0Int 001A                _TimerInit 00D0  
               ??___wmul 0000                ___latbits 0000            __pcstackBANK0 0020  
             ?_Timer0Int 0020               ?_TimerInit 0020        interrupt_function 0004  
         ___wmul@product 0024        ___wmul@multiplier 0020              ??_Timer0Int 0026  
            ??_TimerInit 0000            __size_of_main 0024                 intlevel1 0000  
             _OPTION_REG 0081        __CFG_FOSC$INTRCIO 0000  
