

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jun 07 14:41:32 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.42
    22                           ; Generated 13/04/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0008                     _PORTD	set	8
   116  005B                     _RBIE	set	91
   117  005F                     _GIE	set	95
   118  0035                     _RB5	set	53
   119  0034                     _RB4	set	52
   120  0058                     _RBIF	set	88
   121  002A                     _RA2	set	42
   122  0029                     _RA1	set	41
   123  0028                     _RA0	set	40
   124  0081                     _OPTION_REG	set	129
   125  0088                     _TRISD	set	136
   126  0435                     _TRISB5	set	1077
   127  0434                     _TRISB4	set	1076
   128  04F8                     _PCFG0	set	1272
   129  04F9                     _PCFG1	set	1273
   130  04FA                     _PCFG2	set	1274
   131  04FB                     _PCFG3	set	1275
   132  042A                     _TRISA2	set	1066
   133  0429                     _TRISA1	set	1065
   134  0428                     _TRISA0	set	1064
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  0015                     start_initialization:	
   140  0015                     __initialization:	
   141                           
   142                           ; Clear objects allocated to COMMON
   143  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   144  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   145                           
   146                           ; Clear objects allocated to BANK0
   147  0017  01C2               	clrf	__pbssBANK0& (0+127)
   148  0018                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151  0018                     __end_of__initialization:	
   152  0018  0183               	clrf	3
   153  0019  120A  118A  2ADA   	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMMON
   156  0077                     __pbssCOMMON:	
   157  0077                     _num:	
   158  0077                     	ds	2
   159                           
   160                           	psect	bssBANK0
   161  0042                     __pbssBANK0:	
   162  0042                     _i:	
   163  0042                     	ds	1
   164                           
   165                           	psect	cstackCOMMON
   166  0070                     __pcstackCOMMON:	
   167  0070                     ?_RBInit:	
   168  0070                     ?_SegInit:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ?_SegLed:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ?_main:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0070                     ?_ext_RB:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ??_ext_RB:	
   181                           ; 1 bytes @ 0x0
   182                           
   183                           
   184                           ; 1 bytes @ 0x0
   185  0070                     	ds	5
   186  0075                     ??_RBInit:	
   187  0075                     ??_SegInit:	
   188                           ; 1 bytes @ 0x5
   189                           
   190  0075                     ??_SegLed:	
   191                           ; 1 bytes @ 0x5
   192                           
   193  0075                     ??___wmul:	
   194                           ; 1 bytes @ 0x5
   195                           
   196  0075                     ??___awdiv:	
   197                           ; 1 bytes @ 0x5
   198                           
   199  0075                     SegLed@num:	
   200                           ; 1 bytes @ 0x5
   201                           
   202  0075                     ___wmul@product:	
   203                           ; 1 bytes @ 0x5
   204                           
   205                           
   206                           ; 2 bytes @ 0x5
   207  0075                     	ds	2
   208                           
   209                           	psect	cstackBANK0
   210  0020                     __pcstackBANK0:	
   211  0020                     ?___wmul:	
   212  0020                     ?___awdiv:	
   213                           ; 2 bytes @ 0x0
   214                           
   215  0020                     ___wmul@multiplier:	
   216                           ; 2 bytes @ 0x0
   217                           
   218  0020                     ___awdiv@divisor:	
   219                           ; 2 bytes @ 0x0
   220                           
   221                           
   222                           ; 2 bytes @ 0x0
   223  0020                     	ds	2
   224  0022                     ___wmul@multiplicand:	
   225  0022                     ___awdiv@dividend:	
   226                           ; 2 bytes @ 0x2
   227                           
   228                           
   229                           ; 2 bytes @ 0x2
   230  0022                     	ds	2
   231  0024                     ?___lwdiv:	
   232  0024                     ___awdiv@counter:	
   233                           ; 2 bytes @ 0x4
   234                           
   235  0024                     ___lwdiv@divisor:	
   236                           ; 1 bytes @ 0x4
   237                           
   238                           
   239                           ; 2 bytes @ 0x4
   240  0024                     	ds	1
   241  0025                     ___awdiv@sign:	
   242                           
   243                           ; 1 bytes @ 0x5
   244  0025                     	ds	1
   245  0026                     ___awdiv@quotient:	
   246  0026                     ___lwdiv@dividend:	
   247                           ; 2 bytes @ 0x6
   248                           
   249                           
   250                           ; 2 bytes @ 0x6
   251  0026                     	ds	2
   252  0028                     ??___lwdiv:	
   253                           
   254                           ; 1 bytes @ 0x8
   255  0028                     	ds	1
   256  0029                     ___lwdiv@quotient:	
   257                           
   258                           ; 2 bytes @ 0x9
   259  0029                     	ds	2
   260  002B                     ___lwdiv@counter:	
   261                           
   262                           ; 1 bytes @ 0xB
   263  002B                     	ds	1
   264  002C                     ?_SegNumber:	
   265  002C                     SegNumber@number:	
   266                           ; 1 bytes @ 0xC
   267                           
   268                           
   269                           ; 2 bytes @ 0xC
   270  002C                     	ds	2
   271  002E                     ??_SegNumber:	
   272                           
   273                           ; 1 bytes @ 0xE
   274  002E                     	ds	8
   275  0036                     SegNumber@e:	
   276                           
   277                           ; 2 bytes @ 0x16
   278  0036                     	ds	2
   279  0038                     SegNumber@d:	
   280                           
   281                           ; 2 bytes @ 0x18
   282  0038                     	ds	2
   283  003A                     SegNumber@b:	
   284                           
   285                           ; 2 bytes @ 0x1A
   286  003A                     	ds	2
   287  003C                     SegNumber@c:	
   288                           
   289                           ; 2 bytes @ 0x1C
   290  003C                     	ds	2
   291  003E                     SegNumber@a:	
   292                           
   293                           ; 2 bytes @ 0x1E
   294  003E                     	ds	2
   295  0040                     ??_main:	
   296                           
   297                           ; 1 bytes @ 0x20
   298  0040                     	ds	2
   299                           
   300                           	psect	maintext
   301  02DA                     __pmaintext:	
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 43 in file "interruptRB.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : B00/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   321 ;;      Params:         0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0
   323 ;;      Temps:          0       2       0       0       0
   324 ;;      Totals:         0       2       0       0       0
   325 ;;Total ram usage:        2 bytes
   326 ;; Hardware stack levels required when called:    3
   327 ;; This function calls:
   328 ;;		_RBInit
   329 ;;		_SegInit
   330 ;;		_SegNumber
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _main
   338  02DA                     _main:	
   339                           
   340                           ;interruptRB.c: 44: PCFG3 = 0;
   341                           
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   344  02DA  1683               	bsf	3,5	;RP0=1, select bank1
   345  02DB  1303               	bcf	3,6	;RP1=0, select bank1
   346  02DC  119F               	bcf	31,3	;volatile
   347                           
   348                           ;interruptRB.c: 45: PCFG2 = 1;
   349  02DD  151F               	bsf	31,2	;volatile
   350                           
   351                           ;interruptRB.c: 46: PCFG1 = 1;
   352  02DE  149F               	bsf	31,1	;volatile
   353                           
   354                           ;interruptRB.c: 47: PCFG0 = 0;
   355  02DF  101F               	bcf	31,0	;volatile
   356                           
   357                           ;interruptRB.c: 48: RBInit();
   358  02E0  120A  118A  230E  120A  118A  	fcall	_RBInit
   359                           
   360                           ;interruptRB.c: 49: SegInit();
   361  02E5  120A  118A  22FC  120A  118A  	fcall	_SegInit
   362                           
   363                           ;interruptRB.c: 50: i = 0;
   364  02EA  1283               	bcf	3,5	;RP0=0, select bank0
   365  02EB  1303               	bcf	3,6	;RP1=0, select bank0
   366  02EC  01C2               	clrf	_i
   367  02ED                     l1010:	
   368                           ;interruptRB.c: 51: while(1){
   369                           
   370                           
   371                           ;interruptRB.c: 52: SegNumber(i);
   372  02ED  1283               	bcf	3,5	;RP0=0, select bank0
   373  02EE  1303               	bcf	3,6	;RP1=0, select bank0
   374  02EF  0842               	movf	_i,w
   375  02F0  00C0               	movwf	??_main
   376  02F1  01C1               	clrf	??_main+1
   377  02F2  0840               	movf	??_main,w
   378  02F3  00AC               	movwf	SegNumber@number
   379  02F4  0841               	movf	??_main+1,w
   380  02F5  00AD               	movwf	SegNumber@number+1
   381  02F6  120A  118A  201C  120A  118A  	fcall	_SegNumber
   382  02FB  2AED               	goto	l1010
   383  02FC                     __end_of_main:	
   384                           ;interruptRB.c: 53: }
   385                           ;interruptRB.c: 54: return;
   386                           
   387                           
   388                           	psect	text1
   389  001C                     __ptext1:	
   390 ;; *************** function _SegNumber *****************
   391 ;; Defined at:
   392 ;;		line 34 in file "D:\PIC_MPlap\7SEG\My_7seg.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  number          2   12[BANK0 ] int 
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  a               2   30[BANK0 ] unsigned int 
   397 ;;  c               2   28[BANK0 ] unsigned int 
   398 ;;  b               2   26[BANK0 ] unsigned int 
   399 ;;  d               2   24[BANK0 ] unsigned int 
   400 ;;  e               2   22[BANK0 ] unsigned int 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       2       0       0       0
   411 ;;      Locals:         0      10       0       0       0
   412 ;;      Temps:          0       8       0       0       0
   413 ;;      Totals:         0      20       0       0       0
   414 ;;Total ram usage:       20 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    2
   417 ;; This function calls:
   418 ;;		_SegLed
   419 ;;		___awdiv
   420 ;;		___lwdiv
   421 ;;		___wmul
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _SegNumber
   429  001C                     _SegNumber:	
   430                           
   431                           ;My_7seg.c: 36: unsigned int a,b,c,d,e;
   432                           ;My_7seg.c: 38: a = (number/10000);
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _SegNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436  001C  3010               	movlw	16
   437  001D  1283               	bcf	3,5	;RP0=0, select bank0
   438  001E  1303               	bcf	3,6	;RP1=0, select bank0
   439  001F  00A0               	movwf	___awdiv@divisor
   440  0020  3027               	movlw	39
   441  0021  00A1               	movwf	___awdiv@divisor+1
   442  0022  082D               	movf	SegNumber@number+1,w
   443  0023  00A3               	movwf	___awdiv@dividend+1
   444  0024  082C               	movf	SegNumber@number,w
   445  0025  00A2               	movwf	___awdiv@dividend
   446  0026  120A  118A  21A3  120A  118A  	fcall	___awdiv
   447  002B  1283               	bcf	3,5	;RP0=0, select bank0
   448  002C  1303               	bcf	3,6	;RP1=0, select bank0
   449  002D  0821               	movf	?___awdiv+1,w
   450  002E  00BF               	movwf	SegNumber@a+1
   451  002F  0820               	movf	?___awdiv,w
   452  0030  00BE               	movwf	SegNumber@a
   453                           
   454                           ;My_7seg.c: 39: b = (number - a*10000)/1000;
   455  0031  30E8               	movlw	232
   456  0032  00A4               	movwf	___lwdiv@divisor
   457  0033  3003               	movlw	3
   458  0034  00A5               	movwf	___lwdiv@divisor+1
   459  0035  083F               	movf	SegNumber@a+1,w
   460  0036  00A1               	movwf	___wmul@multiplier+1
   461  0037  083E               	movf	SegNumber@a,w
   462  0038  00A0               	movwf	___wmul@multiplier
   463  0039  3010               	movlw	16
   464  003A  00A2               	movwf	___wmul@multiplicand
   465  003B  3027               	movlw	39
   466  003C  00A3               	movwf	___wmul@multiplicand+1
   467  003D  120A  118A  22B7  120A  118A  	fcall	___wmul
   468  0042  1283               	bcf	3,5	;RP0=0, select bank0
   469  0043  1303               	bcf	3,6	;RP1=0, select bank0
   470  0044  0920               	comf	?___wmul,w
   471  0045  00AE               	movwf	??_SegNumber
   472  0046  0921               	comf	?___wmul+1,w
   473  0047  00AF               	movwf	??_SegNumber+1
   474  0048  0AAE               	incf	??_SegNumber,f
   475  0049  1903               	skipnz
   476  004A  0AAF               	incf	??_SegNumber+1,f
   477  004B  082C               	movf	SegNumber@number,w
   478  004C  072E               	addwf	??_SegNumber,w
   479  004D  00A6               	movwf	___lwdiv@dividend
   480  004E  082D               	movf	SegNumber@number+1,w
   481  004F  1803               	skipnc
   482  0050  0A2D               	incf	SegNumber@number+1,w
   483  0051  072F               	addwf	??_SegNumber+1,w
   484  0052  00A7               	movwf	___lwdiv@dividend+1
   485  0053  120A  118A  2253  120A  118A  	fcall	___lwdiv
   486  0058  1283               	bcf	3,5	;RP0=0, select bank0
   487  0059  1303               	bcf	3,6	;RP1=0, select bank0
   488  005A  0825               	movf	?___lwdiv+1,w
   489  005B  00BB               	movwf	SegNumber@b+1
   490  005C  0824               	movf	?___lwdiv,w
   491  005D  00BA               	movwf	SegNumber@b
   492                           
   493                           ;My_7seg.c: 40: c = (number - a*10000 - b*1000)/100;
   494  005E  3064               	movlw	100
   495  005F  00A4               	movwf	___lwdiv@divisor
   496  0060  3000               	movlw	0
   497  0061  00A5               	movwf	___lwdiv@divisor+1
   498  0062  083F               	movf	SegNumber@a+1,w
   499  0063  00A1               	movwf	___wmul@multiplier+1
   500  0064  083E               	movf	SegNumber@a,w
   501  0065  00A0               	movwf	___wmul@multiplier
   502  0066  3010               	movlw	16
   503  0067  00A2               	movwf	___wmul@multiplicand
   504  0068  3027               	movlw	39
   505  0069  00A3               	movwf	___wmul@multiplicand+1
   506  006A  120A  118A  22B7  120A  118A  	fcall	___wmul
   507  006F  1283               	bcf	3,5	;RP0=0, select bank0
   508  0070  1303               	bcf	3,6	;RP1=0, select bank0
   509  0071  0820               	movf	?___wmul,w
   510  0072  00AE               	movwf	??_SegNumber
   511  0073  0821               	movf	?___wmul+1,w
   512  0074  00AF               	movwf	??_SegNumber+1
   513  0075  083B               	movf	SegNumber@b+1,w
   514  0076  00A1               	movwf	___wmul@multiplier+1
   515  0077  083A               	movf	SegNumber@b,w
   516  0078  00A0               	movwf	___wmul@multiplier
   517  0079  30E8               	movlw	232
   518  007A  00A2               	movwf	___wmul@multiplicand
   519  007B  3003               	movlw	3
   520  007C  00A3               	movwf	___wmul@multiplicand+1
   521  007D  120A  118A  22B7  120A  118A  	fcall	___wmul
   522  0082  1283               	bcf	3,5	;RP0=0, select bank0
   523  0083  1303               	bcf	3,6	;RP1=0, select bank0
   524  0084  0820               	movf	?___wmul,w
   525  0085  072E               	addwf	??_SegNumber,w
   526  0086  00B0               	movwf	??_SegNumber+2
   527  0087  0821               	movf	?___wmul+1,w
   528  0088  1803               	skipnc
   529  0089  0A21               	incf	?___wmul+1,w
   530  008A  072F               	addwf	??_SegNumber+1,w
   531  008B  00B1               	movwf	??_SegNumber+3
   532  008C  09B0               	comf	??_SegNumber+2,f
   533  008D  09B1               	comf	??_SegNumber+3,f
   534  008E  0AB0               	incf	??_SegNumber+2,f
   535  008F  1903               	skipnz
   536  0090  0AB1               	incf	??_SegNumber+3,f
   537  0091  082C               	movf	SegNumber@number,w
   538  0092  0730               	addwf	??_SegNumber+2,w
   539  0093  00A6               	movwf	___lwdiv@dividend
   540  0094  082D               	movf	SegNumber@number+1,w
   541  0095  1803               	skipnc
   542  0096  0A2D               	incf	SegNumber@number+1,w
   543  0097  0731               	addwf	??_SegNumber+3,w
   544  0098  00A7               	movwf	___lwdiv@dividend+1
   545  0099  120A  118A  2253  120A  118A  	fcall	___lwdiv
   546  009E  1283               	bcf	3,5	;RP0=0, select bank0
   547  009F  1303               	bcf	3,6	;RP1=0, select bank0
   548  00A0  0825               	movf	?___lwdiv+1,w
   549  00A1  00BD               	movwf	SegNumber@c+1
   550  00A2  0824               	movf	?___lwdiv,w
   551  00A3  00BC               	movwf	SegNumber@c
   552                           
   553                           ;My_7seg.c: 41: d = (number - a*10000 - b*1000 - c*100)/10;
   554  00A4  300A               	movlw	10
   555  00A5  00A4               	movwf	___lwdiv@divisor
   556  00A6  3000               	movlw	0
   557  00A7  00A5               	movwf	___lwdiv@divisor+1
   558  00A8  083F               	movf	SegNumber@a+1,w
   559  00A9  00A1               	movwf	___wmul@multiplier+1
   560  00AA  083E               	movf	SegNumber@a,w
   561  00AB  00A0               	movwf	___wmul@multiplier
   562  00AC  3010               	movlw	16
   563  00AD  00A2               	movwf	___wmul@multiplicand
   564  00AE  3027               	movlw	39
   565  00AF  00A3               	movwf	___wmul@multiplicand+1
   566  00B0  120A  118A  22B7  120A  118A  	fcall	___wmul
   567  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   568  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   569  00B7  0820               	movf	?___wmul,w
   570  00B8  00AE               	movwf	??_SegNumber
   571  00B9  0821               	movf	?___wmul+1,w
   572  00BA  00AF               	movwf	??_SegNumber+1
   573  00BB  083B               	movf	SegNumber@b+1,w
   574  00BC  00A1               	movwf	___wmul@multiplier+1
   575  00BD  083A               	movf	SegNumber@b,w
   576  00BE  00A0               	movwf	___wmul@multiplier
   577  00BF  30E8               	movlw	232
   578  00C0  00A2               	movwf	___wmul@multiplicand
   579  00C1  3003               	movlw	3
   580  00C2  00A3               	movwf	___wmul@multiplicand+1
   581  00C3  120A  118A  22B7  120A  118A  	fcall	___wmul
   582  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   583  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   584  00CA  0820               	movf	?___wmul,w
   585  00CB  072E               	addwf	??_SegNumber,w
   586  00CC  00B0               	movwf	??_SegNumber+2
   587  00CD  0821               	movf	?___wmul+1,w
   588  00CE  1803               	skipnc
   589  00CF  0A21               	incf	?___wmul+1,w
   590  00D0  072F               	addwf	??_SegNumber+1,w
   591  00D1  00B1               	movwf	??_SegNumber+3
   592  00D2  083D               	movf	SegNumber@c+1,w
   593  00D3  00A1               	movwf	___wmul@multiplier+1
   594  00D4  083C               	movf	SegNumber@c,w
   595  00D5  00A0               	movwf	___wmul@multiplier
   596  00D6  3064               	movlw	100
   597  00D7  00A2               	movwf	___wmul@multiplicand
   598  00D8  3000               	movlw	0
   599  00D9  00A3               	movwf	___wmul@multiplicand+1
   600  00DA  120A  118A  22B7  120A  118A  	fcall	___wmul
   601  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   602  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   603  00E1  0820               	movf	?___wmul,w
   604  00E2  0730               	addwf	??_SegNumber+2,w
   605  00E3  00B2               	movwf	??_SegNumber+4
   606  00E4  0821               	movf	?___wmul+1,w
   607  00E5  1803               	skipnc
   608  00E6  0A21               	incf	?___wmul+1,w
   609  00E7  0731               	addwf	??_SegNumber+3,w
   610  00E8  00B3               	movwf	??_SegNumber+5
   611  00E9  09B2               	comf	??_SegNumber+4,f
   612  00EA  09B3               	comf	??_SegNumber+5,f
   613  00EB  0AB2               	incf	??_SegNumber+4,f
   614  00EC  1903               	skipnz
   615  00ED  0AB3               	incf	??_SegNumber+5,f
   616  00EE  082C               	movf	SegNumber@number,w
   617  00EF  0732               	addwf	??_SegNumber+4,w
   618  00F0  00A6               	movwf	___lwdiv@dividend
   619  00F1  082D               	movf	SegNumber@number+1,w
   620  00F2  1803               	skipnc
   621  00F3  0A2D               	incf	SegNumber@number+1,w
   622  00F4  0733               	addwf	??_SegNumber+5,w
   623  00F5  00A7               	movwf	___lwdiv@dividend+1
   624  00F6  120A  118A  2253  120A  118A  	fcall	___lwdiv
   625  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   626  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   627  00FD  0825               	movf	?___lwdiv+1,w
   628  00FE  00B9               	movwf	SegNumber@d+1
   629  00FF  0824               	movf	?___lwdiv,w
   630  0100  00B8               	movwf	SegNumber@d
   631                           
   632                           ;My_7seg.c: 42: e = (number - a*10000 - b*1000 - c*100 - d*10);
   633  0101  083F               	movf	SegNumber@a+1,w
   634  0102  00A1               	movwf	___wmul@multiplier+1
   635  0103  083E               	movf	SegNumber@a,w
   636  0104  00A0               	movwf	___wmul@multiplier
   637  0105  3010               	movlw	16
   638  0106  00A2               	movwf	___wmul@multiplicand
   639  0107  3027               	movlw	39
   640  0108  00A3               	movwf	___wmul@multiplicand+1
   641  0109  120A  118A  22B7  120A  118A  	fcall	___wmul
   642  010E  1283               	bcf	3,5	;RP0=0, select bank0
   643  010F  1303               	bcf	3,6	;RP1=0, select bank0
   644  0110  0820               	movf	?___wmul,w
   645  0111  00AE               	movwf	??_SegNumber
   646  0112  0821               	movf	?___wmul+1,w
   647  0113  00AF               	movwf	??_SegNumber+1
   648  0114  083B               	movf	SegNumber@b+1,w
   649  0115  00A1               	movwf	___wmul@multiplier+1
   650  0116  083A               	movf	SegNumber@b,w
   651  0117  00A0               	movwf	___wmul@multiplier
   652  0118  30E8               	movlw	232
   653  0119  00A2               	movwf	___wmul@multiplicand
   654  011A  3003               	movlw	3
   655  011B  00A3               	movwf	___wmul@multiplicand+1
   656  011C  120A  118A  22B7  120A  118A  	fcall	___wmul
   657  0121  1283               	bcf	3,5	;RP0=0, select bank0
   658  0122  1303               	bcf	3,6	;RP1=0, select bank0
   659  0123  0820               	movf	?___wmul,w
   660  0124  072E               	addwf	??_SegNumber,w
   661  0125  00B0               	movwf	??_SegNumber+2
   662  0126  0821               	movf	?___wmul+1,w
   663  0127  1803               	skipnc
   664  0128  0A21               	incf	?___wmul+1,w
   665  0129  072F               	addwf	??_SegNumber+1,w
   666  012A  00B1               	movwf	??_SegNumber+3
   667  012B  083D               	movf	SegNumber@c+1,w
   668  012C  00A1               	movwf	___wmul@multiplier+1
   669  012D  083C               	movf	SegNumber@c,w
   670  012E  00A0               	movwf	___wmul@multiplier
   671  012F  3064               	movlw	100
   672  0130  00A2               	movwf	___wmul@multiplicand
   673  0131  3000               	movlw	0
   674  0132  00A3               	movwf	___wmul@multiplicand+1
   675  0133  120A  118A  22B7  120A  118A  	fcall	___wmul
   676  0138  1283               	bcf	3,5	;RP0=0, select bank0
   677  0139  1303               	bcf	3,6	;RP1=0, select bank0
   678  013A  0820               	movf	?___wmul,w
   679  013B  0730               	addwf	??_SegNumber+2,w
   680  013C  00B2               	movwf	??_SegNumber+4
   681  013D  0821               	movf	?___wmul+1,w
   682  013E  1803               	skipnc
   683  013F  0A21               	incf	?___wmul+1,w
   684  0140  0731               	addwf	??_SegNumber+3,w
   685  0141  00B3               	movwf	??_SegNumber+5
   686  0142  0839               	movf	SegNumber@d+1,w
   687  0143  00A1               	movwf	___wmul@multiplier+1
   688  0144  0838               	movf	SegNumber@d,w
   689  0145  00A0               	movwf	___wmul@multiplier
   690  0146  300A               	movlw	10
   691  0147  00A2               	movwf	___wmul@multiplicand
   692  0148  3000               	movlw	0
   693  0149  00A3               	movwf	___wmul@multiplicand+1
   694  014A  120A  118A  22B7  120A  118A  	fcall	___wmul
   695  014F  1283               	bcf	3,5	;RP0=0, select bank0
   696  0150  1303               	bcf	3,6	;RP1=0, select bank0
   697  0151  0820               	movf	?___wmul,w
   698  0152  0732               	addwf	??_SegNumber+4,w
   699  0153  00B4               	movwf	??_SegNumber+6
   700  0154  0821               	movf	?___wmul+1,w
   701  0155  1803               	skipnc
   702  0156  0A21               	incf	?___wmul+1,w
   703  0157  0733               	addwf	??_SegNumber+5,w
   704  0158  00B5               	movwf	??_SegNumber+7
   705  0159  09B4               	comf	??_SegNumber+6,f
   706  015A  09B5               	comf	??_SegNumber+7,f
   707  015B  0AB4               	incf	??_SegNumber+6,f
   708  015C  1903               	skipnz
   709  015D  0AB5               	incf	??_SegNumber+7,f
   710  015E  082C               	movf	SegNumber@number,w
   711  015F  0734               	addwf	??_SegNumber+6,w
   712  0160  00B6               	movwf	SegNumber@e
   713  0161  082D               	movf	SegNumber@number+1,w
   714  0162  1803               	skipnc
   715  0163  0A2D               	incf	SegNumber@number+1,w
   716  0164  0735               	addwf	??_SegNumber+7,w
   717  0165  00B7               	movwf	SegNumber@e+1
   718                           
   719                           ;My_7seg.c: 46: RA0=0;
   720  0166  1005               	bcf	5,0	;volatile
   721                           
   722                           ;My_7seg.c: 47: SegLed(c);
   723  0167  083C               	movf	SegNumber@c,w
   724  0168  120A  118A  21FE  120A  118A  	fcall	_SegLed
   725                           
   726                           ;My_7seg.c: 48: _delay((unsigned long)((2)*(20000000/4000.0)));
   727  016D  300D               	movlw	13
   728  016E  1283               	bcf	3,5	;RP0=0, select bank0
   729  016F  1303               	bcf	3,6	;RP1=0, select bank0
   730  0170  00AF               	movwf	??_SegNumber+1
   731  0171  30FB               	movlw	251
   732  0172  00AE               	movwf	??_SegNumber
   733  0173                     u677:	
   734  0173  0BAE               	decfsz	??_SegNumber,f
   735  0174  2973               	goto	u677
   736  0175  0BAF               	decfsz	??_SegNumber+1,f
   737  0176  2973               	goto	u677
   738                           
   739                           ;My_7seg.c: 49: RA0=1;
   740  0177  1283               	bcf	3,5	;RP0=0, select bank0
   741  0178  1303               	bcf	3,6	;RP1=0, select bank0
   742  0179  1405               	bsf	5,0	;volatile
   743                           
   744                           ;My_7seg.c: 51: RA1=0;
   745  017A  1085               	bcf	5,1	;volatile
   746                           
   747                           ;My_7seg.c: 52: SegLed(d);
   748  017B  0838               	movf	SegNumber@d,w
   749  017C  120A  118A  21FE  120A  118A  	fcall	_SegLed
   750                           
   751                           ;My_7seg.c: 53: _delay((unsigned long)((2)*(20000000/4000.0)));
   752  0181  300D               	movlw	13
   753  0182  1283               	bcf	3,5	;RP0=0, select bank0
   754  0183  1303               	bcf	3,6	;RP1=0, select bank0
   755  0184  00AF               	movwf	??_SegNumber+1
   756  0185  30FB               	movlw	251
   757  0186  00AE               	movwf	??_SegNumber
   758  0187                     u687:	
   759  0187  0BAE               	decfsz	??_SegNumber,f
   760  0188  2987               	goto	u687
   761  0189  0BAF               	decfsz	??_SegNumber+1,f
   762  018A  2987               	goto	u687
   763                           
   764                           ;My_7seg.c: 54: RA1=1;
   765  018B  1283               	bcf	3,5	;RP0=0, select bank0
   766  018C  1303               	bcf	3,6	;RP1=0, select bank0
   767  018D  1485               	bsf	5,1	;volatile
   768                           
   769                           ;My_7seg.c: 56: RA2=0;
   770  018E  1105               	bcf	5,2	;volatile
   771                           
   772                           ;My_7seg.c: 57: SegLed(e);
   773  018F  0836               	movf	SegNumber@e,w
   774  0190  120A  118A  21FE  120A  118A  	fcall	_SegLed
   775                           
   776                           ;My_7seg.c: 58: _delay((unsigned long)((2)*(20000000/4000.0)));
   777  0195  300D               	movlw	13
   778  0196  1283               	bcf	3,5	;RP0=0, select bank0
   779  0197  1303               	bcf	3,6	;RP1=0, select bank0
   780  0198  00AF               	movwf	??_SegNumber+1
   781  0199  30FB               	movlw	251
   782  019A  00AE               	movwf	??_SegNumber
   783  019B                     u697:	
   784  019B  0BAE               	decfsz	??_SegNumber,f
   785  019C  299B               	goto	u697
   786  019D  0BAF               	decfsz	??_SegNumber+1,f
   787  019E  299B               	goto	u697
   788                           
   789                           ;My_7seg.c: 59: RA2=1;
   790  019F  1283               	bcf	3,5	;RP0=0, select bank0
   791  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   792  01A1  1505               	bsf	5,2	;volatile
   793  01A2  0008               	return
   794  01A3                     __end_of_SegNumber:	
   795                           
   796                           	psect	text2
   797  02B7                     __ptext2:	
   798 ;; *************** function ___wmul *****************
   799 ;; Defined at:
   800 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  multiplier      2    0[BANK0 ] unsigned int 
   803 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  product         2    5[COMMON] unsigned int 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  2    0[BANK0 ] unsigned int 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       4       0       0       0
   816 ;;      Locals:         2       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0
   818 ;;      Totals:         2       4       0       0       0
   819 ;;Total ram usage:        6 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_SegNumber
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function ___wmul
   831  02B7                     ___wmul:	
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   835  02B7  01F5               	clrf	___wmul@product
   836  02B8  01F6               	clrf	___wmul@product+1
   837  02B9                     l922:	
   838  02B9  1283               	bcf	3,5	;RP0=0, select bank0
   839  02BA  1303               	bcf	3,6	;RP1=0, select bank0
   840  02BB  1C20               	btfss	___wmul@multiplier,0
   841  02BC  2AC3               	goto	l176
   842  02BD  0822               	movf	___wmul@multiplicand,w
   843  02BE  07F5               	addwf	___wmul@product,f
   844  02BF  1803               	skipnc
   845  02C0  0AF6               	incf	___wmul@product+1,f
   846  02C1  0823               	movf	___wmul@multiplicand+1,w
   847  02C2  07F6               	addwf	___wmul@product+1,f
   848  02C3                     l176:	
   849  02C3  3001               	movlw	1
   850  02C4                     u545:	
   851  02C4  1003               	clrc
   852  02C5  0DA2               	rlf	___wmul@multiplicand,f
   853  02C6  0DA3               	rlf	___wmul@multiplicand+1,f
   854  02C7  3EFF               	addlw	-1
   855  02C8  1D03               	skipz
   856  02C9  2AC4               	goto	u545
   857  02CA  3001               	movlw	1
   858  02CB                     u555:	
   859  02CB  1003               	clrc
   860  02CC  0CA1               	rrf	___wmul@multiplier+1,f
   861  02CD  0CA0               	rrf	___wmul@multiplier,f
   862  02CE  3EFF               	addlw	-1
   863  02CF  1D03               	skipz
   864  02D0  2ACB               	goto	u555
   865  02D1  0820               	movf	___wmul@multiplier,w
   866  02D2  0421               	iorwf	___wmul@multiplier+1,w
   867  02D3  1D03               	btfss	3,2
   868  02D4  2AB9               	goto	l922
   869  02D5  0876               	movf	___wmul@product+1,w
   870  02D6  00A1               	movwf	?___wmul+1
   871  02D7  0875               	movf	___wmul@product,w
   872  02D8  00A0               	movwf	?___wmul
   873  02D9  0008               	return
   874  02DA                     __end_of___wmul:	
   875                           
   876                           	psect	text3
   877  0253                     __ptext3:	
   878 ;; *************** function ___lwdiv *****************
   879 ;; Defined at:
   880 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  divisor         2    4[BANK0 ] unsigned int 
   883 ;;  dividend        2    6[BANK0 ] unsigned int 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  quotient        2    9[BANK0 ] unsigned int 
   886 ;;  counter         1   11[BANK0 ] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  2    4[BANK0 ] unsigned int 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       4       0       0       0
   897 ;;      Locals:         0       3       0       0       0
   898 ;;      Temps:          0       1       0       0       0
   899 ;;      Totals:         0       8       0       0       0
   900 ;;Total ram usage:        8 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_SegNumber
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function ___lwdiv
   912  0253                     ___lwdiv:	
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   916  0253  1283               	bcf	3,5	;RP0=0, select bank0
   917  0254  1303               	bcf	3,6	;RP1=0, select bank0
   918  0255  01A9               	clrf	___lwdiv@quotient
   919  0256  01AA               	clrf	___lwdiv@quotient+1
   920  0257  0824               	movf	___lwdiv@divisor,w
   921  0258  0425               	iorwf	___lwdiv@divisor+1,w
   922  0259  1903               	btfsc	3,2
   923  025A  2A8C               	goto	l842
   924  025B  01AB               	clrf	___lwdiv@counter
   925  025C  0AAB               	incf	___lwdiv@counter,f
   926  025D                     l830:	
   927  025D  1BA5               	btfsc	___lwdiv@divisor+1,7
   928  025E  2A6B               	goto	l832
   929  025F  3001               	movlw	1
   930  0260                     u425:	
   931  0260  1003               	clrc
   932  0261  0DA4               	rlf	___lwdiv@divisor,f
   933  0262  0DA5               	rlf	___lwdiv@divisor+1,f
   934  0263  3EFF               	addlw	-1
   935  0264  1D03               	skipz
   936  0265  2A60               	goto	u425
   937  0266  3001               	movlw	1
   938  0267  00A8               	movwf	??___lwdiv
   939  0268  0828               	movf	??___lwdiv,w
   940  0269  07AB               	addwf	___lwdiv@counter,f
   941  026A  2A5D               	goto	l830
   942  026B                     l832:	
   943  026B  3001               	movlw	1
   944  026C                     u445:	
   945  026C  1003               	clrc
   946  026D  0DA9               	rlf	___lwdiv@quotient,f
   947  026E  0DAA               	rlf	___lwdiv@quotient+1,f
   948  026F  3EFF               	addlw	-1
   949  0270  1D03               	skipz
   950  0271  2A6C               	goto	u445
   951  0272  0825               	movf	___lwdiv@divisor+1,w
   952  0273  0227               	subwf	___lwdiv@dividend+1,w
   953  0274  1D03               	skipz
   954  0275  2A78               	goto	u455
   955  0276  0824               	movf	___lwdiv@divisor,w
   956  0277  0226               	subwf	___lwdiv@dividend,w
   957  0278                     u455:	
   958  0278  1C03               	skipc
   959  0279  2A81               	goto	l838
   960  027A  0824               	movf	___lwdiv@divisor,w
   961  027B  02A6               	subwf	___lwdiv@dividend,f
   962  027C  0825               	movf	___lwdiv@divisor+1,w
   963  027D  1C03               	skipc
   964  027E  03A7               	decf	___lwdiv@dividend+1,f
   965  027F  02A7               	subwf	___lwdiv@dividend+1,f
   966  0280  1429               	bsf	___lwdiv@quotient,0
   967  0281                     l838:	
   968  0281  3001               	movlw	1
   969  0282                     u465:	
   970  0282  1003               	clrc
   971  0283  0CA5               	rrf	___lwdiv@divisor+1,f
   972  0284  0CA4               	rrf	___lwdiv@divisor,f
   973  0285  3EFF               	addlw	-1
   974  0286  1D03               	skipz
   975  0287  2A82               	goto	u465
   976  0288  3001               	movlw	1
   977  0289  02AB               	subwf	___lwdiv@counter,f
   978  028A  1D03               	btfss	3,2
   979  028B  2A6B               	goto	l832
   980  028C                     l842:	
   981  028C  082A               	movf	___lwdiv@quotient+1,w
   982  028D  00A5               	movwf	?___lwdiv+1
   983  028E  0829               	movf	___lwdiv@quotient,w
   984  028F  00A4               	movwf	?___lwdiv
   985  0290  0008               	return
   986  0291                     __end_of___lwdiv:	
   987                           
   988                           	psect	text4
   989  01A3                     __ptext4:	
   990 ;; *************** function ___awdiv *****************
   991 ;; Defined at:
   992 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  divisor         2    0[BANK0 ] int 
   995 ;;  dividend        2    2[BANK0 ] int 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  quotient        2    6[BANK0 ] int 
   998 ;;  sign            1    5[BANK0 ] unsigned char 
   999 ;;  counter         1    4[BANK0 ] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2    0[BANK0 ] int 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       4       0       0       0
  1010 ;;      Locals:         0       4       0       0       0
  1011 ;;      Temps:          1       0       0       0       0
  1012 ;;      Totals:         1       8       0       0       0
  1013 ;;Total ram usage:        9 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_SegNumber
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function ___awdiv
  1025  01A3                     ___awdiv:	
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1029  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1030  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1031  01A5  01A5               	clrf	___awdiv@sign
  1032  01A6  1FA1               	btfss	___awdiv@divisor+1,7
  1033  01A7  29AF               	goto	l942
  1034  01A8  09A0               	comf	___awdiv@divisor,f
  1035  01A9  09A1               	comf	___awdiv@divisor+1,f
  1036  01AA  0AA0               	incf	___awdiv@divisor,f
  1037  01AB  1903               	skipnz
  1038  01AC  0AA1               	incf	___awdiv@divisor+1,f
  1039  01AD  01A5               	clrf	___awdiv@sign
  1040  01AE  0AA5               	incf	___awdiv@sign,f
  1041  01AF                     l942:	
  1042  01AF  1FA3               	btfss	___awdiv@dividend+1,7
  1043  01B0  29BA               	goto	l948
  1044  01B1  09A2               	comf	___awdiv@dividend,f
  1045  01B2  09A3               	comf	___awdiv@dividend+1,f
  1046  01B3  0AA2               	incf	___awdiv@dividend,f
  1047  01B4  1903               	skipnz
  1048  01B5  0AA3               	incf	___awdiv@dividend+1,f
  1049  01B6  3001               	movlw	1
  1050  01B7  00F5               	movwf	??___awdiv
  1051  01B8  0875               	movf	??___awdiv,w
  1052  01B9  06A5               	xorwf	___awdiv@sign,f
  1053  01BA                     l948:	
  1054  01BA  01A6               	clrf	___awdiv@quotient
  1055  01BB  01A7               	clrf	___awdiv@quotient+1
  1056  01BC  0820               	movf	___awdiv@divisor,w
  1057  01BD  0421               	iorwf	___awdiv@divisor+1,w
  1058  01BE  1903               	btfsc	3,2
  1059  01BF  29F1               	goto	l970
  1060  01C0  01A4               	clrf	___awdiv@counter
  1061  01C1  0AA4               	incf	___awdiv@counter,f
  1062  01C2                     l958:	
  1063  01C2  1BA1               	btfsc	___awdiv@divisor+1,7
  1064  01C3  29D0               	goto	l960
  1065  01C4  3001               	movlw	1
  1066  01C5                     u605:	
  1067  01C5  1003               	clrc
  1068  01C6  0DA0               	rlf	___awdiv@divisor,f
  1069  01C7  0DA1               	rlf	___awdiv@divisor+1,f
  1070  01C8  3EFF               	addlw	-1
  1071  01C9  1D03               	skipz
  1072  01CA  29C5               	goto	u605
  1073  01CB  3001               	movlw	1
  1074  01CC  00F5               	movwf	??___awdiv
  1075  01CD  0875               	movf	??___awdiv,w
  1076  01CE  07A4               	addwf	___awdiv@counter,f
  1077  01CF  29C2               	goto	l958
  1078  01D0                     l960:	
  1079  01D0  3001               	movlw	1
  1080  01D1                     u625:	
  1081  01D1  1003               	clrc
  1082  01D2  0DA6               	rlf	___awdiv@quotient,f
  1083  01D3  0DA7               	rlf	___awdiv@quotient+1,f
  1084  01D4  3EFF               	addlw	-1
  1085  01D5  1D03               	skipz
  1086  01D6  29D1               	goto	u625
  1087  01D7  0821               	movf	___awdiv@divisor+1,w
  1088  01D8  0223               	subwf	___awdiv@dividend+1,w
  1089  01D9  1D03               	skipz
  1090  01DA  29DD               	goto	u635
  1091  01DB  0820               	movf	___awdiv@divisor,w
  1092  01DC  0222               	subwf	___awdiv@dividend,w
  1093  01DD                     u635:	
  1094  01DD  1C03               	skipc
  1095  01DE  29E6               	goto	l966
  1096  01DF  0820               	movf	___awdiv@divisor,w
  1097  01E0  02A2               	subwf	___awdiv@dividend,f
  1098  01E1  0821               	movf	___awdiv@divisor+1,w
  1099  01E2  1C03               	skipc
  1100  01E3  03A3               	decf	___awdiv@dividend+1,f
  1101  01E4  02A3               	subwf	___awdiv@dividend+1,f
  1102  01E5  1426               	bsf	___awdiv@quotient,0
  1103  01E6                     l966:	
  1104  01E6  3001               	movlw	1
  1105  01E7                     u645:	
  1106  01E7  1003               	clrc
  1107  01E8  0CA1               	rrf	___awdiv@divisor+1,f
  1108  01E9  0CA0               	rrf	___awdiv@divisor,f
  1109  01EA  3EFF               	addlw	-1
  1110  01EB  1D03               	skipz
  1111  01EC  29E7               	goto	u645
  1112  01ED  3001               	movlw	1
  1113  01EE  02A4               	subwf	___awdiv@counter,f
  1114  01EF  1D03               	btfss	3,2
  1115  01F0  29D0               	goto	l960
  1116  01F1                     l970:	
  1117  01F1  0825               	movf	___awdiv@sign,w
  1118  01F2  1903               	btfsc	3,2
  1119  01F3  29F9               	goto	l974
  1120  01F4  09A6               	comf	___awdiv@quotient,f
  1121  01F5  09A7               	comf	___awdiv@quotient+1,f
  1122  01F6  0AA6               	incf	___awdiv@quotient,f
  1123  01F7  1903               	skipnz
  1124  01F8  0AA7               	incf	___awdiv@quotient+1,f
  1125  01F9                     l974:	
  1126  01F9  0827               	movf	___awdiv@quotient+1,w
  1127  01FA  00A1               	movwf	?___awdiv+1
  1128  01FB  0826               	movf	___awdiv@quotient,w
  1129  01FC  00A0               	movwf	?___awdiv
  1130  01FD  0008               	return
  1131  01FE                     __end_of___awdiv:	
  1132                           
  1133                           	psect	text5
  1134  01FE                     __ptext5:	
  1135 ;; *************** function _SegLed *****************
  1136 ;; Defined at:
  1137 ;;		line 18 in file "D:\PIC_MPlap\7SEG\My_7seg.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  num             1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  num             1    5[COMMON] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0
  1154 ;;      Totals:         1       0       0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_SegNumber
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _SegLed
  1167  01FE                     _SegLed:	
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _SegLed: [wreg-fsr0h+status,2+status,0]
  1171                           ;SegLed@num stored from wreg
  1172  01FE  00F5               	movwf	SegLed@num
  1173                           
  1174                           ;My_7seg.c: 20: switch(num)
  1175  01FF  2A32               	goto	l760
  1176  0200                     l738:	
  1177                           ;My_7seg.c: 21: {
  1178                           ;My_7seg.c: 22: case 0: {PORTD = 0x03; break;}
  1179                           
  1180  0200  3003               	movlw	3
  1181  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0203  0088               	movwf	8	;volatile
  1184  0204  0008               	return
  1185  0205                     l740:	
  1186                           ;My_7seg.c: 23: case 1: {PORTD = 0x9f; break;}
  1187                           
  1188  0205  309F               	movlw	159
  1189  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0208  0088               	movwf	8	;volatile
  1192  0209  0008               	return
  1193  020A                     l742:	
  1194                           ;My_7seg.c: 24: case 2: {PORTD = 0x25; break;}
  1195                           
  1196  020A  3025               	movlw	37
  1197  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1198  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1199  020D  0088               	movwf	8	;volatile
  1200  020E  0008               	return
  1201  020F                     l744:	
  1202                           ;My_7seg.c: 25: case 3: {PORTD = 0x0D; break;}
  1203                           
  1204  020F  300D               	movlw	13
  1205  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0212  0088               	movwf	8	;volatile
  1208  0213  0008               	return
  1209  0214                     l746:	
  1210                           ;My_7seg.c: 26: case 4: {PORTD = 0x99; break;}
  1211                           
  1212  0214  3099               	movlw	153
  1213  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0217  0088               	movwf	8	;volatile
  1216  0218  0008               	return
  1217  0219                     l748:	
  1218                           ;My_7seg.c: 27: case 5: {PORTD = 0x49; break;}
  1219                           
  1220  0219  3049               	movlw	73
  1221  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1222  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1223  021C  0088               	movwf	8	;volatile
  1224  021D  0008               	return
  1225  021E                     l750:	
  1226                           ;My_7seg.c: 28: case 6: {PORTD = 0x41; break;}
  1227                           
  1228  021E  3041               	movlw	65
  1229  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0221  0088               	movwf	8	;volatile
  1232  0222  0008               	return
  1233  0223                     l752:	
  1234                           ;My_7seg.c: 29: case 7: {PORTD = 0x1f; break;}
  1235                           
  1236  0223  301F               	movlw	31
  1237  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0226  0088               	movwf	8	;volatile
  1240  0227  0008               	return
  1241  0228                     l754:	
  1242                           ;My_7seg.c: 30: case 8: {PORTD = 0x01; break;}
  1243                           
  1244  0228  3001               	movlw	1
  1245  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1246  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1247  022B  0088               	movwf	8	;volatile
  1248  022C  0008               	return
  1249  022D                     l756:	
  1250                           ;My_7seg.c: 31: case 9: {PORTD = 0x09; break;}
  1251                           
  1252  022D  3009               	movlw	9
  1253  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1254  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0230  0088               	movwf	8	;volatile
  1256                           
  1257                           ;My_7seg.c: 32: }
  1258  0231  0008               	return
  1259  0232                     l760:	
  1260  0232  0875               	movf	SegLed@num,w
  1261                           
  1262                           ; Switch size 1, requested type "space"
  1263                           ; Number of cases is 10, Range of values is 0 to 9
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte           31    16 (average)
  1267                           ; direct_byte           38     8 (fixed)
  1268                           ; jumptable            260     6 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270  0233  3A00               	xorlw	0	; case 0
  1271  0234  1903               	skipnz
  1272  0235  2A00               	goto	l738
  1273  0236  3A01               	xorlw	1	; case 1
  1274  0237  1903               	skipnz
  1275  0238  2A05               	goto	l740
  1276  0239  3A03               	xorlw	3	; case 2
  1277  023A  1903               	skipnz
  1278  023B  2A0A               	goto	l742
  1279  023C  3A01               	xorlw	1	; case 3
  1280  023D  1903               	skipnz
  1281  023E  2A0F               	goto	l744
  1282  023F  3A07               	xorlw	7	; case 4
  1283  0240  1903               	skipnz
  1284  0241  2A14               	goto	l746
  1285  0242  3A01               	xorlw	1	; case 5
  1286  0243  1903               	skipnz
  1287  0244  2A19               	goto	l748
  1288  0245  3A03               	xorlw	3	; case 6
  1289  0246  1903               	skipnz
  1290  0247  2A1E               	goto	l750
  1291  0248  3A01               	xorlw	1	; case 7
  1292  0249  1903               	skipnz
  1293  024A  2A23               	goto	l752
  1294  024B  3A0F               	xorlw	15	; case 8
  1295  024C  1903               	skipnz
  1296  024D  2A28               	goto	l754
  1297  024E  3A01               	xorlw	1	; case 9
  1298  024F  1903               	skipnz
  1299  0250  2A2D               	goto	l756
  1300  0251  2A52               	goto	l64
  1301  0252                     l64:	
  1302  0252  0008               	return
  1303  0253                     __end_of_SegLed:	
  1304                           
  1305                           	psect	text6
  1306  02FC                     __ptext6:	
  1307 ;; *************** function _SegInit *****************
  1308 ;; Defined at:
  1309 ;;		line 5 in file "D:\PIC_MPlap\7SEG\My_7seg.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _SegInit
  1339  02FC                     _SegInit:	
  1340                           
  1341                           ;My_7seg.c: 7: TRISD =0x00;
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _SegInit: [wreg+status,2]
  1345  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1346  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1347  02FE  0188               	clrf	8	;volatile
  1348                           
  1349                           ;My_7seg.c: 8: PORTD =0xff;
  1350  02FF  30FF               	movlw	255
  1351  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0302  0088               	movwf	8	;volatile
  1354                           
  1355                           ;My_7seg.c: 9: TRISA0 =0;
  1356  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0305  1005               	bcf	5,0	;volatile
  1359                           
  1360                           ;My_7seg.c: 10: TRISA1 =0;
  1361  0306  1085               	bcf	5,1	;volatile
  1362                           
  1363                           ;My_7seg.c: 11: TRISA2 =0;
  1364  0307  1105               	bcf	5,2	;volatile
  1365                           
  1366                           ;My_7seg.c: 13: RA0 =1;
  1367  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1369  030A  1405               	bsf	5,0	;volatile
  1370                           
  1371                           ;My_7seg.c: 14: RA1 =1;
  1372  030B  1485               	bsf	5,1	;volatile
  1373                           
  1374                           ;My_7seg.c: 15: RA2 =1;
  1375  030C  1505               	bsf	5,2	;volatile
  1376  030D  0008               	return
  1377  030E                     __end_of_SegInit:	
  1378                           
  1379                           	psect	text7
  1380  030E                     __ptext7:	
  1381 ;; *************** function _RBInit *****************
  1382 ;; Defined at:
  1383 ;;		line 73 in file "interruptRB.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          1       0       0       0       0
  1400 ;;      Totals:         1       0       0       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _RBInit
  1413  030E                     _RBInit:	
  1414                           
  1415                           ;interruptRB.c: 74: TRISB4 = 1;
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _RBInit: [wreg+status,2+status,0]
  1419  030E  1683               	bsf	3,5	;RP0=1, select bank1
  1420  030F  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0310  1606               	bsf	6,4	;volatile
  1422                           
  1423                           ;interruptRB.c: 75: TRISB5 = 1;
  1424  0311  1686               	bsf	6,5	;volatile
  1425                           
  1426                           ;interruptRB.c: 76: GIE = 1;
  1427  0312  178B               	bsf	11,7	;volatile
  1428                           
  1429                           ;interruptRB.c: 77: RBIE = 1;
  1430  0313  158B               	bsf	11,3	;volatile
  1431                           
  1432                           ;interruptRB.c: 78: OPTION_REG &= 0x7f;
  1433  0314  307F               	movlw	127
  1434  0315  00F5               	movwf	??_RBInit
  1435  0316  0875               	movf	??_RBInit,w
  1436  0317  0581               	andwf	1,f	;volatile
  1437                           
  1438                           ;interruptRB.c: 79: RBIF = 0;
  1439  0318  100B               	bcf	11,0	;volatile
  1440  0319  0008               	return
  1441  031A                     __end_of_RBInit:	
  1442                           
  1443                           	psect	text8
  1444  0291                     __ptext8:	
  1445 ;; *************** function _ext_RB *****************
  1446 ;; Defined at:
  1447 ;;		line 58 in file "interruptRB.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          5       0       0       0       0
  1464 ;;      Totals:         5       0       0       0       0
  1465 ;;Total ram usage:        5 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		Interrupt level 1
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _ext_RB
  1476  0291                     _ext_RB:	
  1477                           
  1478                           ;interruptRB.c: 59: if(RBIF){
  1479  0291  1C0B               	btfss	11,0	;volatile
  1480  0292  2AAC               	goto	i1l89
  1481                           
  1482                           ;interruptRB.c: 60: if(!RB4){
  1483  0293  1A06               	btfsc	6,4	;volatile
  1484  0294  2AA2               	goto	i1l83
  1485                           
  1486                           ;interruptRB.c: 61: i++;
  1487  0295  3001               	movlw	1
  1488  0296  00F0               	movwf	??_ext_RB
  1489  0297  0870               	movf	??_ext_RB,w
  1490  0298  07C2               	addwf	_i,f
  1491                           
  1492                           ;interruptRB.c: 62: if(i>100) i = 100;
  1493  0299  3065               	movlw	101
  1494  029A  0242               	subwf	_i,w
  1495  029B  1C03               	skipc
  1496  029C  2AAB               	goto	i1l918
  1497  029D  3064               	movlw	100
  1498  029E  00F0               	movwf	??_ext_RB
  1499  029F  0870               	movf	??_ext_RB,w
  1500  02A0  00C2               	movwf	_i
  1501                           
  1502                           ;interruptRB.c: 63: }
  1503  02A1  2AAB               	goto	i1l918
  1504  02A2                     i1l83:	
  1505                           
  1506                           ;interruptRB.c: 64: else if(!RB5){
  1507  02A2  1A86               	btfsc	6,5	;volatile
  1508  02A3  2AAB               	goto	i1l918
  1509                           
  1510                           ;interruptRB.c: 65: if(i<=0) i = 0;
  1511  02A4  0842               	movf	_i,w
  1512  02A5  1D03               	btfss	3,2
  1513  02A6  2AA9               	goto	i1l916
  1514  02A7  01C2               	clrf	_i
  1515  02A8  2AAB               	goto	i1l918
  1516  02A9                     i1l916:	
  1517                           
  1518                           ;interruptRB.c: 66: else i--;
  1519  02A9  3001               	movlw	1
  1520  02AA  02C2               	subwf	_i,f
  1521  02AB                     i1l918:	
  1522                           
  1523                           ;interruptRB.c: 67: }
  1524                           ;interruptRB.c: 68: RBIF = 0;
  1525  02AB  100B               	bcf	11,0	;volatile
  1526  02AC                     i1l89:	
  1527  02AC  0874               	movf	??_ext_RB+4,w
  1528  02AD  00FF               	movwf	127
  1529  02AE  0873               	movf	??_ext_RB+3,w
  1530  02AF  008A               	movwf	10
  1531  02B0  0872               	movf	??_ext_RB+2,w
  1532  02B1  0084               	movwf	4
  1533  02B2  0E71               	swapf	(??_ext_RB+1)^(0+-128),w
  1534  02B3  0083               	movwf	3
  1535  02B4  0EFE               	swapf	126,f
  1536  02B5  0E7E               	swapf	126,w
  1537  02B6  0009               	retfie
  1538  02B7                     __end_of_ext_RB:	
  1539  007E                     btemp	set	126	;btemp
  1540  007E                     wtemp0	set	126
  1541                           
  1542                           	psect	intentry
  1543  0004                     __pintentry:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _ext_RB: [wreg+status,2+status,0]
  1546                           
  1547  0004                     interrupt_function:	
  1548  007E                     saved_w	set	btemp
  1549  0004  00FE               	movwf	btemp
  1550  0005  0E03               	swapf	3,w
  1551  0006  00F1               	movwf	??_ext_RB+1
  1552  0007  0804               	movf	4,w
  1553  0008  00F2               	movwf	??_ext_RB+2
  1554  0009  080A               	movf	10,w
  1555  000A  00F3               	movwf	??_ext_RB+3
  1556  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1557  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1558  000D  087F               	movf	btemp+1,w
  1559  000E  00F4               	movwf	??_ext_RB+4
  1560  000F  120A  118A  2A91   	ljmp	_ext_RB


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     34      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SegNumber->___wmul
    ___lwdiv->___wmul

Critical Paths under _ext_RB in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SegNumber
    _SegNumber->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _ext_RB in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ext_RB in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ext_RB in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ext_RB in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3151
                                             32 BANK0      2     2      0
                             _RBInit
                            _SegInit
                          _SegNumber
 ---------------------------------------------------------------------------------
 (1) _SegNumber                                           20    18      2    3151
                                             12 BANK0     20    18      2
                             _SegLed
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1436
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     480
                                              4 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     575
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _SegLed                                               1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SegInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RBInit                                               1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ext_RB                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RBInit
   _SegInit
   _SegNumber
     _SegLed
     ___awdiv
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 _ext_RB (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jun 07 14:41:32 2017

                      _i 0042              __CFG_CP$OFF 0000                       l64 0252  
           ___awdiv@sign 0025      ___wmul@multiplicand 0022                      l176 02C3  
                    l740 0205                      l750 021E                      l742 020A  
                    l830 025D                      l752 0223                      l744 020F  
                    l760 0232                      l832 026B                      l754 0228  
                    l746 0214                      l738 0200                      l842 028C  
                    l922 02B9                      l756 022D                      l748 0219  
                    l942 01AF                      l838 0281                      l960 01D0  
                    l970 01F1                      l948 01BA                      l974 01F9  
                    l966 01E6                      l958 01C2                      _GIE 005F  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RB4 0034                      _RB5 0035                      u425 0260  
           __CFG_CPD$OFF 0000                      u605 01C5                      u445 026C  
                    u455 0278                      u625 01D1                      u465 0282  
                    u545 02C4                      u635 01DD                      u555 02CB  
                    u645 01E7                      u677 0173                      u687 0187  
                    u697 019B                      _num 0077                      fsr0 0004  
           __CFG_FOSC$HS 0000          SegNumber@number 002C             __CFG_LVP$OFF 0000  
                   l1010 02ED                     _RBIE 005B                     _RBIF 0058  
                   i1l83 02A2                     i1l89 02AC             __CFG_WRT$OFF 0000  
                   _main 02DA                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0012          __end_of_SegInit 030E                    ?_main 0070  
        __end_of___awdiv 01FE            __CFG_WDTE$OFF 0000          ___awdiv@divisor 0020  
                  _PCFG0 04F8                    _PCFG1 04F9                    _PCFG2 04FA  
                  _PCFG3 04FB          __end_of___lwdiv 0291                    i1l916 02A9  
                  i1l918 02AB          ___awdiv@counter 0024                    _PORTD 0008  
                  _TRISD 0088               SegNumber@a 003E               SegNumber@b 003A  
             SegNumber@c 003C               SegNumber@d 0038               SegNumber@e 0036  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 02FC                   ??_main 0040  
       ___awdiv@dividend 0022                   _RBInit 030E                   _TRISA0 0428  
                 _TRISA1 0429                   _TRISA2 042A                   _TRISB4 0434  
                 _TRISB5 0435                ??_SegInit 0075           __CFG_PWRTE$OFF 0000  
                 _SegLed 01FE       __size_of_SegNumber 0187                   ___wmul 02B7  
              ??___awdiv 0075                ??___lwdiv 0028                   _ext_RB 0291  
       ___awdiv@quotient 0026                   saved_w 007E  __end_of__initialization 0018  
         __pcstackCOMMON 0070        __end_of_SegNumber 01A3               __pbssBANK0 0042  
                ?_RBInit 0070                  ?_SegLed 0070               __pmaintext 02DA  
                ?___wmul 0020               __pintentry 0004                  ?_ext_RB 0070  
        __size_of_RBInit 000C                  _SegInit 02FC          __size_of_SegLed 0055  
                ___awdiv 01A3          __size_of___wmul 0023                  ___lwdiv 0253  
        __size_of_ext_RB 0026                  __ptext1 001C                  __ptext2 02B7  
                __ptext3 0253                  __ptext4 01A3                  __ptext5 01FE  
                __ptext6 02FC                  __ptext7 030E                  __ptext8 0291  
   end_of_initialization 0018           __end_of_RBInit 031A                SegLed@num 0075  
         __end_of_SegLed 0253           __end_of___wmul 02DA           __end_of_ext_RB 02B7  
    start_initialization 0015                _SegNumber 001C                 ??_RBInit 0075  
               ??_SegLed 0075                 ??___wmul 0075                 ??_ext_RB 0070  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
             ?_SegNumber 002C                 ?_SegInit 0070         ___lwdiv@dividend 0026  
               ?___awdiv 0020                 ?___lwdiv 0024         ___lwdiv@quotient 0029  
      interrupt_function 0004           ___wmul@product 0075        ___wmul@multiplier 0020  
            ??_SegNumber 002E         __size_of_SegInit 0012         __size_of___awdiv 005B  
       __size_of___lwdiv 003E          ___lwdiv@divisor 0024          ___lwdiv@counter 002B  
          __size_of_main 0022                 intlevel1 0000               _OPTION_REG 0081  
