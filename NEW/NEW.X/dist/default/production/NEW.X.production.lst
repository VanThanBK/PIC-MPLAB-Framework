

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 08 08:50:41 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.44
    30                           ; Generated 14/09/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141                           
   142                           	psect	strings
   143  0003                     __pstrings:	
   144  0003                     stringtab:	
   145  0003                     __stringtab:	
   146                           
   147                           ;	String table - string pointers are 1 byte each
   148  0003  1BFF               	btfsc	btemp+1,7
   149  0004  280D               	ljmp	stringcode
   150  0005  1383               	bcf	3,7
   151  0006  187F               	btfsc	btemp+1,0
   152  0007  1783               	bsf	3,7
   153  0008  0800               	movf	0,w
   154  0009  0A84               	incf	4,f
   155  000A  1903               	skipnz
   156  000B  0AFF               	incf	btemp+1,f
   157  000C  0008               	return
   158  000D                     stringcode:	
   159  000D                     stringdir:	
   160  000D  3000               	movlw	high stringdir
   161  000E  008A               	movwf	10
   162  000F  0804               	movf	4,w
   163  0010  0A84               	incf	4,f
   164  0011  0782               	addwf	2,f
   165  0012                     __stringbase:	
   166  0012  3400               	retlw	0
   167  0013                     __end_of__stringtab:	
   168  0013                     _dpowers:	
   169  0013  3401               	retlw	1
   170  0014  3400               	retlw	0
   171  0015  3400               	retlw	0
   172  0016  3400               	retlw	0
   173  0017  340A               	retlw	10
   174  0018  3400               	retlw	0
   175  0019  3400               	retlw	0
   176  001A  3400               	retlw	0
   177  001B  3464               	retlw	100
   178  001C  3400               	retlw	0
   179  001D  3400               	retlw	0
   180  001E  3400               	retlw	0
   181  001F  34E8               	retlw	232
   182  0020  3403               	retlw	3
   183  0021  3400               	retlw	0
   184  0022  3400               	retlw	0
   185  0023  3410               	retlw	16
   186  0024  3427               	retlw	39
   187  0025  3400               	retlw	0
   188  0026  3400               	retlw	0
   189  0027  34A0               	retlw	160
   190  0028  3486               	retlw	134
   191  0029  3401               	retlw	1
   192  002A  3400               	retlw	0
   193  002B  3440               	retlw	64
   194  002C  3442               	retlw	66
   195  002D  340F               	retlw	15
   196  002E  3400               	retlw	0
   197  002F  3480               	retlw	128
   198  0030  3496               	retlw	150
   199  0031  3498               	retlw	152
   200  0032  3400               	retlw	0
   201  0033  3400               	retlw	0
   202  0034  34E1               	retlw	225
   203  0035  34F5               	retlw	245
   204  0036  3405               	retlw	5
   205  0037  3400               	retlw	0
   206  0038  34CA               	retlw	202
   207  0039  349A               	retlw	154
   208  003A  343B               	retlw	59
   209  003B                     __end_of_dpowers:	
   210  0015                     _CCPR1L	set	21
   211  00BC                     _CCP1Y	set	188
   212  00BD                     _CCP1X	set	189
   213  0090                     _T2CKPS0	set	144
   214  0091                     _T2CKPS1	set	145
   215  0092                     _TMR2ON	set	146
   216  00B8                     _CCP1M0	set	184
   217  00B9                     _CCP1M1	set	185
   218  00BA                     _CCP1M2	set	186
   219  00BB                     _CCP1M3	set	187
   220  003A                     _RC2	set	58
   221  0039                     _RC1	set	57
   222  0043                     _RD3	set	67
   223  0047                     _RD7	set	71
   224  0046                     _RD6	set	70
   225  0045                     _RD5	set	69
   226  0044                     _RD4	set	68
   227  0042                     _RD2	set	66
   228  0041                     _RD1	set	65
   229  0092                     _PR2	set	146
   230  0439                     _TRISC1	set	1081
   231  043A                     _TRISC2	set	1082
   232  0447                     _TRISD7	set	1095
   233  0446                     _TRISD6	set	1094
   234  0445                     _TRISD5	set	1093
   235  0444                     _TRISD4	set	1092
   236  0443                     _TRISD3	set	1091
   237  0442                     _TRISD2	set	1090
   238  0441                     _TRISD1	set	1089
   239  003B                     STR_4:	
   240  003B  3425               	retlw	37	;'%'
   241  003C  346C               	retlw	108	;'l'
   242  003D  3475               	retlw	117	;'u'
   243  003E  342E               	retlw	46	;'.'
   244  003F  3425               	retlw	37	;'%'
   245  0040  3436               	retlw	54	;'6'
   246  0041  342E               	retlw	46	;'.'
   247  0042  3436               	retlw	54	;'6'
   248  0043  346C               	retlw	108	;'l'
   249  0044  3475               	retlw	117	;'u'
   250  0045  3400               	retlw	0
   251  0046                     STR_2:	
   252  0046  344E               	retlw	78	;'N'
   253  0047  3447               	retlw	71	;'G'
   254  0048  342E               	retlw	46	;'.'
   255  0049  3456               	retlw	86	;'V'
   256  004A  342E               	retlw	46	;'.'
   257  004B  3454               	retlw	84	;'T'
   258  004C  3448               	retlw	72	;'H'
   259  004D  3441               	retlw	65	;'A'
   260  004E  344E               	retlw	78	;'N'
   261  004F  3400               	retlw	0
   262  0050                     STR_3:	
   263  0050  3454               	retlw	84	;'T'
   264  0051  3452               	retlw	82	;'R'
   265  0052  342E               	retlw	46	;'.'
   266  0053  3458               	retlw	88	;'X'
   267  0054  342E               	retlw	46	;'.'
   268  0055  3448               	retlw	72	;'H'
   269  0056  3441               	retlw	65	;'A'
   270  0057  3449               	retlw	73	;'I'
   271  0058  3400               	retlw	0
   272  0059                     STR_1:	
   273  0059  3425               	retlw	37	;'%'
   274  005A  3464               	retlw	100	;'d'
   275  005B  3400               	retlw	0
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  07F5                     start_initialization:	
   281  07F5                     __initialization:	
   282                           
   283                           ; Clear objects allocated to BANK0
   284  07F5  1383               	bcf	3,7	;select IRP bank0
   285  07F6  304B               	movlw	low __pbssBANK0
   286  07F7  0084               	movwf	4
   287  07F8  305D               	movlw	low (__pbssBANK0+18)
   288  07F9  120A  118A  23EB   	fcall	clear_ram0
   289  07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  07FC                     __end_of__initialization:	
   293  07FC  0183               	clrf	3
   294  07FD  120A  118A  2CCD   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  004B                     __pbssBANK0:	
   298  004B                     _i:	
   299  004B                     	ds	1
   300  004C                     ftoa@buf:	
   301  004C                     	ds	17
   302                           
   303                           	psect	clrtext
   304  03EB                     clear_ram0:	
   305                           ;	Called with FSR containing the base address, and
   306                           ;	W with the last address+1
   307                           
   308  03EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   309  03EC                     clrloop0:	
   310  03EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   311  03ED  0A84               	incf	4,f	;increment pointer
   312  03EE  0604               	xorwf	4,w	;XOR with final address
   313  03EF  1903               	btfsc	3,2	;have we reached the end yet?
   314  03F0  3400               	retlw	0	;all done for this memory range, return
   315  03F1  0604               	xorwf	4,w	;XOR again to restore value
   316  03F2  2BEC               	goto	clrloop0	;do the next byte
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:	
   320  0070                     ?_LCDMode4Bit:	
   321  0070                     ?_LCDWriteCommand:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_LCDLatchData:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_LCDLatchData:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_LCDInit:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_LCDWriteByte:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_LCDWriteData:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_LCDClear:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_LCDPutChar:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?___ftpack:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ___ftpack@arg:	
   352                           ; 3 bytes @ 0x0
   353                           
   354                           
   355                           ; 3 bytes @ 0x0
   356  0070                     	ds	2
   357  0072                     ??_LCDMode4Bit:	
   358  0072                     ??_LCDWriteByte:	
   359                           ; 1 bytes @ 0x2
   360                           
   361                           
   362                           ; 1 bytes @ 0x2
   363  0072                     	ds	1
   364  0073                     LCDWriteByte@ch:	
   365  0073                     ___ftpack@exp:	
   366                           ; 1 bytes @ 0x3
   367                           
   368                           
   369                           ; 1 bytes @ 0x3
   370  0073                     	ds	1
   371  0074                     ??_LCDWriteCommand:	
   372  0074                     ??_LCDWriteData:	
   373                           ; 1 bytes @ 0x4
   374                           
   375  0074                     LCDWriteData@dt:	
   376                           ; 1 bytes @ 0x4
   377                           
   378  0074                     LCDWriteCommand@dt:	
   379                           ; 1 bytes @ 0x4
   380                           
   381  0074                     ___ftpack@sign:	
   382                           ; 1 bytes @ 0x4
   383                           
   384                           
   385                           ; 1 bytes @ 0x4
   386  0074                     	ds	1
   387  0075                     ??___ftpack:	
   388  0075                     ??_LCDInit:	
   389                           ; 1 bytes @ 0x5
   390                           
   391  0075                     ??_LCDClear:	
   392                           ; 1 bytes @ 0x5
   393                           
   394  0075                     ?_LCDMove:	
   395                           ; 1 bytes @ 0x5
   396                           
   397  0075                     ??_LCDPutChar:	
   398                           ; 1 bytes @ 0x5
   399                           
   400  0075                     LCDMove@x:	
   401                           ; 1 bytes @ 0x5
   402                           
   403  0075                     LCDPutChar@ch:	
   404                           ; 1 bytes @ 0x5
   405                           
   406                           
   407                           ; 1 bytes @ 0x5
   408  0075                     	ds	1
   409  0076                     ??_LCDMove:	
   410                           
   411                           ; 1 bytes @ 0x6
   412  0076                     	ds	2
   413  0078                     ?___awtoft:	
   414  0078                     ?___lbtoft:	
   415                           ; 3 bytes @ 0x8
   416                           
   417  0078                     ___awtoft@c:	
   418                           ; 3 bytes @ 0x8
   419                           
   420                           
   421                           ; 2 bytes @ 0x8
   422  0078                     	ds	2
   423  007A                     LCDMove@Ad:	
   424                           
   425                           ; 2 bytes @ 0xA
   426  007A                     	ds	1
   427  007B                     ??___awtoft:	
   428  007B                     ___lbtoft@c:	
   429                           ; 1 bytes @ 0xB
   430                           
   431                           
   432                           ; 1 bytes @ 0xB
   433  007B                     	ds	1
   434  007C                     LCDMove@y:	
   435                           
   436                           ; 1 bytes @ 0xC
   437  007C                     	ds	1
   438  007D                     ??_LCDPrint:	
   439  007D                     ___awtoft@sign:	
   440                           ; 1 bytes @ 0xD
   441                           
   442                           
   443                           ; 1 bytes @ 0xD
   444  007D                     	ds	1
   445                           
   446                           	psect	cstackBANK0
   447  0020                     __pcstackBANK0:	
   448  0020                     ?_LCDPrint:	
   449  0020                     ??___lbtoft:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0020                     LCDPrint@x:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457  0020                     	ds	1
   458  0021                     LCDPrint@str:	
   459                           
   460                           ; 2 bytes @ 0x1
   461  0021                     	ds	2
   462  0023                     LCDPrint@y:	
   463                           
   464                           ; 1 bytes @ 0x3
   465  0023                     	ds	1
   466  0024                     ?___ftmul:	
   467  0024                     ___ftmul@f1:	
   468                           ; 3 bytes @ 0x4
   469                           
   470                           
   471                           ; 3 bytes @ 0x4
   472  0024                     	ds	3
   473  0027                     ___ftmul@f2:	
   474                           
   475                           ; 3 bytes @ 0x7
   476  0027                     	ds	3
   477  002A                     ??___ftmul:	
   478                           
   479                           ; 1 bytes @ 0xA
   480  002A                     	ds	4
   481  002E                     ___ftmul@exp:	
   482                           
   483                           ; 1 bytes @ 0xE
   484  002E                     	ds	1
   485  002F                     ___ftmul@f3_as_product:	
   486                           
   487                           ; 3 bytes @ 0xF
   488  002F                     	ds	3
   489  0032                     ___ftmul@cntr:	
   490                           
   491                           ; 1 bytes @ 0x12
   492  0032                     	ds	1
   493  0033                     ___ftmul@sign:	
   494                           
   495                           ; 1 bytes @ 0x13
   496  0033                     	ds	1
   497  0034                     ?___fttol:	
   498  0034                     ___fttol@f1:	
   499                           ; 4 bytes @ 0x14
   500                           
   501                           
   502                           ; 3 bytes @ 0x14
   503  0034                     	ds	4
   504  0038                     ??___fttol:	
   505                           
   506                           ; 1 bytes @ 0x18
   507  0038                     	ds	4
   508  003C                     ___fttol@sign1:	
   509                           
   510                           ; 1 bytes @ 0x1C
   511  003C                     	ds	1
   512  003D                     ___fttol@lval:	
   513                           
   514                           ; 4 bytes @ 0x1D
   515  003D                     	ds	4
   516  0041                     ___fttol@exp1:	
   517                           
   518                           ; 1 bytes @ 0x21
   519  0041                     	ds	1
   520  0042                     ?_PWMControl:	
   521  0042                     PWMControl@sig:	
   522                           ; 1 bytes @ 0x22
   523                           
   524                           
   525                           ; 1 bytes @ 0x22
   526  0042                     	ds	1
   527  0043                     ??_PWMControl:	
   528                           
   529                           ; 1 bytes @ 0x23
   530  0043                     	ds	2
   531  0045                     PWMControl@percent:	
   532                           
   533                           ; 1 bytes @ 0x25
   534  0045                     	ds	1
   535  0046                     PWMControl@PWM_Reg:	
   536                           
   537                           ; 2 bytes @ 0x26
   538  0046                     	ds	2
   539  0048                     ??_main:	
   540                           
   541                           ; 1 bytes @ 0x28
   542  0048                     	ds	3
   543                           
   544                           	psect	maintext
   545  04CD                     __pmaintext:	
   546 ;;
   547 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   548 ;;
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 33 in file "NEW.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : B00/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       3       0       0       0
   568 ;;      Totals:         0       3       0       0       0
   569 ;;Total ram usage:        3 bytes
   570 ;; Hardware stack levels required when called:    5
   571 ;; This function calls:
   572 ;;		_LCDClear
   573 ;;		_LCDInit
   574 ;;		_LCDPrint
   575 ;;		_PWMControl
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _main
   583  04CD                     _main:	
   584                           
   585                           ;NEW.c: 35: LCDInit();
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   589  04CD  120A  118A  243B  120A  118A  	fcall	_LCDInit
   590                           
   591                           ;NEW.c: 36: LCDClear();
   592  04D2  120A  118A  23E0  120A  118A  	fcall	_LCDClear
   593                           
   594                           ;NEW.c: 41: TRISC2 = 0;
   595  04D7  1683               	bsf	3,5	;RP0=1, select bank1
   596  04D8  1303               	bcf	3,6	;RP1=0, select bank1
   597  04D9  1107               	bcf	7,2	;volatile
   598                           
   599                           ;NEW.c: 42: TRISC1 = 0;
   600  04DA  1087               	bcf	7,1	;volatile
   601                           
   602                           ;NEW.c: 43: LCDPrint(1,1,"NG.V.THAN");
   603  04DB  1283               	bcf	3,5	;RP0=0, select bank0
   604  04DC  1303               	bcf	3,6	;RP1=0, select bank0
   605  04DD  01A0               	clrf	LCDPrint@x
   606  04DE  0AA0               	incf	LCDPrint@x,f
   607  04DF  3034               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   608  04E0  00A1               	movwf	LCDPrint@str
   609  04E1  3080               	movlw	128
   610  04E2  00A2               	movwf	LCDPrint@str+1
   611  04E3  3001               	movlw	1
   612  04E4  120A  118A  249B  120A  118A  	fcall	_LCDPrint
   613                           
   614                           ;NEW.c: 44: LCDPrint(2,1,"TR.X.HAI");
   615  04E9  1283               	bcf	3,5	;RP0=0, select bank0
   616  04EA  1303               	bcf	3,6	;RP1=0, select bank0
   617  04EB  01A0               	clrf	LCDPrint@x
   618  04EC  0AA0               	incf	LCDPrint@x,f
   619  04ED  303E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   620  04EE  00A1               	movwf	LCDPrint@str
   621  04EF  3080               	movlw	128
   622  04F0  00A2               	movwf	LCDPrint@str+1
   623  04F1  3002               	movlw	2
   624  04F2  120A  118A  249B  120A  118A  	fcall	_LCDPrint
   625  04F7                     l1183:	
   626                           ;NEW.c: 56: while(1){
   627                           
   628                           
   629                           ;NEW.c: 61: RC1 = 1;
   630  04F7  1283               	bcf	3,5	;RP0=0, select bank0
   631  04F8  1303               	bcf	3,6	;RP1=0, select bank0
   632  04F9  1487               	bsf	7,1	;volatile
   633                           
   634                           ;NEW.c: 62: PWMControl(20,1);
   635  04FA  01C2               	clrf	PWMControl@sig
   636  04FB  0AC2               	incf	PWMControl@sig,f
   637  04FC  3014               	movlw	20
   638  04FD  120A  118A  2595  120A  118A  	fcall	_PWMControl
   639                           
   640                           ;NEW.c: 63: _delay((unsigned long)((2000)*(4000000/4000.0)));
   641  0502  300B               	movlw	11
   642  0503  1283               	bcf	3,5	;RP0=0, select bank0
   643  0504  1303               	bcf	3,6	;RP1=0, select bank0
   644  0505  00CA               	movwf	??_main+2
   645  0506  3026               	movlw	38
   646  0507  00C9               	movwf	??_main+1
   647  0508  305D               	movlw	93
   648  0509  00C8               	movwf	??_main
   649  050A                     u1437:	
   650  050A  0BC8               	decfsz	??_main,f
   651  050B  2D0A               	goto	u1437
   652  050C  0BC9               	decfsz	??_main+1,f
   653  050D  2D0A               	goto	u1437
   654  050E  0BCA               	decfsz	??_main+2,f
   655  050F  2D0A               	goto	u1437
   656                           
   657                           ;NEW.c: 64: PWMControl(90,1);
   658  0510  1283               	bcf	3,5	;RP0=0, select bank0
   659  0511  1303               	bcf	3,6	;RP1=0, select bank0
   660  0512  01C2               	clrf	PWMControl@sig
   661  0513  0AC2               	incf	PWMControl@sig,f
   662  0514  305A               	movlw	90
   663  0515  120A  118A  2595  120A  118A  	fcall	_PWMControl
   664                           
   665                           ;NEW.c: 65: _delay((unsigned long)((2000)*(4000000/4000.0)));
   666  051A  300B               	movlw	11
   667  051B  1283               	bcf	3,5	;RP0=0, select bank0
   668  051C  1303               	bcf	3,6	;RP1=0, select bank0
   669  051D  00CA               	movwf	??_main+2
   670  051E  3026               	movlw	38
   671  051F  00C9               	movwf	??_main+1
   672  0520  305D               	movlw	93
   673  0521  00C8               	movwf	??_main
   674  0522                     u1447:	
   675  0522  0BC8               	decfsz	??_main,f
   676  0523  2D22               	goto	u1447
   677  0524  0BC9               	decfsz	??_main+1,f
   678  0525  2D22               	goto	u1447
   679  0526  0BCA               	decfsz	??_main+2,f
   680  0527  2D22               	goto	u1447
   681  0528  2CF7               	goto	l1183
   682  0529                     __end_of_main:	
   683                           ;NEW.c: 67: }
   684                           ;NEW.c: 68: return;
   685                           
   686                           
   687                           	psect	text1
   688  0595                     __ptext1:	
   689 ;; *************** function _PWMControl *****************
   690 ;; Defined at:
   691 ;;		line 101 in file "NEW.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  percent         1    wreg     unsigned char 
   694 ;;  sig             1   34[BANK0 ] unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  percent         1   37[BANK0 ] unsigned char 
   697 ;;  PWM_Reg         2   38[BANK0 ] unsigned int 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       1       0       0       0
   708 ;;      Locals:         0       3       0       0       0
   709 ;;      Temps:          0       2       0       0       0
   710 ;;      Totals:         0       6       0       0       0
   711 ;;Total ram usage:        6 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    2
   714 ;; This function calls:
   715 ;;		___awtoft
   716 ;;		___ftmul
   717 ;;		___fttol
   718 ;;		___lbtoft
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _PWMControl
   726  0595                     _PWMControl:	
   727                           
   728                           ;incstack = 0
   729                           ; Regs used in _PWMControl: [wreg+status,2+status,0+pclath+cstack]
   730                           ;PWMControl@percent stored from wreg
   731  0595  1283               	bcf	3,5	;RP0=0, select bank0
   732  0596  1303               	bcf	3,6	;RP1=0, select bank0
   733  0597  00C5               	movwf	PWMControl@percent
   734                           
   735                           ;NEW.c: 102: unsigned int PWM_Reg;
   736                           ;NEW.c: 103: if(sig==0) PWM_Reg = (100-percent)*10.23;
   737  0598  0842               	movf	PWMControl@sig,w
   738  0599  1D03               	btfss	3,2
   739  059A  2DB8               	goto	l1129
   740  059B  0845               	movf	PWMControl@percent,w
   741  059C  00C3               	movwf	??_PWMControl
   742  059D  01C4               	clrf	??_PWMControl+1
   743  059E  09C3               	comf	??_PWMControl,f
   744  059F  09C4               	comf	??_PWMControl+1,f
   745  05A0  0AC3               	incf	??_PWMControl,f
   746  05A1  1903               	skipnz
   747  05A2  0AC4               	incf	??_PWMControl+1,f
   748  05A3  0843               	movf	??_PWMControl,w
   749  05A4  3E64               	addlw	100
   750  05A5  00F8               	movwf	___awtoft@c
   751  05A6  0844               	movf	??_PWMControl+1,w
   752  05A7  1803               	skipnc
   753  05A8  3E01               	addlw	1
   754  05A9  3E00               	addlw	0
   755  05AA  00F9               	movwf	___awtoft@c+1
   756  05AB  120A  118A  247A  120A  118A  	fcall	___awtoft
   757  05B0  0878               	movf	?___awtoft,w
   758  05B1  1283               	bcf	3,5	;RP0=0, select bank0
   759  05B2  1303               	bcf	3,6	;RP1=0, select bank0
   760  05B3  00A7               	movwf	___ftmul@f2
   761  05B4  0879               	movf	?___awtoft+1,w
   762  05B5  00A8               	movwf	___ftmul@f2+1
   763  05B6  087A               	movf	?___awtoft+2,w
   764  05B7  2DC5               	goto	L2
   765  05B8                     l1129:	
   766                           
   767                           ;NEW.c: 104: else PWM_Reg = percent*10.23;
   768  05B8  0845               	movf	PWMControl@percent,w
   769  05B9  120A  118A  241F  120A  118A  	fcall	___lbtoft
   770  05BE  0878               	movf	?___lbtoft,w
   771  05BF  1283               	bcf	3,5	;RP0=0, select bank0
   772  05C0  1303               	bcf	3,6	;RP1=0, select bank0
   773  05C1  00A7               	movwf	___ftmul@f2
   774  05C2  0879               	movf	?___lbtoft+1,w
   775  05C3  00A8               	movwf	___ftmul@f2+1
   776  05C4  087A               	movf	?___lbtoft+2,w
   777  05C5                     L2:	
   778  05C5  00A9               	movwf	___ftmul@f2+2
   779  05C6  30AE               	movlw	174
   780  05C7  00A4               	movwf	___ftmul@f1
   781  05C8  3023               	movlw	35
   782  05C9  00A5               	movwf	___ftmul@f1+1
   783  05CA  3041               	movlw	65
   784  05CB  00A6               	movwf	___ftmul@f1+2
   785  05CC  120A  118A  2722  120A  118A  	fcall	___ftmul
   786  05D1  1283               	bcf	3,5	;RP0=0, select bank0
   787  05D2  1303               	bcf	3,6	;RP1=0, select bank0
   788  05D3  0824               	movf	?___ftmul,w
   789  05D4  00B4               	movwf	___fttol@f1
   790  05D5  0825               	movf	?___ftmul+1,w
   791  05D6  00B5               	movwf	___fttol@f1+1
   792  05D7  0826               	movf	?___ftmul+2,w
   793  05D8  00B6               	movwf	___fttol@f1+2
   794  05D9  120A  118A  2694  120A  118A  	fcall	___fttol
   795  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   796  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   797  05E0  0835               	movf	?___fttol+1,w
   798  05E1  00C7               	movwf	PWMControl@PWM_Reg+1
   799  05E2  0834               	movf	?___fttol,w
   800  05E3  00C6               	movwf	PWMControl@PWM_Reg
   801                           
   802                           ;NEW.c: 105: CCPR1L = (PWM_Reg>>2);
   803  05E4  0847               	movf	PWMControl@PWM_Reg+1,w
   804  05E5  00C4               	movwf	??_PWMControl+1
   805  05E6  0846               	movf	PWMControl@PWM_Reg,w
   806  05E7  00C3               	movwf	??_PWMControl
   807  05E8  1003               	clrc
   808  05E9  0CC4               	rrf	??_PWMControl+1,f
   809  05EA  0CC3               	rrf	??_PWMControl,f
   810  05EB  1003               	clrc
   811  05EC  0CC4               	rrf	??_PWMControl+1,f
   812  05ED  0CC3               	rrf	??_PWMControl,f
   813  05EE  0843               	movf	??_PWMControl,w
   814  05EF  0095               	movwf	21	;volatile
   815                           
   816                           ;NEW.c: 106: CCP1X = (PWM_Reg>>1)&0x01;
   817  05F0  0847               	movf	PWMControl@PWM_Reg+1,w
   818  05F1  00C4               	movwf	??_PWMControl+1
   819  05F2  0846               	movf	PWMControl@PWM_Reg,w
   820  05F3  00C3               	movwf	??_PWMControl
   821  05F4  1003               	clrc
   822  05F5  0CC4               	rrf	??_PWMControl+1,f
   823  05F6  0CC3               	rrf	??_PWMControl,f
   824  05F7  1C43               	btfss	??_PWMControl,0
   825  05F8  2DFD               	goto	u1350
   826  05F9  1283               	bcf	3,5	;RP0=0, select bank0
   827  05FA  1303               	bcf	3,6	;RP1=0, select bank0
   828  05FB  1697               	bsf	23,5	;volatile
   829  05FC  2E00               	goto	l1135
   830  05FD                     u1350:	
   831  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   832  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   833  05FF  1297               	bcf	23,5	;volatile
   834  0600                     l1135:	
   835                           
   836                           ;NEW.c: 107: CCP1Y = PWM_Reg&0x01;
   837  0600  1C46               	btfss	PWMControl@PWM_Reg,0
   838  0601  2E06               	goto	u1370
   839  0602  1283               	bcf	3,5	;RP0=0, select bank0
   840  0603  1303               	bcf	3,6	;RP1=0, select bank0
   841  0604  1617               	bsf	23,4	;volatile
   842  0605  0008               	return
   843  0606                     u1370:	
   844  0606  1283               	bcf	3,5	;RP0=0, select bank0
   845  0607  1303               	bcf	3,6	;RP1=0, select bank0
   846  0608  1217               	bcf	23,4	;volatile
   847  0609  0008               	return
   848  060A                     __end_of_PWMControl:	
   849                           
   850                           	psect	text2
   851  041F                     __ptext2:	
   852 ;; *************** function ___lbtoft *****************
   853 ;; Defined at:
   854 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lbtoft.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  c               1    wreg     unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  c               1   11[COMMON] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  3    8[COMMON] float 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         3       0       0       0       0
   869 ;;      Locals:         1       0       0       0       0
   870 ;;      Temps:          0       4       0       0       0
   871 ;;      Totals:         4       4       0       0       0
   872 ;;Total ram usage:        8 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		___ftpack
   877 ;; This function is called by:
   878 ;;		_PWMControl
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function ___lbtoft
   884  041F                     ___lbtoft:	
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
   888                           ;___lbtoft@c stored from wreg
   889  041F  00FB               	movwf	___lbtoft@c
   890  0420  087B               	movf	___lbtoft@c,w
   891  0421  1283               	bcf	3,5	;RP0=0, select bank0
   892  0422  1303               	bcf	3,6	;RP1=0, select bank0
   893  0423  00A0               	movwf	??___lbtoft
   894  0424  01A1               	clrf	??___lbtoft+1
   895  0425  01A2               	clrf	??___lbtoft+2
   896  0426  0820               	movf	??___lbtoft,w
   897  0427  00F0               	movwf	___ftpack@arg
   898  0428  0821               	movf	??___lbtoft+1,w
   899  0429  00F1               	movwf	___ftpack@arg+1
   900  042A  0822               	movf	??___lbtoft+2,w
   901  042B  00F2               	movwf	___ftpack@arg+2
   902  042C  308E               	movlw	142
   903  042D  00A3               	movwf	??___lbtoft+3
   904  042E  0823               	movf	??___lbtoft+3,w
   905  042F  00F3               	movwf	___ftpack@exp
   906  0430  01F4               	clrf	___ftpack@sign
   907  0431  120A  118A  2529   	fcall	___ftpack
   908  0434  0870               	movf	?___ftpack,w
   909  0435  00F8               	movwf	?___lbtoft
   910  0436  0871               	movf	?___ftpack+1,w
   911  0437  00F9               	movwf	?___lbtoft+1
   912  0438  0872               	movf	?___ftpack+2,w
   913  0439  00FA               	movwf	?___lbtoft+2
   914  043A  0008               	return
   915  043B                     __end_of___lbtoft:	
   916                           
   917                           	psect	text3
   918  0694                     __ptext3:	
   919 ;; *************** function ___fttol *****************
   920 ;; Defined at:
   921 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  f1              3   20[BANK0 ] float 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  lval            4   29[BANK0 ] unsigned long 
   926 ;;  exp1            1   33[BANK0 ] unsigned char 
   927 ;;  sign1           1   28[BANK0 ] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  4   20[BANK0 ] long 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       4       0       0       0
   938 ;;      Locals:         0       6       0       0       0
   939 ;;      Temps:          0       4       0       0       0
   940 ;;      Totals:         0      14       0       0       0
   941 ;;Total ram usage:       14 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_PWMControl
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function ___fttol
   952  0694                     ___fttol:	
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   956  0694  1283               	bcf	3,5	;RP0=0, select bank0
   957  0695  1303               	bcf	3,6	;RP1=0, select bank0
   958  0696  0834               	movf	___fttol@f1,w
   959  0697  00B8               	movwf	??___fttol
   960  0698  0835               	movf	___fttol@f1+1,w
   961  0699  00B9               	movwf	??___fttol+1
   962  069A  0836               	movf	___fttol@f1+2,w
   963  069B  00BA               	movwf	??___fttol+2
   964  069C  1003               	clrc
   965  069D  0D39               	rlf	??___fttol+1,w
   966  069E  0D3A               	rlf	??___fttol+2,w
   967  069F  00BB               	movwf	??___fttol+3
   968  06A0  083B               	movf	??___fttol+3,w
   969  06A1  00C1               	movwf	___fttol@exp1
   970  06A2  0841               	movf	___fttol@exp1,w
   971  06A3  1D03               	btfss	3,2
   972  06A4  2EAE               	goto	l1071
   973  06A5  3000               	movlw	0
   974  06A6  00B7               	movwf	?___fttol+3
   975  06A7  3000               	movlw	0
   976  06A8  00B6               	movwf	?___fttol+2
   977  06A9  3000               	movlw	0
   978  06AA  00B5               	movwf	?___fttol+1
   979  06AB  3000               	movlw	0
   980  06AC  00B4               	movwf	?___fttol
   981  06AD  0008               	return
   982  06AE                     l1071:	
   983  06AE  0834               	movf	___fttol@f1,w
   984  06AF  00B8               	movwf	??___fttol
   985  06B0  0835               	movf	___fttol@f1+1,w
   986  06B1  00B9               	movwf	??___fttol+1
   987  06B2  0836               	movf	___fttol@f1+2,w
   988  06B3  00BA               	movwf	??___fttol+2
   989  06B4  3017               	movlw	23
   990  06B5                     u1245:	
   991  06B5  1003               	clrc
   992  06B6  0CBA               	rrf	??___fttol+2,f
   993  06B7  0CB9               	rrf	??___fttol+1,f
   994  06B8  0CB8               	rrf	??___fttol,f
   995  06B9  3EFF               	addlw	-1
   996  06BA  1D03               	skipz
   997  06BB  2EB5               	goto	u1245
   998  06BC  0838               	movf	??___fttol,w
   999  06BD  00BB               	movwf	??___fttol+3
  1000  06BE  083B               	movf	??___fttol+3,w
  1001  06BF  00BC               	movwf	___fttol@sign1
  1002  06C0  17B5               	bsf	___fttol@f1+1,7
  1003  06C1  30FF               	movlw	255
  1004  06C2  05B4               	andwf	___fttol@f1,f
  1005  06C3  30FF               	movlw	255
  1006  06C4  05B5               	andwf	___fttol@f1+1,f
  1007  06C5  3000               	movlw	0
  1008  06C6  05B6               	andwf	___fttol@f1+2,f
  1009  06C7  0834               	movf	___fttol@f1,w
  1010  06C8  00BD               	movwf	___fttol@lval
  1011  06C9  0835               	movf	___fttol@f1+1,w
  1012  06CA  00BE               	movwf	___fttol@lval+1
  1013  06CB  0836               	movf	___fttol@f1+2,w
  1014  06CC  00BF               	movwf	___fttol@lval+2
  1015  06CD  01C0               	clrf	___fttol@lval+3
  1016  06CE  308E               	movlw	142
  1017  06CF  02C1               	subwf	___fttol@exp1,f
  1018  06D0  1FC1               	btfss	___fttol@exp1,7
  1019  06D1  2EF0               	goto	l1091
  1020  06D2  0841               	movf	___fttol@exp1,w
  1021  06D3  3A80               	xorlw	128
  1022  06D4  3E8F               	addlw	143
  1023  06D5  1803               	skipnc
  1024  06D6  2EE0               	goto	l1089
  1025  06D7  3000               	movlw	0
  1026  06D8  00B7               	movwf	?___fttol+3
  1027  06D9  3000               	movlw	0
  1028  06DA  00B6               	movwf	?___fttol+2
  1029  06DB  3000               	movlw	0
  1030  06DC  00B5               	movwf	?___fttol+1
  1031  06DD  3000               	movlw	0
  1032  06DE  00B4               	movwf	?___fttol
  1033  06DF  0008               	return
  1034  06E0                     l1089:	
  1035  06E0  3001               	movlw	1
  1036  06E1                     u1275:	
  1037  06E1  1003               	clrc
  1038  06E2  0CC0               	rrf	___fttol@lval+3,f
  1039  06E3  0CBF               	rrf	___fttol@lval+2,f
  1040  06E4  0CBE               	rrf	___fttol@lval+1,f
  1041  06E5  0CBD               	rrf	___fttol@lval,f
  1042  06E6  3EFF               	addlw	-1
  1043  06E7  1D03               	skipz
  1044  06E8  2EE1               	goto	u1275
  1045  06E9  3001               	movlw	1
  1046  06EA  00B8               	movwf	??___fttol
  1047  06EB  0838               	movf	??___fttol,w
  1048  06EC  07C1               	addwf	___fttol@exp1,f
  1049  06ED  1903               	btfsc	3,2
  1050  06EE  2F0B               	goto	l1099
  1051  06EF  2EE0               	goto	l1089
  1052  06F0                     l1091:	
  1053  06F0  3018               	movlw	24
  1054  06F1  0241               	subwf	___fttol@exp1,w
  1055  06F2  1C03               	skipc
  1056  06F3  2F08               	goto	l544
  1057  06F4  3000               	movlw	0
  1058  06F5  00B7               	movwf	?___fttol+3
  1059  06F6  3000               	movlw	0
  1060  06F7  00B6               	movwf	?___fttol+2
  1061  06F8  3000               	movlw	0
  1062  06F9  00B5               	movwf	?___fttol+1
  1063  06FA  3000               	movlw	0
  1064  06FB  00B4               	movwf	?___fttol
  1065  06FC  0008               	return
  1066  06FD                     l1097:	
  1067  06FD  3001               	movlw	1
  1068  06FE  00B8               	movwf	??___fttol
  1069  06FF                     u1305:	
  1070  06FF  1003               	clrc
  1071  0700  0DBD               	rlf	___fttol@lval,f
  1072  0701  0DBE               	rlf	___fttol@lval+1,f
  1073  0702  0DBF               	rlf	___fttol@lval+2,f
  1074  0703  0DC0               	rlf	___fttol@lval+3,f
  1075  0704  0BB8               	decfsz	??___fttol,f
  1076  0705  2EFF               	goto	u1305
  1077  0706  3001               	movlw	1
  1078  0707  02C1               	subwf	___fttol@exp1,f
  1079  0708                     l544:	
  1080  0708  0841               	movf	___fttol@exp1,w
  1081  0709  1D03               	btfss	3,2
  1082  070A  2EFD               	goto	l1097
  1083  070B                     l1099:	
  1084  070B  083C               	movf	___fttol@sign1,w
  1085  070C  1903               	btfsc	3,2
  1086  070D  2F19               	goto	l1103
  1087  070E  09BD               	comf	___fttol@lval,f
  1088  070F  09BE               	comf	___fttol@lval+1,f
  1089  0710  09BF               	comf	___fttol@lval+2,f
  1090  0711  09C0               	comf	___fttol@lval+3,f
  1091  0712  0ABD               	incf	___fttol@lval,f
  1092  0713  1903               	skipnz
  1093  0714  0ABE               	incf	___fttol@lval+1,f
  1094  0715  1903               	skipnz
  1095  0716  0ABF               	incf	___fttol@lval+2,f
  1096  0717  1903               	skipnz
  1097  0718  0AC0               	incf	___fttol@lval+3,f
  1098  0719                     l1103:	
  1099  0719  0840               	movf	___fttol@lval+3,w
  1100  071A  00B7               	movwf	?___fttol+3
  1101  071B  083F               	movf	___fttol@lval+2,w
  1102  071C  00B6               	movwf	?___fttol+2
  1103  071D  083E               	movf	___fttol@lval+1,w
  1104  071E  00B5               	movwf	?___fttol+1
  1105  071F  083D               	movf	___fttol@lval,w
  1106  0720  00B4               	movwf	?___fttol
  1107  0721  0008               	return
  1108  0722                     __end_of___fttol:	
  1109                           
  1110                           	psect	text4
  1111  0722                     __ptext4:	
  1112 ;; *************** function ___ftmul *****************
  1113 ;; Defined at:
  1114 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  f1              3    4[BANK0 ] float 
  1117 ;;  f2              3    7[BANK0 ] float 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
  1120 ;;  sign            1   19[BANK0 ] unsigned char 
  1121 ;;  cntr            1   18[BANK0 ] unsigned char 
  1122 ;;  exp             1   14[BANK0 ] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  3    4[BANK0 ] float 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       6       0       0       0
  1133 ;;      Locals:         0       6       0       0       0
  1134 ;;      Temps:          0       4       0       0       0
  1135 ;;      Totals:         0      16       0       0       0
  1136 ;;Total ram usage:       16 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    1
  1139 ;; This function calls:
  1140 ;;		___ftpack
  1141 ;; This function is called by:
  1142 ;;		_PWMControl
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function ___ftmul
  1148  0722                     ___ftmul:	
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1152  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0724  0824               	movf	___ftmul@f1,w
  1155  0725  00AA               	movwf	??___ftmul
  1156  0726  0825               	movf	___ftmul@f1+1,w
  1157  0727  00AB               	movwf	??___ftmul+1
  1158  0728  0826               	movf	___ftmul@f1+2,w
  1159  0729  00AC               	movwf	??___ftmul+2
  1160  072A  1003               	clrc
  1161  072B  0D2B               	rlf	??___ftmul+1,w
  1162  072C  0D2C               	rlf	??___ftmul+2,w
  1163  072D  00AD               	movwf	??___ftmul+3
  1164  072E  082D               	movf	??___ftmul+3,w
  1165  072F  00AE               	movwf	___ftmul@exp
  1166  0730  082E               	movf	___ftmul@exp,w
  1167  0731  1D03               	btfss	3,2
  1168  0732  2F3A               	goto	l1021
  1169  0733  3000               	movlw	0
  1170  0734  00A4               	movwf	?___ftmul
  1171  0735  3000               	movlw	0
  1172  0736  00A5               	movwf	?___ftmul+1
  1173  0737  3000               	movlw	0
  1174  0738  00A6               	movwf	?___ftmul+2
  1175  0739  0008               	return
  1176  073A                     l1021:	
  1177  073A  0827               	movf	___ftmul@f2,w
  1178  073B  00AA               	movwf	??___ftmul
  1179  073C  0828               	movf	___ftmul@f2+1,w
  1180  073D  00AB               	movwf	??___ftmul+1
  1181  073E  0829               	movf	___ftmul@f2+2,w
  1182  073F  00AC               	movwf	??___ftmul+2
  1183  0740  1003               	clrc
  1184  0741  0D2B               	rlf	??___ftmul+1,w
  1185  0742  0D2C               	rlf	??___ftmul+2,w
  1186  0743  00AD               	movwf	??___ftmul+3
  1187  0744  082D               	movf	??___ftmul+3,w
  1188  0745  00B3               	movwf	___ftmul@sign
  1189  0746  0833               	movf	___ftmul@sign,w
  1190  0747  1D03               	btfss	3,2
  1191  0748  2F50               	goto	l1027
  1192  0749  3000               	movlw	0
  1193  074A  00A4               	movwf	?___ftmul
  1194  074B  3000               	movlw	0
  1195  074C  00A5               	movwf	?___ftmul+1
  1196  074D  3000               	movlw	0
  1197  074E  00A6               	movwf	?___ftmul+2
  1198  074F  0008               	return
  1199  0750                     l1027:	
  1200  0750  0833               	movf	___ftmul@sign,w
  1201  0751  3E7B               	addlw	123
  1202  0752  00AA               	movwf	??___ftmul
  1203  0753  082A               	movf	??___ftmul,w
  1204  0754  07AE               	addwf	___ftmul@exp,f
  1205  0755  0824               	movf	___ftmul@f1,w
  1206  0756  00AA               	movwf	??___ftmul
  1207  0757  0825               	movf	___ftmul@f1+1,w
  1208  0758  00AB               	movwf	??___ftmul+1
  1209  0759  0826               	movf	___ftmul@f1+2,w
  1210  075A  00AC               	movwf	??___ftmul+2
  1211  075B  3010               	movlw	16
  1212  075C                     u1115:	
  1213  075C  1003               	clrc
  1214  075D  0CAC               	rrf	??___ftmul+2,f
  1215  075E  0CAB               	rrf	??___ftmul+1,f
  1216  075F  0CAA               	rrf	??___ftmul,f
  1217  0760  3EFF               	addlw	-1
  1218  0761  1D03               	skipz
  1219  0762  2F5C               	goto	u1115
  1220  0763  082A               	movf	??___ftmul,w
  1221  0764  00AD               	movwf	??___ftmul+3
  1222  0765  082D               	movf	??___ftmul+3,w
  1223  0766  00B3               	movwf	___ftmul@sign
  1224  0767  0827               	movf	___ftmul@f2,w
  1225  0768  00AA               	movwf	??___ftmul
  1226  0769  0828               	movf	___ftmul@f2+1,w
  1227  076A  00AB               	movwf	??___ftmul+1
  1228  076B  0829               	movf	___ftmul@f2+2,w
  1229  076C  00AC               	movwf	??___ftmul+2
  1230  076D  3010               	movlw	16
  1231  076E                     u1125:	
  1232  076E  1003               	clrc
  1233  076F  0CAC               	rrf	??___ftmul+2,f
  1234  0770  0CAB               	rrf	??___ftmul+1,f
  1235  0771  0CAA               	rrf	??___ftmul,f
  1236  0772  3EFF               	addlw	-1
  1237  0773  1D03               	skipz
  1238  0774  2F6E               	goto	u1125
  1239  0775  082A               	movf	??___ftmul,w
  1240  0776  00AD               	movwf	??___ftmul+3
  1241  0777  082D               	movf	??___ftmul+3,w
  1242  0778  06B3               	xorwf	___ftmul@sign,f
  1243  0779  3080               	movlw	128
  1244  077A  00AA               	movwf	??___ftmul
  1245  077B  082A               	movf	??___ftmul,w
  1246  077C  05B3               	andwf	___ftmul@sign,f
  1247  077D  17A5               	bsf	___ftmul@f1+1,7
  1248  077E  17A8               	bsf	___ftmul@f2+1,7
  1249  077F  30FF               	movlw	255
  1250  0780  05A7               	andwf	___ftmul@f2,f
  1251  0781  30FF               	movlw	255
  1252  0782  05A8               	andwf	___ftmul@f2+1,f
  1253  0783  3000               	movlw	0
  1254  0784  05A9               	andwf	___ftmul@f2+2,f
  1255  0785  3000               	movlw	0
  1256  0786  00AF               	movwf	___ftmul@f3_as_product
  1257  0787  3000               	movlw	0
  1258  0788  00B0               	movwf	___ftmul@f3_as_product+1
  1259  0789  3000               	movlw	0
  1260  078A  00B1               	movwf	___ftmul@f3_as_product+2
  1261  078B  3007               	movlw	7
  1262  078C  00AA               	movwf	??___ftmul
  1263  078D  082A               	movf	??___ftmul,w
  1264  078E  00B2               	movwf	___ftmul@cntr
  1265  078F                     l1039:	
  1266  078F  1C24               	btfss	___ftmul@f1,0
  1267  0790  2F9F               	goto	l1043
  1268  0791  0827               	movf	___ftmul@f2,w
  1269  0792  07AF               	addwf	___ftmul@f3_as_product,f
  1270  0793  0828               	movf	___ftmul@f2+1,w
  1271  0794  1103               	clrz
  1272  0795  1803               	skipnc
  1273  0796  0A28               	incf	___ftmul@f2+1,w
  1274  0797  1D03               	btfss	3,2
  1275  0798  07B0               	addwf	___ftmul@f3_as_product+1,f
  1276  0799  0829               	movf	___ftmul@f2+2,w
  1277  079A  1103               	clrz
  1278  079B  1803               	skipnc
  1279  079C  0A29               	incf	___ftmul@f2+2,w
  1280  079D  1D03               	btfss	3,2
  1281  079E  07B1               	addwf	___ftmul@f3_as_product+2,f
  1282  079F                     l1043:	
  1283  079F  3001               	movlw	1
  1284  07A0                     u1155:	
  1285  07A0  1003               	clrc
  1286  07A1  0CA6               	rrf	___ftmul@f1+2,f
  1287  07A2  0CA5               	rrf	___ftmul@f1+1,f
  1288  07A3  0CA4               	rrf	___ftmul@f1,f
  1289  07A4  3EFF               	addlw	-1
  1290  07A5  1D03               	skipz
  1291  07A6  2FA0               	goto	u1155
  1292  07A7  3001               	movlw	1
  1293  07A8                     u1165:	
  1294  07A8  1003               	clrc
  1295  07A9  0DA7               	rlf	___ftmul@f2,f
  1296  07AA  0DA8               	rlf	___ftmul@f2+1,f
  1297  07AB  0DA9               	rlf	___ftmul@f2+2,f
  1298  07AC  3EFF               	addlw	-1
  1299  07AD  1D03               	skipz
  1300  07AE  2FA8               	goto	u1165
  1301  07AF  3001               	movlw	1
  1302  07B0  02B2               	subwf	___ftmul@cntr,f
  1303  07B1  1D03               	btfss	3,2
  1304  07B2  2F8F               	goto	l1039
  1305  07B3  3009               	movlw	9
  1306  07B4  00AA               	movwf	??___ftmul
  1307  07B5  082A               	movf	??___ftmul,w
  1308  07B6  00B2               	movwf	___ftmul@cntr
  1309  07B7                     l1051:	
  1310  07B7  1C24               	btfss	___ftmul@f1,0
  1311  07B8  2FC7               	goto	l1055
  1312  07B9  0827               	movf	___ftmul@f2,w
  1313  07BA  07AF               	addwf	___ftmul@f3_as_product,f
  1314  07BB  0828               	movf	___ftmul@f2+1,w
  1315  07BC  1103               	clrz
  1316  07BD  1803               	skipnc
  1317  07BE  0A28               	incf	___ftmul@f2+1,w
  1318  07BF  1D03               	btfss	3,2
  1319  07C0  07B0               	addwf	___ftmul@f3_as_product+1,f
  1320  07C1  0829               	movf	___ftmul@f2+2,w
  1321  07C2  1103               	clrz
  1322  07C3  1803               	skipnc
  1323  07C4  0A29               	incf	___ftmul@f2+2,w
  1324  07C5  1D03               	btfss	3,2
  1325  07C6  07B1               	addwf	___ftmul@f3_as_product+2,f
  1326  07C7                     l1055:	
  1327  07C7  3001               	movlw	1
  1328  07C8                     u1205:	
  1329  07C8  1003               	clrc
  1330  07C9  0CA6               	rrf	___ftmul@f1+2,f
  1331  07CA  0CA5               	rrf	___ftmul@f1+1,f
  1332  07CB  0CA4               	rrf	___ftmul@f1,f
  1333  07CC  3EFF               	addlw	-1
  1334  07CD  1D03               	skipz
  1335  07CE  2FC8               	goto	u1205
  1336  07CF  3001               	movlw	1
  1337  07D0                     u1215:	
  1338  07D0  1003               	clrc
  1339  07D1  0CB1               	rrf	___ftmul@f3_as_product+2,f
  1340  07D2  0CB0               	rrf	___ftmul@f3_as_product+1,f
  1341  07D3  0CAF               	rrf	___ftmul@f3_as_product,f
  1342  07D4  3EFF               	addlw	-1
  1343  07D5  1D03               	skipz
  1344  07D6  2FD0               	goto	u1215
  1345  07D7  3001               	movlw	1
  1346  07D8  02B2               	subwf	___ftmul@cntr,f
  1347  07D9  1D03               	btfss	3,2
  1348  07DA  2FB7               	goto	l1051
  1349  07DB  082F               	movf	___ftmul@f3_as_product,w
  1350  07DC  00F0               	movwf	___ftpack@arg
  1351  07DD  0830               	movf	___ftmul@f3_as_product+1,w
  1352  07DE  00F1               	movwf	___ftpack@arg+1
  1353  07DF  0831               	movf	___ftmul@f3_as_product+2,w
  1354  07E0  00F2               	movwf	___ftpack@arg+2
  1355  07E1  082E               	movf	___ftmul@exp,w
  1356  07E2  00AA               	movwf	??___ftmul
  1357  07E3  082A               	movf	??___ftmul,w
  1358  07E4  00F3               	movwf	___ftpack@exp
  1359  07E5  0833               	movf	___ftmul@sign,w
  1360  07E6  00AB               	movwf	??___ftmul+1
  1361  07E7  082B               	movf	??___ftmul+1,w
  1362  07E8  00F4               	movwf	___ftpack@sign
  1363  07E9  120A  118A  2529   	fcall	___ftpack
  1364  07EC  0870               	movf	?___ftpack,w
  1365  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1366  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1367  07EF  00A4               	movwf	?___ftmul
  1368  07F0  0871               	movf	?___ftpack+1,w
  1369  07F1  00A5               	movwf	?___ftmul+1
  1370  07F2  0872               	movf	?___ftpack+2,w
  1371  07F3  00A6               	movwf	?___ftmul+2
  1372  07F4  0008               	return
  1373  07F5                     __end_of___ftmul:	
  1374                           
  1375                           	psect	text5
  1376  047A                     __ptext5:	
  1377 ;; *************** function ___awtoft *****************
  1378 ;; Defined at:
  1379 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  c               2    8[COMMON] int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  sign            1   13[COMMON] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  3    8[COMMON] float 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         3       0       0       0       0
  1394 ;;      Locals:         1       0       0       0       0
  1395 ;;      Temps:          2       0       0       0       0
  1396 ;;      Totals:         6       0       0       0       0
  1397 ;;Total ram usage:        6 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    1
  1400 ;; This function calls:
  1401 ;;		___ftpack
  1402 ;; This function is called by:
  1403 ;;		_PWMControl
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function ___awtoft
  1409  047A                     ___awtoft:	
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1413  047A  01FD               	clrf	___awtoft@sign
  1414  047B  1FF9               	btfss	___awtoft@c+1,7
  1415  047C  2C84               	goto	l1011
  1416  047D  09F8               	comf	___awtoft@c,f
  1417  047E  09F9               	comf	___awtoft@c+1,f
  1418  047F  0AF8               	incf	___awtoft@c,f
  1419  0480  1903               	skipnz
  1420  0481  0AF9               	incf	___awtoft@c+1,f
  1421  0482  01FD               	clrf	___awtoft@sign
  1422  0483  0AFD               	incf	___awtoft@sign,f
  1423  0484                     l1011:	
  1424  0484  0878               	movf	___awtoft@c,w
  1425  0485  00F0               	movwf	___ftpack@arg
  1426  0486  0879               	movf	___awtoft@c+1,w
  1427  0487  00F1               	movwf	___ftpack@arg+1
  1428  0488  01F2               	clrf	___ftpack@arg+2
  1429  0489  308E               	movlw	142
  1430  048A  00FB               	movwf	??___awtoft
  1431  048B  087B               	movf	??___awtoft,w
  1432  048C  00F3               	movwf	___ftpack@exp
  1433  048D  087D               	movf	___awtoft@sign,w
  1434  048E  00FC               	movwf	??___awtoft+1
  1435  048F  087C               	movf	??___awtoft+1,w
  1436  0490  00F4               	movwf	___ftpack@sign
  1437  0491  120A  118A  2529   	fcall	___ftpack
  1438  0494  0870               	movf	?___ftpack,w
  1439  0495  00F8               	movwf	?___awtoft
  1440  0496  0871               	movf	?___ftpack+1,w
  1441  0497  00F9               	movwf	?___awtoft+1
  1442  0498  0872               	movf	?___ftpack+2,w
  1443  0499  00FA               	movwf	?___awtoft+2
  1444  049A  0008               	return
  1445  049B                     __end_of___awtoft:	
  1446                           
  1447                           	psect	text6
  1448  0529                     __ptext6:	
  1449 ;; *************** function ___ftpack *****************
  1450 ;; Defined at:
  1451 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  arg             3    0[COMMON] unsigned um
  1454 ;;  exp             1    3[COMMON] unsigned char 
  1455 ;;  sign            1    4[COMMON] unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  3    0[COMMON] float 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         5       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          3       0       0       0       0
  1470 ;;      Totals:         8       0       0       0       0
  1471 ;;Total ram usage:        8 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		___awtoft
  1477 ;;		___ftmul
  1478 ;;		___lbtoft
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function ___ftpack
  1484  0529                     ___ftpack:	
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1488  0529  0873               	movf	___ftpack@exp,w
  1489  052A  1903               	btfsc	3,2
  1490  052B  2D31               	goto	l965
  1491  052C  0872               	movf	___ftpack@arg+2,w
  1492  052D  0471               	iorwf	___ftpack@arg+1,w
  1493  052E  0470               	iorwf	___ftpack@arg,w
  1494  052F  1D03               	skipz
  1495  0530  2D44               	goto	l971
  1496  0531                     l965:	
  1497  0531  3000               	movlw	0
  1498  0532  00F0               	movwf	?___ftpack
  1499  0533  3000               	movlw	0
  1500  0534  00F1               	movwf	?___ftpack+1
  1501  0535  3000               	movlw	0
  1502  0536  00F2               	movwf	?___ftpack+2
  1503  0537  0008               	return
  1504  0538                     l969:	
  1505  0538  3001               	movlw	1
  1506  0539  00F5               	movwf	??___ftpack
  1507  053A  0875               	movf	??___ftpack,w
  1508  053B  07F3               	addwf	___ftpack@exp,f
  1509  053C  3001               	movlw	1
  1510  053D                     u975:	
  1511  053D  1003               	clrc
  1512  053E  0CF2               	rrf	___ftpack@arg+2,f
  1513  053F  0CF1               	rrf	___ftpack@arg+1,f
  1514  0540  0CF0               	rrf	___ftpack@arg,f
  1515  0541  3EFF               	addlw	-1
  1516  0542  1D03               	skipz
  1517  0543  2D3D               	goto	u975
  1518  0544                     l971:	
  1519  0544  30FE               	movlw	254
  1520  0545  0572               	andwf	___ftpack@arg+2,w
  1521  0546  1903               	btfsc	3,2
  1522  0547  2D5F               	goto	l445
  1523  0548  2D38               	goto	l969
  1524  0549                     l973:	
  1525  0549  3001               	movlw	1
  1526  054A  00F5               	movwf	??___ftpack
  1527  054B  0875               	movf	??___ftpack,w
  1528  054C  07F3               	addwf	___ftpack@exp,f
  1529  054D  3001               	movlw	1
  1530  054E  07F0               	addwf	___ftpack@arg,f
  1531  054F  3000               	movlw	0
  1532  0550  1803               	skipnc
  1533  0551  3001               	movlw	1
  1534  0552  07F1               	addwf	___ftpack@arg+1,f
  1535  0553  3000               	movlw	0
  1536  0554  1803               	skipnc
  1537  0555  3001               	movlw	1
  1538  0556  07F2               	addwf	___ftpack@arg+2,f
  1539  0557  3001               	movlw	1
  1540  0558                     u995:	
  1541  0558  1003               	clrc
  1542  0559  0CF2               	rrf	___ftpack@arg+2,f
  1543  055A  0CF1               	rrf	___ftpack@arg+1,f
  1544  055B  0CF0               	rrf	___ftpack@arg,f
  1545  055C  3EFF               	addlw	-1
  1546  055D  1D03               	skipz
  1547  055E  2D58               	goto	u995
  1548  055F                     l445:	
  1549  055F  30FF               	movlw	255
  1550  0560  0572               	andwf	___ftpack@arg+2,w
  1551  0561  1903               	btfsc	3,2
  1552  0562  2D6E               	goto	l981
  1553  0563  2D49               	goto	l973
  1554  0564                     l979:	
  1555  0564  3001               	movlw	1
  1556  0565  02F3               	subwf	___ftpack@exp,f
  1557  0566  3001               	movlw	1
  1558  0567                     u1015:	
  1559  0567  1003               	clrc
  1560  0568  0DF0               	rlf	___ftpack@arg,f
  1561  0569  0DF1               	rlf	___ftpack@arg+1,f
  1562  056A  0DF2               	rlf	___ftpack@arg+2,f
  1563  056B  3EFF               	addlw	-1
  1564  056C  1D03               	skipz
  1565  056D  2D67               	goto	u1015
  1566  056E                     l981:	
  1567  056E  1BF1               	btfsc	___ftpack@arg+1,7
  1568  056F  2D74               	goto	l452
  1569  0570  3002               	movlw	2
  1570  0571  0273               	subwf	___ftpack@exp,w
  1571  0572  1803               	skipnc
  1572  0573  2D64               	goto	l979
  1573  0574                     l452:	
  1574  0574  1873               	btfsc	___ftpack@exp,0
  1575  0575  2D7C               	goto	l453
  1576  0576  30FF               	movlw	255
  1577  0577  05F0               	andwf	___ftpack@arg,f
  1578  0578  307F               	movlw	127
  1579  0579  05F1               	andwf	___ftpack@arg+1,f
  1580  057A  30FF               	movlw	255
  1581  057B  05F2               	andwf	___ftpack@arg+2,f
  1582  057C                     l453:	
  1583  057C  1003               	clrc
  1584  057D  0CF3               	rrf	___ftpack@exp,f
  1585  057E  0873               	movf	___ftpack@exp,w
  1586  057F  00F5               	movwf	??___ftpack
  1587  0580  01F6               	clrf	??___ftpack+1
  1588  0581  01F7               	clrf	??___ftpack+2
  1589  0582  3010               	movlw	16
  1590  0583                     u1055:	
  1591  0583  1003               	clrc
  1592  0584  0DF5               	rlf	??___ftpack,f
  1593  0585  0DF6               	rlf	??___ftpack+1,f
  1594  0586  0DF7               	rlf	??___ftpack+2,f
  1595  0587  3EFF               	addlw	-1
  1596  0588  1D03               	skipz
  1597  0589  2D83               	goto	u1055
  1598  058A  0875               	movf	??___ftpack,w
  1599  058B  04F0               	iorwf	___ftpack@arg,f
  1600  058C  0876               	movf	??___ftpack+1,w
  1601  058D  04F1               	iorwf	___ftpack@arg+1,f
  1602  058E  0877               	movf	??___ftpack+2,w
  1603  058F  04F2               	iorwf	___ftpack@arg+2,f
  1604  0590  0874               	movf	___ftpack@sign,w
  1605  0591  1903               	btfsc	3,2
  1606  0592  0008               	return
  1607  0593  17F2               	bsf	___ftpack@arg+2,7
  1608  0594  0008               	return
  1609  0595                     __end_of___ftpack:	
  1610                           
  1611                           	psect	text7
  1612  049B                     __ptext7:	
  1613 ;; *************** function _LCDPrint *****************
  1614 ;; Defined at:
  1615 ;;		line 76 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  y               1    wreg     unsigned char 
  1618 ;;  x               1    0[BANK0 ] unsigned char 
  1619 ;;  str             2    1[BANK0 ] PTR unsigned char 
  1620 ;;		 -> ftoa@buf(17), STR_3(9), STR_2(10), LCDPrintNumber@str(7), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  y               1    3[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       3       0       0       0
  1633 ;;      Locals:         0       1       0       0       0
  1634 ;;      Temps:          1       0       0       0       0
  1635 ;;      Totals:         1       4       0       0       0
  1636 ;;Total ram usage:        5 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    4
  1639 ;; This function calls:
  1640 ;;		_LCDMove
  1641 ;;		_LCDPutChar
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;;		_LCDPrintNumber
  1645 ;;		_LCDPrintFNumber
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _LCDPrint
  1651  049B                     _LCDPrint:	
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _LCDPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1655                           ;LCDPrint@y stored from wreg
  1656  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1657  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1658  049D  00A3               	movwf	LCDPrint@y
  1659                           
  1660                           ;MyLCD.c: 78: LCDMove(y,x);
  1661  049E  0820               	movf	LCDPrint@x,w
  1662  049F  00FD               	movwf	??_LCDPrint
  1663  04A0  087D               	movf	??_LCDPrint,w
  1664  04A1  00F5               	movwf	LCDMove@x
  1665  04A2  0823               	movf	LCDPrint@y,w
  1666  04A3  120A  118A  245A  120A  118A  	fcall	_LCDMove
  1667  04A8                     l1123:	
  1668                           ;MyLCD.c: 79: while(*str)
  1669                           
  1670  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1671  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1672  04AA  0822               	movf	LCDPrint@str+1,w
  1673  04AB  00FF               	movwf	127
  1674  04AC  0821               	movf	LCDPrint@str,w
  1675  04AD  0084               	movwf	4
  1676  04AE  120A  118A  2003  120A  118A  	fcall	stringtab
  1677  04B3  3A00               	xorlw	0
  1678  04B4  1903               	btfsc	3,2
  1679  04B5  0008               	return
  1680                           
  1681                           ;MyLCD.c: 80: {
  1682                           ;MyLCD.c: 81: LCDPutChar(*str);
  1683  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1684  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1685  04B8  0822               	movf	LCDPrint@str+1,w
  1686  04B9  00FF               	movwf	127
  1687  04BA  0821               	movf	LCDPrint@str,w
  1688  04BB  0084               	movwf	4
  1689  04BC  120A  118A  2003  120A  118A  	fcall	stringtab
  1690  04C1  120A  118A  23E5  120A  118A  	fcall	_LCDPutChar
  1691                           
  1692                           ;MyLCD.c: 82: str++;
  1693  04C6  3001               	movlw	1
  1694  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1695  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1696  04C9  07A1               	addwf	LCDPrint@str,f
  1697  04CA  1803               	skipnc
  1698  04CB  0AA2               	incf	LCDPrint@str+1,f
  1699  04CC  2CA8               	goto	l1123
  1700  04CD                     __end_of_LCDPrint:	
  1701                           
  1702                           	psect	text8
  1703  03E5                     __ptext8:	
  1704 ;; *************** function _LCDPutChar *****************
  1705 ;; Defined at:
  1706 ;;		line 72 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  ch              1    wreg     unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  ch              1    5[COMMON] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0, pclath, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         0       0       0       0       0
  1721 ;;      Locals:         1       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0
  1723 ;;      Totals:         1       0       0       0       0
  1724 ;;Total ram usage:        1 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    3
  1727 ;; This function calls:
  1728 ;;		_LCDWriteData
  1729 ;; This function is called by:
  1730 ;;		_LCDPrint
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _LCDPutChar
  1736  03E5                     _LCDPutChar:	
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  1740                           ;LCDPutChar@ch stored from wreg
  1741  03E5  00F5               	movwf	LCDPutChar@ch
  1742                           
  1743                           ;MyLCD.c: 74: LCDWriteData(ch);
  1744  03E6  0875               	movf	LCDPutChar@ch,w
  1745  03E7  120A  118A  23FC   	fcall	_LCDWriteData
  1746  03EA  0008               	return
  1747  03EB                     __end_of_LCDPutChar:	
  1748                           
  1749                           	psect	text9
  1750  03FC                     __ptext9:	
  1751 ;; *************** function _LCDWriteData *****************
  1752 ;; Defined at:
  1753 ;;		line 43 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  dt              1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  dt              1    4[COMMON] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         1       0       0       0       0
  1771 ;;Total ram usage:        1 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    2
  1774 ;; This function calls:
  1775 ;;		_LCDWriteByte
  1776 ;; This function is called by:
  1777 ;;		_LCDPutChar
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _LCDWriteData
  1783  03FC                     _LCDWriteData:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in _LCDWriteData: [wreg+status,2+status,0+pclath+cstack]
  1787                           ;LCDWriteData@dt stored from wreg
  1788  03FC  00F4               	movwf	LCDWriteData@dt
  1789                           
  1790                           ;MyLCD.c: 45: RD1=1;
  1791  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1792  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1793  03FF  1488               	bsf	8,1	;volatile
  1794                           
  1795                           ;MyLCD.c: 47: LCDWriteByte(dt);
  1796  0400  0874               	movf	LCDWriteData@dt,w
  1797  0401  120A  118A  260A   	fcall	_LCDWriteByte
  1798  0404  0008               	return
  1799  0405                     __end_of_LCDWriteData:	
  1800                           
  1801                           	psect	text10
  1802  045A                     __ptext10:	
  1803 ;; *************** function _LCDMove *****************
  1804 ;; Defined at:
  1805 ;;		line 66 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  y               1    wreg     unsigned char 
  1808 ;;  x               1    5[COMMON] unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  y               1   12[COMMON] unsigned char 
  1811 ;;  Ad              2   10[COMMON] unsigned int 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         1       0       0       0       0
  1822 ;;      Locals:         3       0       0       0       0
  1823 ;;      Temps:          4       0       0       0       0
  1824 ;;      Totals:         8       0       0       0       0
  1825 ;;Total ram usage:        8 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    3
  1828 ;; This function calls:
  1829 ;;		_LCDWriteCommand
  1830 ;; This function is called by:
  1831 ;;		_LCDPrint
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _LCDMove
  1837  045A                     _LCDMove:	
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in _LCDMove: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1841                           ;LCDMove@y stored from wreg
  1842  045A  00FC               	movwf	LCDMove@y
  1843                           
  1844                           ;MyLCD.c: 68: unsigned int Ad;
  1845                           ;MyLCD.c: 69: Ad = 64*(y-1)+(x-1)+0x80;
  1846  045B  087C               	movf	LCDMove@y,w
  1847  045C  00F6               	movwf	??_LCDMove
  1848  045D  01F7               	clrf	??_LCDMove+1
  1849  045E  3006               	movlw	6
  1850  045F  00FF               	movwf	127
  1851  0460                     u1075:	
  1852  0460  1003               	clrc
  1853  0461  0DF6               	rlf	??_LCDMove,f
  1854  0462  0DF7               	rlf	??_LCDMove+1,f
  1855  0463  0BFF               	decfsz	127,f
  1856  0464  2C60               	goto	u1075
  1857  0465  0875               	movf	LCDMove@x,w
  1858  0466  0776               	addwf	??_LCDMove,w
  1859  0467  00F8               	movwf	??_LCDMove+2
  1860  0468  3000               	movlw	0
  1861  0469  1803               	skipnc
  1862  046A  3001               	movlw	1
  1863  046B  0777               	addwf	??_LCDMove+1,w
  1864  046C  00F9               	movwf	??_LCDMove+3
  1865  046D  0878               	movf	??_LCDMove+2,w
  1866  046E  3E3F               	addlw	63
  1867  046F  00FA               	movwf	LCDMove@Ad
  1868  0470  0879               	movf	??_LCDMove+3,w
  1869  0471  1803               	skipnc
  1870  0472  3E01               	addlw	1
  1871  0473  3E00               	addlw	0
  1872  0474  00FB               	movwf	LCDMove@Ad+1
  1873                           
  1874                           ;MyLCD.c: 70: LCDWriteCommand(Ad);
  1875  0475  087A               	movf	LCDMove@Ad,w
  1876  0476  120A  118A  23F3   	fcall	_LCDWriteCommand
  1877  0479  0008               	return
  1878  047A                     __end_of_LCDMove:	
  1879                           
  1880                           	psect	text11
  1881  043B                     __ptext11:	
  1882 ;; *************** function _LCDInit *****************
  1883 ;; Defined at:
  1884 ;;		line 5 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0
  1901 ;;      Totals:         0       0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    3
  1905 ;; This function calls:
  1906 ;;		_LCDMode4Bit
  1907 ;;		_LCDWriteCommand
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _LCDInit
  1915  043B                     _LCDInit:	
  1916                           
  1917                           ;MyLCD.c: 7: TRISD1 =0;
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  1921  043B  1683               	bsf	3,5	;RP0=1, select bank1
  1922  043C  1303               	bcf	3,6	;RP1=0, select bank1
  1923  043D  1088               	bcf	8,1	;volatile
  1924                           
  1925                           ;MyLCD.c: 8: TRISD2 =0;
  1926  043E  1108               	bcf	8,2	;volatile
  1927                           
  1928                           ;MyLCD.c: 9: TRISD3 =0;
  1929  043F  1188               	bcf	8,3	;volatile
  1930                           
  1931                           ;MyLCD.c: 10: TRISD4 =0;
  1932  0440  1208               	bcf	8,4	;volatile
  1933                           
  1934                           ;MyLCD.c: 11: TRISD5 =0;
  1935  0441  1288               	bcf	8,5	;volatile
  1936                           
  1937                           ;MyLCD.c: 12: TRISD6 =0;
  1938  0442  1308               	bcf	8,6	;volatile
  1939                           
  1940                           ;MyLCD.c: 13: TRISD7 =0;
  1941  0443  1388               	bcf	8,7	;volatile
  1942                           
  1943                           ;MyLCD.c: 15: LCDMode4Bit();
  1944  0444  120A  118A  2405  120A  118A  	fcall	_LCDMode4Bit
  1945                           
  1946                           ;MyLCD.c: 16: LCDWriteCommand(0x28);
  1947  0449  3028               	movlw	40
  1948  044A  120A  118A  23F3  120A  118A  	fcall	_LCDWriteCommand
  1949                           
  1950                           ;MyLCD.c: 17: LCDWriteCommand(0x0C);
  1951  044F  300C               	movlw	12
  1952  0450  120A  118A  23F3  120A  118A  	fcall	_LCDWriteCommand
  1953                           
  1954                           ;MyLCD.c: 18: LCDWriteCommand(0x06);
  1955  0455  3006               	movlw	6
  1956  0456  120A  118A  23F3   	fcall	_LCDWriteCommand
  1957  0459  0008               	return
  1958  045A                     __end_of_LCDInit:	
  1959                           
  1960                           	psect	text12
  1961  0405                     __ptext12:	
  1962 ;; *************** function _LCDMode4Bit *****************
  1963 ;; Defined at:
  1964 ;;		line 20 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         0       0       0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    1
  1985 ;; This function calls:
  1986 ;;		_LCDLatchData
  1987 ;; This function is called by:
  1988 ;;		_LCDInit
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _LCDMode4Bit
  1994  0405                     _LCDMode4Bit:	
  1995                           
  1996                           ;MyLCD.c: 22: RD1=0;
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _LCDMode4Bit: [wreg+status,2+status,0+pclath+cstack]
  2000  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0407  1088               	bcf	8,1	;volatile
  2003                           
  2004                           ;MyLCD.c: 23: RD2=0;
  2005  0408  1108               	bcf	8,2	;volatile
  2006                           
  2007                           ;MyLCD.c: 24: RD4=0;
  2008  0409  1208               	bcf	8,4	;volatile
  2009                           
  2010                           ;MyLCD.c: 25: RD5=1;
  2011  040A  1688               	bsf	8,5	;volatile
  2012                           
  2013                           ;MyLCD.c: 26: RD6=0;
  2014  040B  1308               	bcf	8,6	;volatile
  2015                           
  2016                           ;MyLCD.c: 27: RD7=0;
  2017  040C  1388               	bcf	8,7	;volatile
  2018                           
  2019                           ;MyLCD.c: 28: LCDLatchData();
  2020  040D  120A  118A  2411   	fcall	_LCDLatchData
  2021  0410  0008               	return
  2022  0411                     __end_of_LCDMode4Bit:	
  2023                           
  2024                           	psect	text13
  2025  03E0                     __ptext13:	
  2026 ;; *************** function _LCDClear *****************
  2027 ;; Defined at:
  2028 ;;		line 62 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    3
  2049 ;; This function calls:
  2050 ;;		_LCDWriteCommand
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _LCDClear
  2058  03E0                     _LCDClear:	
  2059                           
  2060                           ;MyLCD.c: 64: LCDWriteCommand(0x01);
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  2064  03E0  3001               	movlw	1
  2065  03E1  120A  118A  23F3   	fcall	_LCDWriteCommand
  2066  03E4  0008               	return
  2067  03E5                     __end_of_LCDClear:	
  2068                           
  2069                           	psect	text14
  2070  03F3                     __ptext14:	
  2071 ;; *************** function _LCDWriteCommand *****************
  2072 ;; Defined at:
  2073 ;;		line 49 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  dt              1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  dt              1    4[COMMON] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         1       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         1       0       0       0       0
  2091 ;;Total ram usage:        1 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    2
  2094 ;; This function calls:
  2095 ;;		_LCDWriteByte
  2096 ;; This function is called by:
  2097 ;;		_LCDInit
  2098 ;;		_LCDClear
  2099 ;;		_LCDMove
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _LCDWriteCommand
  2105  03F3                     _LCDWriteCommand:	
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _LCDWriteCommand: [wreg+status,2+status,0+pclath+cstack]
  2109                           ;LCDWriteCommand@dt stored from wreg
  2110  03F3  00F4               	movwf	LCDWriteCommand@dt
  2111                           
  2112                           ;MyLCD.c: 51: RD1=0;
  2113  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2114  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2115  03F6  1088               	bcf	8,1	;volatile
  2116                           
  2117                           ;MyLCD.c: 53: LCDWriteByte(dt);
  2118  03F7  0874               	movf	LCDWriteCommand@dt,w
  2119  03F8  120A  118A  260A   	fcall	_LCDWriteByte
  2120  03FB  0008               	return
  2121  03FC                     __end_of_LCDWriteCommand:	
  2122                           
  2123                           	psect	text15
  2124  060A                     __ptext15:	
  2125 ;; *************** function _LCDWriteByte *****************
  2126 ;; Defined at:
  2127 ;;		line 30 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  ch              1    wreg     unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  ch              1    3[COMMON] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         1       0       0       0       0
  2143 ;;      Temps:          1       0       0       0       0
  2144 ;;      Totals:         2       0       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    1
  2148 ;; This function calls:
  2149 ;;		_LCDLatchData
  2150 ;; This function is called by:
  2151 ;;		_LCDWriteData
  2152 ;;		_LCDWriteCommand
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _LCDWriteByte
  2158  060A                     _LCDWriteByte:	
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _LCDWriteByte: [wreg+status,2+status,0+pclath+cstack]
  2162                           ;LCDWriteByte@ch stored from wreg
  2163  060A  00F3               	movwf	LCDWriteByte@ch
  2164                           
  2165                           ;MyLCD.c: 32: RD7 = (ch>>7)&0x01;
  2166  060B  0873               	movf	LCDWriteByte@ch,w
  2167  060C  00F2               	movwf	??_LCDWriteByte
  2168  060D  3007               	movlw	7
  2169  060E                     u725:	
  2170  060E  1003               	clrc
  2171  060F  0CF2               	rrf	??_LCDWriteByte,f
  2172  0610  3EFF               	addlw	-1
  2173  0611  1D03               	skipz
  2174  0612  2E0E               	goto	u725
  2175  0613  1C72               	btfss	??_LCDWriteByte,0
  2176  0614  2E19               	goto	u730
  2177  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0617  1788               	bsf	8,7	;volatile
  2180  0618  2E1C               	goto	u744
  2181  0619                     u730:	
  2182  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2183  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2184  061B  1388               	bcf	8,7	;volatile
  2185  061C                     u744:	
  2186                           
  2187                           ;MyLCD.c: 33: RD6 = (ch>>6)&0x01;
  2188  061C  0873               	movf	LCDWriteByte@ch,w
  2189  061D  00F2               	movwf	??_LCDWriteByte
  2190  061E  3006               	movlw	6
  2191  061F                     u755:	
  2192  061F  1003               	clrc
  2193  0620  0CF2               	rrf	??_LCDWriteByte,f
  2194  0621  3EFF               	addlw	-1
  2195  0622  1D03               	skipz
  2196  0623  2E1F               	goto	u755
  2197  0624  1C72               	btfss	??_LCDWriteByte,0
  2198  0625  2E2A               	goto	u760
  2199  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0628  1708               	bsf	8,6	;volatile
  2202  0629  2E2D               	goto	u774
  2203  062A                     u760:	
  2204  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2205  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2206  062C  1308               	bcf	8,6	;volatile
  2207  062D                     u774:	
  2208                           
  2209                           ;MyLCD.c: 34: RD5 = (ch>>5)&0x01;
  2210  062D  0873               	movf	LCDWriteByte@ch,w
  2211  062E  00F2               	movwf	??_LCDWriteByte
  2212  062F  3005               	movlw	5
  2213  0630                     u785:	
  2214  0630  1003               	clrc
  2215  0631  0CF2               	rrf	??_LCDWriteByte,f
  2216  0632  3EFF               	addlw	-1
  2217  0633  1D03               	skipz
  2218  0634  2E30               	goto	u785
  2219  0635  1C72               	btfss	??_LCDWriteByte,0
  2220  0636  2E3B               	goto	u790
  2221  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0639  1688               	bsf	8,5	;volatile
  2224  063A  2E3E               	goto	u804
  2225  063B                     u790:	
  2226  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2227  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2228  063D  1288               	bcf	8,5	;volatile
  2229  063E                     u804:	
  2230                           
  2231                           ;MyLCD.c: 35: RD4 = (ch>>4)&0x01;
  2232  063E  0873               	movf	LCDWriteByte@ch,w
  2233  063F  00F2               	movwf	??_LCDWriteByte
  2234  0640  3004               	movlw	4
  2235  0641                     u815:	
  2236  0641  1003               	clrc
  2237  0642  0CF2               	rrf	??_LCDWriteByte,f
  2238  0643  3EFF               	addlw	-1
  2239  0644  1D03               	skipz
  2240  0645  2E41               	goto	u815
  2241  0646  1C72               	btfss	??_LCDWriteByte,0
  2242  0647  2E4C               	goto	u820
  2243  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2245  064A  1608               	bsf	8,4	;volatile
  2246  064B  2E4F               	goto	l943
  2247  064C                     u820:	
  2248  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2249  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2250  064E  1208               	bcf	8,4	;volatile
  2251  064F                     l943:	
  2252                           
  2253                           ;MyLCD.c: 36: LCDLatchData();
  2254  064F  120A  118A  2411  120A  118A  	fcall	_LCDLatchData
  2255                           
  2256                           ;MyLCD.c: 37: RD7 = (ch>>3)&0x01;
  2257  0654  0873               	movf	LCDWriteByte@ch,w
  2258  0655  00F2               	movwf	??_LCDWriteByte
  2259  0656  3003               	movlw	3
  2260  0657                     u845:	
  2261  0657  1003               	clrc
  2262  0658  0CF2               	rrf	??_LCDWriteByte,f
  2263  0659  3EFF               	addlw	-1
  2264  065A  1D03               	skipz
  2265  065B  2E57               	goto	u845
  2266  065C  1C72               	btfss	??_LCDWriteByte,0
  2267  065D  2E62               	goto	u850
  2268  065E  1283               	bcf	3,5	;RP0=0, select bank0
  2269  065F  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0660  1788               	bsf	8,7	;volatile
  2271  0661  2E65               	goto	l947
  2272  0662                     u850:	
  2273  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0664  1388               	bcf	8,7	;volatile
  2276  0665                     l947:	
  2277                           
  2278                           ;MyLCD.c: 38: RD6 = (ch>>2)&0x01;
  2279  0665  0873               	movf	LCDWriteByte@ch,w
  2280  0666  00F2               	movwf	??_LCDWriteByte
  2281  0667  3002               	movlw	2
  2282  0668                     u875:	
  2283  0668  1003               	clrc
  2284  0669  0CF2               	rrf	??_LCDWriteByte,f
  2285  066A  3EFF               	addlw	-1
  2286  066B  1D03               	skipz
  2287  066C  2E68               	goto	u875
  2288  066D  1C72               	btfss	??_LCDWriteByte,0
  2289  066E  2E73               	goto	u880
  2290  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0671  1708               	bsf	8,6	;volatile
  2293  0672  2E76               	goto	l949
  2294  0673                     u880:	
  2295  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0675  1308               	bcf	8,6	;volatile
  2298  0676                     l949:	
  2299                           
  2300                           ;MyLCD.c: 39: RD5 = (ch>>1)&0x01;
  2301  0676  0873               	movf	LCDWriteByte@ch,w
  2302  0677  00F2               	movwf	??_LCDWriteByte
  2303  0678  3001               	movlw	1
  2304  0679                     u905:	
  2305  0679  1003               	clrc
  2306  067A  0CF2               	rrf	??_LCDWriteByte,f
  2307  067B  3EFF               	addlw	-1
  2308  067C  1D03               	skipz
  2309  067D  2E79               	goto	u905
  2310  067E  1C72               	btfss	??_LCDWriteByte,0
  2311  067F  2E84               	goto	u910
  2312  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0682  1688               	bsf	8,5	;volatile
  2315  0683  2E87               	goto	l951
  2316  0684                     u910:	
  2317  0684  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0685  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0686  1288               	bcf	8,5	;volatile
  2320  0687                     l951:	
  2321                           
  2322                           ;MyLCD.c: 40: RD4 = ch&0x01;
  2323  0687  1C73               	btfss	LCDWriteByte@ch,0
  2324  0688  2E8D               	goto	u930
  2325  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2326  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2327  068B  1608               	bsf	8,4	;volatile
  2328  068C  2E90               	goto	u944
  2329  068D                     u930:	
  2330  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2331  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2332  068F  1208               	bcf	8,4	;volatile
  2333  0690                     u944:	
  2334                           
  2335                           ;MyLCD.c: 41: LCDLatchData();
  2336  0690  120A  118A  2411   	fcall	_LCDLatchData
  2337  0693  0008               	return
  2338  0694                     __end_of_LCDWriteByte:	
  2339                           
  2340                           	psect	text16
  2341  0411                     __ptext16:	
  2342 ;; *************** function _LCDLatchData *****************
  2343 ;; Defined at:
  2344 ;;		line 55 in file "A:\PIC_MPlap\LCD\MyLCD.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          2       0       0       0       0
  2361 ;;      Totals:         2       0       0       0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_LCDMode4Bit
  2368 ;;		_LCDWriteByte
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _LCDLatchData
  2374  0411                     _LCDLatchData:	
  2375                           
  2376                           ;MyLCD.c: 58: RD3=1;
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _LCDLatchData: [wreg]
  2380  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0413  1588               	bsf	8,3	;volatile
  2383                           
  2384                           ;MyLCD.c: 59: RD3=0;
  2385  0414  1188               	bcf	8,3	;volatile
  2386                           
  2387                           ;MyLCD.c: 60: _delay((unsigned long)((2)*(4000000/4000.0)));
  2388  0415  3003               	movlw	3
  2389  0416  00F1               	movwf	??_LCDLatchData+1
  2390  0417  3097               	movlw	151
  2391  0418  00F0               	movwf	??_LCDLatchData
  2392  0419                     u1457:	
  2393  0419  0BF0               	decfsz	??_LCDLatchData,f
  2394  041A  2C19               	goto	u1457
  2395  041B  0BF1               	decfsz	??_LCDLatchData+1,f
  2396  041C  2C19               	goto	u1457
  2397  041D  2C1E               	nop2
  2398  041E  0008               	return
  2399  041F                     __end_of_LCDLatchData:	
  2400  007E                     btemp	set	126	;btemp
  2401  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    40
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    LCDPrint@str	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_3(CODE[9]), STR_2(CODE[10]), LCDPrintNumber@str(COMMON[7]), 


Critical Paths under _main in COMMON

    _main->_LCDPrint
    _PWMControl->___awtoft
    ___lbtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _LCDPrint->_LCDMove
    _LCDPutChar->_LCDWriteData
    _LCDWriteData->_LCDWriteByte
    _LCDMove->_LCDWriteCommand
    _LCDInit->_LCDWriteCommand
    _LCDMode4Bit->_LCDLatchData
    _LCDClear->_LCDWriteCommand
    _LCDWriteCommand->_LCDWriteByte
    _LCDWriteByte->_LCDLatchData

Critical Paths under _main in BANK0

    _main->_PWMControl
    _PWMControl->___fttol
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7913
                                             40 BANK0      3     3      0
                           _LCDClear
                            _LCDInit
                           _LCDPrint
                         _PWMControl
 ---------------------------------------------------------------------------------
 (1) _PWMControl                                           6     5      1    6466
                                             34 BANK0      6     5      1
                           ___awtoft
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    1690
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     438
                                             20 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2286
                                              4 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCDPrint                                             5     2      3    1051
                                             13 COMMON     1     1      0
                                              0 BANK0      4     1      3
                            _LCDMove
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           1     1      0     220
                                              5 COMMON     1     1      0
                       _LCDWriteData
 ---------------------------------------------------------------------------------
 (3) _LCDWriteData                                         1     1      0     198
                                              4 COMMON     1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (2) _LCDMove                                              8     7      1     318
                                              5 COMMON     8     7      1
                    _LCDWriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              0     0      0     198
                        _LCDMode4Bit
                    _LCDWriteCommand
 ---------------------------------------------------------------------------------
 (2) _LCDMode4Bit                                          0     0      0       0
                       _LCDLatchData
 ---------------------------------------------------------------------------------
 (1) _LCDClear                                             0     0      0     198
                    _LCDWriteCommand
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCommand                                      1     1      0     198
                                              4 COMMON     1     1      0
                       _LCDWriteByte
 ---------------------------------------------------------------------------------
 (4) _LCDWriteByte                                         2     2      0     176
                                              2 COMMON     2     2      0
                       _LCDLatchData
 ---------------------------------------------------------------------------------
 (5) _LCDLatchData                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDClear
     _LCDWriteCommand
       _LCDWriteByte
         _LCDLatchData
   _LCDInit
     _LCDMode4Bit
       _LCDLatchData
     _LCDWriteCommand
       _LCDWriteByte
         _LCDLatchData
   _LCDPrint
     _LCDMove
       _LCDWriteCommand
         _LCDWriteByte
           _LCDLatchData
     _LCDPutChar
       _LCDWriteData
         _LCDWriteByte
           _LCDLatchData
   _PWMControl
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      3D       5       76.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 08 08:50:41 2017

              _PWMControl 0595                         _i 004B                         pc 0002  
             __CFG_CP$OFF 0000               ?_LCDPutChar 0070                        fsr 0004  
                     l452 0574                       l453 057C                       l445 055F  
                     l544 0708                       l951 0687                       l943 064F  
                     l947 0665                       l971 0544                       l949 0676  
                     l981 056E                       l973 0549                       l965 0531  
                     l969 0538                       l979 0564                       _RC1 0039  
                     _RC2 003A                       _RD1 0041                       _RD2 0042  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _PR2 0092  
            __CFG_CPD$OFF 0000                       u730 0619                       u820 064C  
                     u804 063E                       u725 060E                       u910 0684  
                     u815 0641                       u760 062A                       u744 061C  
                     u905 0679                       u930 068D                       u850 0662  
                     u755 061F                       u845 0657                       u790 063B  
                     u774 062D                       u944 0690                       u880 0673  
                     u785 0630                       u875 0668                       u975 053D  
                     u995 0558                       fsr0 0004                       indf 0000  
            __CFG_FOSC$HS 0000           __end_of_LCDInit 045A              __CFG_LVP$OFF 0000  
         __end_of_LCDMove 047A                      l1011 0484                      l1021 073A  
                    l1103 0719                      l1123 04A8                      l1051 07B7  
                    l1043 079F                      l1027 0750                      l1055 07C7  
                    l1039 078F                      l1071 06AE                      l1135 0600  
                    l1129 05B8                      l1091 06F0                      l1183 04F7  
                    l1097 06FD                      l1089 06E0                      l1099 070B  
                    STR_1 0059                      STR_2 0046                      STR_3 0050  
                    STR_4 003B                      u1015 0567                      u1115 075C  
                    u1205 07C8                      u1125 076E                      u1055 0583  
                    u1215 07D0                      u1305 06FF                      u1075 0460  
                    u1155 07A0                      u1165 07A8                      u1245 06B5  
                    u1350 05FD                      u1370 0606                      u1275 06E1  
                    u1437 050A                      u1447 0522                      u1457 0419  
            __CFG_WRT$OFF 0000                      _main 04CD              ___ftpack@arg 0070  
            ___ftpack@exp 0073                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0000            ??_LCDLatchData 0070              ___ftmul@cntr 0032  
            ___ftmul@sign 0033          __end_of_LCDClear 03E5              ___fttol@exp1 0041  
            ___fttol@lval 003D             ?_LCDWriteData 0070             ?_LCDWriteByte 0070  
        __end_of_LCDPrint 04CD               LCDPrint@str 0021                     ?_main 0070  
                   _CCP1X 00BD                     _CCP1Y 00BC             __CFG_WDTE$OFF 0000  
         __end_of___ftmul 07F5           __end_of___fttol 0722             ___awtoft@sign 007D  
         __end_of_dpowers 003B             ___ftpack@sign 0074                     pclath 000A  
     __size_of_LCDPutChar 0006                     status 0003                     wtemp0 007E  
       ??_LCDWriteCommand 0074           __initialization 07F5               ?_PWMControl 0042  
            __end_of_main 0529            ??_LCDWriteData 0074            ??_LCDWriteByte 0072  
                  ??_main 0048             ___fttol@sign1 003C                 ??_LCDInit 0075  
               ??_LCDMove 0076              LCDPutChar@ch 0075                    _CCP1M0 00B8  
                  _CCP1M1 00B9                    _CCP1M2 00BA                    _CCP1M3 00BB  
                  _CCPR1L 0015          __end_of___awtoft 049B          __end_of___ftpack 0595  
        __end_of___lbtoft 043B                    _TMR2ON 0092                    _TRISC1 0439  
                  _TRISC2 043A                    _TRISD1 0441                    _TRISD2 0442  
                  _TRISD3 0443                    _TRISD4 0444                    _TRISD5 0445  
                  _TRISD6 0446                    _TRISD7 0447            __CFG_PWRTE$OFF 0000  
               ??___ftmul 002A                 ??___fttol 0038      __size_of_LCDMode4Bit 000C  
   ___ftmul@f3_as_product 002F      __end_of_LCDLatchData 041F       __size_of_PWMControl 0075  
               ?_LCDClear 0070   __end_of__initialization 07FC                 ?_LCDPrint 0020  
              ___awtoft@c 0078                ___lbtoft@c 007B                 LCDMove@Ad 007A  
              ___ftmul@f1 0024                ___ftmul@f2 0027                ___fttol@f1 0034  
          __pcstackCOMMON 0070                 LCDPrint@x 0020                 LCDPrint@y 0023  
            ??_LCDPutChar 0075      __end_of_LCDWriteData 0405                __pbssBANK0 004B  
    __end_of_LCDWriteByte 0694                ??_LCDClear 0075        __end_of_LCDPutChar 03EB  
              ??_LCDPrint 007D         LCDWriteCommand@dt 0074                __pmaintext 04CD  
           PWMControl@sig 0042                 ?___awtoft 0078                 ?___ftpack 0070  
               ?___lbtoft 0078                   _T2CKPS0 0090                   _T2CKPS1 0091  
                 _LCDInit 043B                   _LCDMove 045A           _LCDWriteCommand 03F3  
              __stringtab 0003              ??_PWMControl 0043                   ___ftmul 0722  
                 ___fttol 0694                ??___awtoft 007B                ??___ftpack 0075  
              ??___lbtoft 0020     __size_of_LCDLatchData 000E                   __ptext1 0595  
                 __ptext2 041F                   __ptext3 0694                   __ptext4 0722  
                 __ptext5 047A                   __ptext6 0529                   __ptext7 049B  
                 __ptext8 03E5                   __ptext9 03FC                   _dpowers 0013  
                 clrloop0 03EC      end_of_initialization 07FC                   ftoa@buf 004C  
      __end_of_PWMControl 060A              _LCDLatchData 0411         PWMControl@PWM_Reg 0046  
 __end_of_LCDWriteCommand 03FC     __size_of_LCDWriteData 0009     __size_of_LCDWriteByte 008A  
       __size_of_LCDClear 0005         __size_of_LCDPrint 0032             ??_LCDMode4Bit 0072  
             ___ftmul@exp 002E         PWMControl@percent 0045              _LCDWriteData 03FC  
            _LCDWriteByte 060A       start_initialization 07F5       __end_of_LCDMode4Bit 0411  
       __size_of___awtoft 0021                  ?_LCDInit 0070         __size_of___ftpack 006C  
       __size_of___lbtoft 001C                  ?_LCDMove 0075          ?_LCDWriteCommand 0070  
               ___latbits 0002             __pcstackBANK0 0020                  LCDMove@x 0075  
                LCDMove@y 007C                  ?___ftmul 0024                  ?___fttol 0034  
               __pstrings 0003                  _LCDClear 03E0                  _LCDPrint 049B  
               clear_ram0 03EB               _LCDMode4Bit 0405               __stringbase 0012  
        __size_of_LCDInit 001F          __size_of_LCDMove 0020          __size_of___ftmul 00D3  
        __size_of___fttol 008E                  ___awtoft 047A                  ___ftpack 0529  
                ___lbtoft 041F        __end_of__stringtab 0013                  __ptext10 045A  
                __ptext11 043B                  __ptext12 0405                  __ptext13 03E0  
                __ptext14 03F3                  __ptext15 060A                  __ptext16 0411  
           __size_of_main 005C                _LCDPutChar 03E5            LCDWriteData@dt 0074  
          LCDWriteByte@ch 0073                 stringcode 000D                  stringdir 000D  
                stringtab 0003  __size_of_LCDWriteCommand 0009             ?_LCDLatchData 0070  
            ?_LCDMode4Bit 0070  
