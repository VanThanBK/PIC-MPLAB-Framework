

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 11 18:15:41 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  004A                     _RE2	set	74
   106  0049                     _RE1	set	73
   107  0048                     _RE0	set	72
   108  044A                     _TRISE2	set	1098
   109  0449                     _TRISE1	set	1097
   110  0448                     _TRISE0	set	1096
   111  04F8                     _PCFG0	set	1272
   112  04F9                     _PCFG1	set	1273
   113  04FA                     _PCFG2	set	1274
   114  04FB                     _PCFG3	set	1275
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  07FC                     start_initialization:	
   120  07FC                     __initialization:	
   121  07FC                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  07FC                     __end_of__initialization:	
   125  07FC  0183               	clrf	3
   126  07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   127                           
   128                           	psect	cstackCOMMON
   129  0070                     __pcstackCOMMON:	
   130  0070                     ?_HC595Init:	
   131  0070                     ??_HC595Init:	
   132                           ; 1 bytes @ 0x0
   133                           
   134  0070                     ?_Output595:	
   135                           ; 1 bytes @ 0x0
   136                           
   137  0070                     ??_Output595:	
   138                           ; 1 bytes @ 0x0
   139                           
   140  0070                     ?_main:	
   141                           ; 1 bytes @ 0x0
   142                           
   143                           
   144                           ; 1 bytes @ 0x0
   145  0070                     	ds	1
   146  0071                     Output595@dt:	
   147                           
   148                           ; 1 bytes @ 0x1
   149  0071                     	ds	1
   150  0072                     Output595@ch:	
   151                           
   152                           ; 1 bytes @ 0x2
   153  0072                     	ds	1
   154  0073                     Output595@i:	
   155                           
   156                           ; 2 bytes @ 0x3
   157  0073                     	ds	2
   158  0075                     ??_main:	
   159                           
   160                           ; 1 bytes @ 0x5
   161  0075                     	ds	3
   162                           
   163                           	psect	maintext
   164  07A3                     __pmaintext:	
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 48 in file "74HC595.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : B00/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   184 ;;      Params:         0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0
   186 ;;      Temps:          3       0       0       0       0
   187 ;;      Totals:         3       0       0       0       0
   188 ;;Total ram usage:        3 bytes
   189 ;; Hardware stack levels required when called:    1
   190 ;; This function calls:
   191 ;;		_HC595Init
   192 ;;		_Output595
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           
   199                           ;psect for function _main
   200  07A3                     _main:	
   201                           
   202                           ;74HC595.c: 51: PCFG3 = 0;
   203                           
   204                           ;incstack = 0
   205                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   206  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   207  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   208  07A5  119F               	bcf	31,3	;volatile
   209                           
   210                           ;74HC595.c: 52: PCFG2 = 1;
   211  07A6  151F               	bsf	31,2	;volatile
   212                           
   213                           ;74HC595.c: 53: PCFG1 = 1;
   214  07A7  149F               	bsf	31,1	;volatile
   215                           
   216                           ;74HC595.c: 54: PCFG0 = 0;
   217  07A8  101F               	bcf	31,0	;volatile
   218                           
   219                           ;74HC595.c: 55: HC595Init();
   220  07A9  120A  118A  2798  120A  118A  	fcall	_HC595Init
   221  07AE                     l535:	
   222                           ;74HC595.c: 56: while(1){
   223                           
   224                           
   225                           ;74HC595.c: 57: Output595(0x55);
   226  07AE  3055               	movlw	85
   227  07AF  120A  118A  27C2  120A  118A  	fcall	_Output595
   228                           
   229                           ;74HC595.c: 58: _delay((unsigned long)((100)*(20000000/4000.0)));
   230  07B4  3003               	movlw	3
   231  07B5  00F7               	movwf	??_main+2
   232  07B6  308A               	movlw	138
   233  07B7  00F6               	movwf	??_main+1
   234  07B8  3055               	movlw	85
   235  07B9  00F5               	movwf	??_main
   236  07BA                     u47:	
   237  07BA  0BF5               	decfsz	??_main,f
   238  07BB  2FBA               	goto	u47
   239  07BC  0BF6               	decfsz	??_main+1,f
   240  07BD  2FBA               	goto	u47
   241  07BE  0BF7               	decfsz	??_main+2,f
   242  07BF  2FBA               	goto	u47
   243  07C0  2FC1               	nop2
   244  07C1  2FAE               	goto	l535
   245  07C2                     __end_of_main:	
   246                           ;74HC595.c: 61: }
   247                           ;74HC595.c: 62: return;
   248                           
   249                           
   250                           	psect	text1
   251  07C2                     __ptext1:	
   252 ;; *************** function _Output595 *****************
   253 ;; Defined at:
   254 ;;		line 74 in file "74HC595.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;  dt              1    wreg     unsigned char 
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  dt              1    1[COMMON] unsigned char 
   259 ;;  i               2    3[COMMON] int 
   260 ;;  ch              1    2[COMMON] unsigned char 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, btemp+1
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         4       0       0       0       0
   272 ;;      Temps:          1       0       0       0       0
   273 ;;      Totals:         5       0       0       0       0
   274 ;;Total ram usage:        5 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;;		_Output2595
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           
   285                           ;psect for function _Output595
   286  07C2                     _Output595:	
   287                           
   288                           ;incstack = 0
   289                           ; Regs used in _Output595: [wreg+status,2+btemp+1]
   290                           ;Output595@dt stored from wreg
   291  07C2  00F1               	movwf	Output595@dt
   292                           
   293                           ;74HC595.c: 75: int i;
   294                           ;74HC595.c: 76: unsigned char ch;
   295                           ;74HC595.c: 77: RE1 = 0;
   296  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   297  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   298  07C5  1089               	bcf	9,1	;volatile
   299                           
   300                           ;74HC595.c: 78: for(i=0;i<8;i++){
   301  07C6  01F3               	clrf	Output595@i
   302  07C7  01F4               	clrf	Output595@i+1
   303  07C8  0874               	movf	Output595@i+1,w
   304  07C9  3A80               	xorlw	128
   305  07CA  00FF               	movwf	127
   306  07CB  3080               	movlw	128
   307  07CC  027F               	subwf	127,w
   308  07CD  1D03               	skipz
   309  07CE  2FD1               	goto	u15
   310  07CF  3008               	movlw	8
   311  07D0  0273               	subwf	Output595@i,w
   312  07D1                     u15:	
   313  07D1  1803               	btfsc	3,0
   314  07D2  2FF8               	goto	l41
   315  07D3                     l40:	
   316                           
   317                           ;74HC595.c: 79: RE0 = 0;
   318  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   319  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   320  07D5  1009               	bcf	9,0	;volatile
   321                           
   322                           ;74HC595.c: 80: ch = dt;
   323  07D6  0871               	movf	Output595@dt,w
   324  07D7  00F0               	movwf	??_Output595
   325  07D8  0870               	movf	??_Output595,w
   326  07D9  00F2               	movwf	Output595@ch
   327                           
   328                           ;74HC595.c: 81: if((ch&0x80)==0x80) RE2 = 1;
   329  07DA  1FF2               	btfss	Output595@ch,7
   330  07DB  2FDE               	goto	l42
   331  07DC  1509               	bsf	9,2	;volatile
   332  07DD  2FDF               	goto	l523
   333  07DE                     l42:	
   334                           
   335                           ;74HC595.c: 82: else RE2 =0;
   336  07DE  1109               	bcf	9,2	;volatile
   337  07DF                     l523:	
   338                           
   339                           ;74HC595.c: 83: dt <<= 1;
   340  07DF  1003               	clrc
   341  07E0  0DF1               	rlf	Output595@dt,f
   342                           
   343                           ;74HC595.c: 84: _delay((unsigned long)((1)*(20000000/4000000.0)));
   344  07E1  2FE2               	nop2	;2 cycle nop
   345  07E2  2FE3               	nop2	;2 cycle nop
   346  07E3  0000               	nop
   347                           
   348                           ;74HC595.c: 85: RE0 = 1;
   349  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   350  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   351  07E6  1409               	bsf	9,0	;volatile
   352  07E7  3001               	movlw	1
   353  07E8  07F3               	addwf	Output595@i,f
   354  07E9  1803               	skipnc
   355  07EA  0AF4               	incf	Output595@i+1,f
   356  07EB  3000               	movlw	0
   357  07EC  07F4               	addwf	Output595@i+1,f
   358  07ED  0874               	movf	Output595@i+1,w
   359  07EE  3A80               	xorlw	128
   360  07EF  00FF               	movwf	127
   361  07F0  3080               	movlw	128
   362  07F1  027F               	subwf	127,w
   363  07F2  1D03               	skipz
   364  07F3  2FF6               	goto	u35
   365  07F4  3008               	movlw	8
   366  07F5  0273               	subwf	Output595@i,w
   367  07F6                     u35:	
   368  07F6  1C03               	skipc
   369  07F7  2FD3               	goto	l40
   370  07F8                     l41:	
   371                           
   372                           ;74HC595.c: 86: }
   373                           ;74HC595.c: 87: RE1 = 1;
   374  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   375  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   376  07FA  1489               	bsf	9,1	;volatile
   377  07FB  0008               	return
   378  07FC                     __end_of_Output595:	
   379                           
   380                           	psect	text2
   381  0798                     __ptext2:	
   382 ;; *************** function _HC595Init *****************
   383 ;; Defined at:
   384 ;;		line 64 in file "74HC595.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		None
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _HC595Init
   413  0798                     _HC595Init:	
   414                           
   415                           ;74HC595.c: 66: TRISE0 = 0;
   416                           
   417                           ;incstack = 0
   418                           ; Regs used in _HC595Init: []
   419  0798  1683               	bsf	3,5	;RP0=1, select bank1
   420  0799  1303               	bcf	3,6	;RP1=0, select bank1
   421  079A  1009               	bcf	9,0	;volatile
   422                           
   423                           ;74HC595.c: 67: TRISE1 = 0;
   424  079B  1089               	bcf	9,1	;volatile
   425                           
   426                           ;74HC595.c: 68: TRISE2 = 0;
   427  079C  1109               	bcf	9,2	;volatile
   428                           
   429                           ;74HC595.c: 70: RE0 = 1;
   430  079D  1283               	bcf	3,5	;RP0=0, select bank0
   431  079E  1303               	bcf	3,6	;RP1=0, select bank0
   432  079F  1409               	bsf	9,0	;volatile
   433                           
   434                           ;74HC595.c: 71: RE1 = 1;
   435  07A0  1489               	bsf	9,1	;volatile
   436                           
   437                           ;74HC595.c: 72: RE2 = 1;
   438  07A1  1509               	bsf	9,2	;volatile
   439  07A2  0008               	return
   440  07A3                     __end_of_HC595Init:	
   441  007E                     btemp	set	126	;btemp
   442  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Output595

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      60
                                              5 COMMON     3     3      0
                          _HC595Init
                          _Output595
 ---------------------------------------------------------------------------------
 (1) _Output595                                            5     5      0      60
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _HC595Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HC595Init
   _Output595

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 11 18:15:41 2018

            __CFG_CP$OFF 0000                       l40 07D3                       l41 07F8  
                     l42 07DE                       u15 07D1                       u35 07F6  
                     u47 07BA                      l523 07DF                      l535 07AE  
                    _RE0 0048                      _RE1 0049                      _RE2 004A  
           __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 07A3                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PCFG0 04F8                    _PCFG1 04F9  
                  _PCFG2 04FA                    _PCFG3 04FB        __end_of_HC595Init 07A3  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07C2                   ??_main 0075                   _TRISE0 0448  
                 _TRISE1 0449                   _TRISE2 044A           __CFG_PWRTE$OFF 0000  
     __size_of_Output595 003A  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             Output595@i 0073               __pmaintext 07A3        __end_of_Output595 07FC  
              _HC595Init 0798                  __ptext1 07C2                  __ptext2 0798  
             ?_HC595Init 0070     end_of_initialization 07FC              Output595@ch 0072  
            Output595@dt 0071      start_initialization 07FC              ??_HC595Init 0070  
              _Output595 07C2                ___latbits 0002               ?_Output595 0070  
            ??_Output595 0070            __size_of_main 001F       __size_of_HC595Init 000B  
